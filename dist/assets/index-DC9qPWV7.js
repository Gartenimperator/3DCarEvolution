var Hm=Object.defineProperty;var Wm=(s,t,e)=>t in s?Hm(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e;var lt=(s,t,e)=>(Wm(s,typeof t!="symbol"?t+"":t,e),e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function e(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerPolicy&&(r.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?r.credentials="include":i.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(i){if(i.ep)return;i.ep=!0;const r=e(i);fetch(i.href,r)}})();/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const rc="151",rs={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},os={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Gm=0,Wc=1,qm=2,_f=1,jm=2,hr=3,_i=0,Ge=1,Jn=2,pi=0,Ds=1,Gc=2,qc=3,jc=4,Xm=5,Ts=100,Ym=101,$m=102,Xc=103,Yc=104,Km=200,Zm=201,Jm=202,Qm=203,xf=204,vf=205,tg=206,eg=207,ng=208,ig=209,sg=210,rg=0,og=1,ag=2,Pl=3,lg=4,cg=5,hg=6,ug=7,la=0,dg=1,fg=2,ii=0,pg=1,mg=2,gg=3,_g=4,xg=5,yf=300,zs=301,ks=302,Ll=303,Rl=304,ca=306,Tr=1e3,gn=1001,Dl=1002,Be=1003,$c=1004,Sa=1005,on=1006,vg=1007,Cr=1008,$i=1009,yg=1010,bg=1011,bf=1012,Mg=1013,Vi=1014,Hi=1015,Pr=1016,wg=1017,Sg=1018,Is=1020,Eg=1021,_n=1023,Ag=1024,Tg=1025,qi=1026,Ns=1027,Cg=1028,Pg=1029,Lg=1030,Rg=1031,Dg=1033,Ea=33776,Aa=33777,Ta=33778,Ca=33779,Kc=35840,Zc=35841,Jc=35842,Qc=35843,Ig=36196,th=37492,eh=37496,nh=37808,ih=37809,sh=37810,rh=37811,oh=37812,ah=37813,lh=37814,ch=37815,hh=37816,uh=37817,dh=37818,fh=37819,ph=37820,mh=37821,Pa=36492,Fg=36283,gh=36284,_h=36285,xh=36286,Ki=3e3,ee=3001,Og=3200,zg=3201,ha=0,kg=1,Rn="srgb",Lr="srgb-linear",Mf="display-p3",La=7680,Ng=519,vh=35044,yh="300 es",Il=1035;class ns{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){if(this._listeners===void 0)return;const i=this._listeners[t];if(i!==void 0){const r=i.indexOf(e);r!==-1&&i.splice(r,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const n=this._listeners[t.type];if(n!==void 0){t.target=this;const i=n.slice(0);for(let r=0,o=i.length;r<o;r++)i[r].call(this,t);t.target=null}}}const Re=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],Ra=Math.PI/180,Fl=180/Math.PI;function Vr(){const s=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Re[s&255]+Re[s>>8&255]+Re[s>>16&255]+Re[s>>24&255]+"-"+Re[t&255]+Re[t>>8&255]+"-"+Re[t>>16&15|64]+Re[t>>24&255]+"-"+Re[e&63|128]+Re[e>>8&255]+"-"+Re[e>>16&255]+Re[e>>24&255]+Re[n&255]+Re[n>>8&255]+Re[n>>16&255]+Re[n>>24&255]).toLowerCase()}function Ue(s,t,e){return Math.max(t,Math.min(e,s))}function Bg(s,t){return(s%t+t)%t}function Da(s,t,e){return(1-e)*s+e*t}function bh(s){return(s&s-1)===0&&s!==0}function Ug(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function $r(s,t){switch(t.constructor){case Float32Array:return s;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function Ye(s,t){switch(t.constructor){case Float32Array:return s;case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}class Lt{constructor(t=0,e=0){Lt.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(Ue(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),r=this.x-t.x,o=this.y-t.y;return this.x=r*n-o*i+t.x,this.y=r*i+o*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Ut{constructor(){Ut.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(t,e,n,i,r,o,a,l,c){const h=this.elements;return h[0]=t,h[1]=i,h[2]=a,h[3]=e,h[4]=r,h[5]=l,h[6]=n,h[7]=o,h[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,o=n[0],a=n[3],l=n[6],c=n[1],h=n[4],u=n[7],d=n[2],f=n[5],g=n[8],_=i[0],m=i[3],p=i[6],x=i[1],w=i[4],v=i[7],y=i[2],S=i[5],T=i[8];return r[0]=o*_+a*x+l*y,r[3]=o*m+a*w+l*S,r[6]=o*p+a*v+l*T,r[1]=c*_+h*x+u*y,r[4]=c*m+h*w+u*S,r[7]=c*p+h*v+u*T,r[2]=d*_+f*x+g*y,r[5]=d*m+f*w+g*S,r[8]=d*p+f*v+g*T,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],o=t[4],a=t[5],l=t[6],c=t[7],h=t[8];return e*o*h-e*a*c-n*r*h+n*a*l+i*r*c-i*o*l}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],o=t[4],a=t[5],l=t[6],c=t[7],h=t[8],u=h*o-a*c,d=a*l-h*r,f=c*r-o*l,g=e*u+n*d+i*f;if(g===0)return this.set(0,0,0,0,0,0,0,0,0);const _=1/g;return t[0]=u*_,t[1]=(i*c-h*n)*_,t[2]=(a*n-i*o)*_,t[3]=d*_,t[4]=(h*e-i*l)*_,t[5]=(i*r-a*e)*_,t[6]=f*_,t[7]=(n*l-c*e)*_,t[8]=(o*e-n*r)*_,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,r,o,a){const l=Math.cos(r),c=Math.sin(r);return this.set(n*l,n*c,-n*(l*o+c*a)+o+t,-i*c,i*l,-i*(-c*o+l*a)+a+e,0,0,1),this}scale(t,e){return this.premultiply(Ia.makeScale(t,e)),this}rotate(t){return this.premultiply(Ia.makeRotation(-t)),this}translate(t,e){return this.premultiply(Ia.makeTranslation(t,e)),this}makeTranslation(t,e){return this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,n,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<9;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const Ia=new Ut;function wf(s){for(let t=s.length-1;t>=0;--t)if(s[t]>=65535)return!0;return!1}function Rr(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}function Fs(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function Fa(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}const Vg=new Ut().fromArray([.8224621,.0331941,.0170827,.177538,.9668058,.0723974,-1e-7,1e-7,.9105199]),Hg=new Ut().fromArray([1.2249401,-.0420569,-.0196376,-.2249404,1.0420571,-.0786361,1e-7,0,1.0982735]);function Wg(s){return s.convertSRGBToLinear().applyMatrix3(Hg)}function Gg(s){return s.applyMatrix3(Vg).convertLinearToSRGB()}const qg={[Lr]:s=>s,[Rn]:s=>s.convertSRGBToLinear(),[Mf]:Wg},jg={[Lr]:s=>s,[Rn]:s=>s.convertLinearToSRGB(),[Mf]:Gg},$e={enabled:!1,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(s){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!s},get workingColorSpace(){return Lr},set workingColorSpace(s){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(s,t,e){if(this.enabled===!1||t===e||!t||!e)return s;const n=qg[t],i=jg[e];if(n===void 0||i===void 0)throw new Error(`Unsupported color space conversion, "${t}" to "${e}".`);return i(n(s))},fromWorkingColorSpace:function(s,t){return this.convert(s,this.workingColorSpace,t)},toWorkingColorSpace:function(s,t){return this.convert(s,t,this.workingColorSpace)}};let as;class Sf{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{as===void 0&&(as=Rr("canvas")),as.width=t.width,as.height=t.height;const n=as.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=as}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=Rr("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const i=n.getImageData(0,0,t.width,t.height),r=i.data;for(let o=0;o<r.length;o++)r[o]=Fs(r[o]/255)*255;return n.putImageData(i,0,0),e}else if(t.data){const e=t.data.slice(0);for(let n=0;n<e.length;n++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[n]=Math.floor(Fs(e[n]/255)*255):e[n]=Fs(e[n]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}class Ef{constructor(t=null){this.isSource=!0,this.uuid=Vr(),this.data=t,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let r;if(Array.isArray(i)){r=[];for(let o=0,a=i.length;o<a;o++)i[o].isDataTexture?r.push(Oa(i[o].image)):r.push(Oa(i[o]))}else r=Oa(i);n.url=r}return e||(t.images[this.uuid]=n),n}}function Oa(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?Sf.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Xg=0;class qe extends ns{constructor(t=qe.DEFAULT_IMAGE,e=qe.DEFAULT_MAPPING,n=gn,i=gn,r=on,o=Cr,a=_n,l=$i,c=qe.DEFAULT_ANISOTROPY,h=Ki){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Xg++}),this.uuid=Vr(),this.name="",this.source=new Ef(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new Lt(0,0),this.repeat=new Lt(1,1),this.center=new Lt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Ut,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==yf)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case Tr:t.x=t.x-Math.floor(t.x);break;case gn:t.x=t.x<0?0:1;break;case Dl:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case Tr:t.y=t.y-Math.floor(t.y);break;case gn:t.y=t.y<0?0:1;break;case Dl:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}}qe.DEFAULT_IMAGE=null;qe.DEFAULT_MAPPING=yf;qe.DEFAULT_ANISOTROPY=1;class Ae{constructor(t=0,e=0,n=0,i=1){Ae.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=this.w,o=t.elements;return this.x=o[0]*e+o[4]*n+o[8]*i+o[12]*r,this.y=o[1]*e+o[5]*n+o[9]*i+o[13]*r,this.z=o[2]*e+o[6]*n+o[10]*i+o[14]*r,this.w=o[3]*e+o[7]*n+o[11]*i+o[15]*r,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,r;const l=t.elements,c=l[0],h=l[4],u=l[8],d=l[1],f=l[5],g=l[9],_=l[2],m=l[6],p=l[10];if(Math.abs(h-d)<.01&&Math.abs(u-_)<.01&&Math.abs(g-m)<.01){if(Math.abs(h+d)<.1&&Math.abs(u+_)<.1&&Math.abs(g+m)<.1&&Math.abs(c+f+p-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const w=(c+1)/2,v=(f+1)/2,y=(p+1)/2,S=(h+d)/4,T=(u+_)/4,A=(g+m)/4;return w>v&&w>y?w<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(w),i=S/n,r=T/n):v>y?v<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(v),n=S/i,r=A/i):y<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(y),n=T/r,i=A/r),this.set(n,i,r,e),this}let x=Math.sqrt((m-g)*(m-g)+(u-_)*(u-_)+(d-h)*(d-h));return Math.abs(x)<.001&&(x=1),this.x=(m-g)/x,this.y=(u-_)/x,this.z=(d-h)/x,this.w=Math.acos((c+f+p-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Zi extends ns{constructor(t=1,e=1,n={}){super(),this.isWebGLRenderTarget=!0,this.width=t,this.height=e,this.depth=1,this.scissor=new Ae(0,0,t,e),this.scissorTest=!1,this.viewport=new Ae(0,0,t,e);const i={width:t,height:e,depth:1};this.texture=new qe(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:on,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(t,e,n=1){(this.width!==t||this.height!==e||this.depth!==n)&&(this.width=t,this.height=e,this.depth=n,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.texture.isRenderTargetTexture=!0;const e=Object.assign({},t.texture.image);return this.texture.source=new Ef(e),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Af extends qe{constructor(t=null,e=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=Be,this.minFilter=Be,this.wrapR=gn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Yg extends qe{constructor(t=null,e=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=Be,this.minFilter=Be,this.wrapR=gn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}let Ji=class{constructor(t=0,e=0,n=0,i=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=i}static slerpFlat(t,e,n,i,r,o,a){let l=n[i+0],c=n[i+1],h=n[i+2],u=n[i+3];const d=r[o+0],f=r[o+1],g=r[o+2],_=r[o+3];if(a===0){t[e+0]=l,t[e+1]=c,t[e+2]=h,t[e+3]=u;return}if(a===1){t[e+0]=d,t[e+1]=f,t[e+2]=g,t[e+3]=_;return}if(u!==_||l!==d||c!==f||h!==g){let m=1-a;const p=l*d+c*f+h*g+u*_,x=p>=0?1:-1,w=1-p*p;if(w>Number.EPSILON){const y=Math.sqrt(w),S=Math.atan2(y,p*x);m=Math.sin(m*S)/y,a=Math.sin(a*S)/y}const v=a*x;if(l=l*m+d*v,c=c*m+f*v,h=h*m+g*v,u=u*m+_*v,m===1-a){const y=1/Math.sqrt(l*l+c*c+h*h+u*u);l*=y,c*=y,h*=y,u*=y}}t[e]=l,t[e+1]=c,t[e+2]=h,t[e+3]=u}static multiplyQuaternionsFlat(t,e,n,i,r,o){const a=n[i],l=n[i+1],c=n[i+2],h=n[i+3],u=r[o],d=r[o+1],f=r[o+2],g=r[o+3];return t[e]=a*g+h*u+l*f-c*d,t[e+1]=l*g+h*d+c*u-a*f,t[e+2]=c*g+h*f+a*d-l*u,t[e+3]=h*g-a*u-l*d-c*f,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){const n=t._x,i=t._y,r=t._z,o=t._order,a=Math.cos,l=Math.sin,c=a(n/2),h=a(i/2),u=a(r/2),d=l(n/2),f=l(i/2),g=l(r/2);switch(o){case"XYZ":this._x=d*h*u+c*f*g,this._y=c*f*u-d*h*g,this._z=c*h*g+d*f*u,this._w=c*h*u-d*f*g;break;case"YXZ":this._x=d*h*u+c*f*g,this._y=c*f*u-d*h*g,this._z=c*h*g-d*f*u,this._w=c*h*u+d*f*g;break;case"ZXY":this._x=d*h*u-c*f*g,this._y=c*f*u+d*h*g,this._z=c*h*g+d*f*u,this._w=c*h*u-d*f*g;break;case"ZYX":this._x=d*h*u-c*f*g,this._y=c*f*u+d*h*g,this._z=c*h*g-d*f*u,this._w=c*h*u+d*f*g;break;case"YZX":this._x=d*h*u+c*f*g,this._y=c*f*u+d*h*g,this._z=c*h*g-d*f*u,this._w=c*h*u-d*f*g;break;case"XZY":this._x=d*h*u-c*f*g,this._y=c*f*u-d*h*g,this._z=c*h*g+d*f*u,this._w=c*h*u+d*f*g;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return e!==!1&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],r=e[8],o=e[1],a=e[5],l=e[9],c=e[2],h=e[6],u=e[10],d=n+a+u;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(h-l)*f,this._y=(r-c)*f,this._z=(o-i)*f}else if(n>a&&n>u){const f=2*Math.sqrt(1+n-a-u);this._w=(h-l)/f,this._x=.25*f,this._y=(i+o)/f,this._z=(r+c)/f}else if(a>u){const f=2*Math.sqrt(1+a-n-u);this._w=(r-c)/f,this._x=(i+o)/f,this._y=.25*f,this._z=(l+h)/f}else{const f=2*Math.sqrt(1+u-n-a);this._w=(o-i)/f,this._x=(r+c)/f,this._y=(l+h)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(Ue(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(n===0)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,r=t._z,o=t._w,a=e._x,l=e._y,c=e._z,h=e._w;return this._x=n*h+o*a+i*c-r*l,this._y=i*h+o*l+r*a-n*c,this._z=r*h+o*c+n*l-i*a,this._w=o*h-n*a-i*l-r*c,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const n=this._x,i=this._y,r=this._z,o=this._w;let a=o*t._w+n*t._x+i*t._y+r*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=o,this._x=n,this._y=i,this._z=r,this;const l=1-a*a;if(l<=Number.EPSILON){const f=1-e;return this._w=f*o+e*this._w,this._x=f*n+e*this._x,this._y=f*i+e*this._y,this._z=f*r+e*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),h=Math.atan2(c,a),u=Math.sin((1-e)*h)/c,d=Math.sin(e*h)/c;return this._w=o*u+this._w*d,this._x=n*u+this._x*d,this._y=i*u+this._y*d,this._z=r*u+this._z*d,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=Math.random(),e=Math.sqrt(1-t),n=Math.sqrt(t),i=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(e*Math.cos(i),n*Math.sin(r),n*Math.cos(r),e*Math.sin(i))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}};class U{constructor(t=0,e=0,n=0){U.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return n===void 0&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(Mh.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(Mh.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6]*i,this.y=r[1]*e+r[4]*n+r[7]*i,this.z=r[2]*e+r[5]*n+r[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=t.elements,o=1/(r[3]*e+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*e+r[4]*n+r[8]*i+r[12])*o,this.y=(r[1]*e+r[5]*n+r[9]*i+r[13])*o,this.z=(r[2]*e+r[6]*n+r[10]*i+r[14])*o,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,r=t.x,o=t.y,a=t.z,l=t.w,c=l*e+o*i-a*n,h=l*n+a*e-r*i,u=l*i+r*n-o*e,d=-r*e-o*n-a*i;return this.x=c*l+d*-r+h*-a-u*-o,this.y=h*l+d*-o+u*-r-c*-a,this.z=u*l+d*-a+c*-o-h*-r,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*i,this.y=r[1]*e+r[5]*n+r[9]*i,this.z=r[2]*e+r[6]*n+r[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,r=t.z,o=e.x,a=e.y,l=e.z;return this.x=i*l-r*a,this.y=r*o-n*l,this.z=n*a-i*o,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return za.copy(this).projectOnVector(t),this.sub(za)}reflect(t){return this.sub(za.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(Ue(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=(Math.random()-.5)*2,e=Math.random()*Math.PI*2,n=Math.sqrt(1-t**2);return this.x=n*Math.cos(e),this.y=n*Math.sin(e),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const za=new U,Mh=new Ji;class Hr{constructor(t=new U(1/0,1/0,1/0),e=new U(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e+=3)this.expandByPoint(Nn.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,n=t.count;e<n;e++)this.expandByPoint(Nn.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Nn.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){if(t.updateWorldMatrix(!1,!1),t.boundingBox!==void 0)t.boundingBox===null&&t.computeBoundingBox(),ls.copy(t.boundingBox),ls.applyMatrix4(t.matrixWorld),this.union(ls);else{const i=t.geometry;if(i!==void 0)if(e&&i.attributes!==void 0&&i.attributes.position!==void 0){const r=i.attributes.position;for(let o=0,a=r.count;o<a;o++)Nn.fromBufferAttribute(r,o).applyMatrix4(t.matrixWorld),this.expandByPoint(Nn)}else i.boundingBox===null&&i.computeBoundingBox(),ls.copy(i.boundingBox),ls.applyMatrix4(t.matrixWorld),this.union(ls)}const n=t.children;for(let i=0,r=n.length;i<r;i++)this.expandByObject(n[i],e);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,Nn),Nn.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter($s),Kr.subVectors(this.max,$s),cs.subVectors(t.a,$s),hs.subVectors(t.b,$s),us.subVectors(t.c,$s),ri.subVectors(hs,cs),oi.subVectors(us,hs),Ei.subVectors(cs,us);let e=[0,-ri.z,ri.y,0,-oi.z,oi.y,0,-Ei.z,Ei.y,ri.z,0,-ri.x,oi.z,0,-oi.x,Ei.z,0,-Ei.x,-ri.y,ri.x,0,-oi.y,oi.x,0,-Ei.y,Ei.x,0];return!ka(e,cs,hs,us,Kr)||(e=[1,0,0,0,1,0,0,0,1],!ka(e,cs,hs,us,Kr))?!1:(Zr.crossVectors(ri,oi),e=[Zr.x,Zr.y,Zr.z],ka(e,cs,hs,us,Kr))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,Nn).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(Nn).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(kn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),kn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),kn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),kn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),kn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),kn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),kn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),kn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(kn),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const kn=[new U,new U,new U,new U,new U,new U,new U,new U],Nn=new U,ls=new Hr,cs=new U,hs=new U,us=new U,ri=new U,oi=new U,Ei=new U,$s=new U,Kr=new U,Zr=new U,Ai=new U;function ka(s,t,e,n,i){for(let r=0,o=s.length-3;r<=o;r+=3){Ai.fromArray(s,r);const a=i.x*Math.abs(Ai.x)+i.y*Math.abs(Ai.y)+i.z*Math.abs(Ai.z),l=t.dot(Ai),c=e.dot(Ai),h=n.dot(Ai);if(Math.max(-Math.max(l,c,h),Math.min(l,c,h))>a)return!1}return!0}const $g=new Hr,Ks=new U,Na=new U;let ua=class{constructor(t=new U,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;e!==void 0?n.copy(e):$g.setFromPoints(t).getCenter(n);let i=0;for(let r=0,o=t.length;r<o;r++)i=Math.max(i,n.distanceToSquared(t[r]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;Ks.subVectors(t,this.center);const e=Ks.lengthSq();if(e>this.radius*this.radius){const n=Math.sqrt(e),i=(n-this.radius)*.5;this.center.addScaledVector(Ks,i/n),this.radius+=i}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(Na.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(Ks.copy(t.center).add(Na)),this.expandByPoint(Ks.copy(t.center).sub(Na))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}};const Bn=new U,Ba=new U,Jr=new U,ai=new U,Ua=new U,Qr=new U,Va=new U;let Tf=class{constructor(t=new U,e=new U(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Bn)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Bn.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Bn.copy(this.origin).addScaledVector(this.direction,e),Bn.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){Ba.copy(t).add(e).multiplyScalar(.5),Jr.copy(e).sub(t).normalize(),ai.copy(this.origin).sub(Ba);const r=t.distanceTo(e)*.5,o=-this.direction.dot(Jr),a=ai.dot(this.direction),l=-ai.dot(Jr),c=ai.lengthSq(),h=Math.abs(1-o*o);let u,d,f,g;if(h>0)if(u=o*l-a,d=o*a-l,g=r*h,u>=0)if(d>=-g)if(d<=g){const _=1/h;u*=_,d*=_,f=u*(u+o*d+2*a)+d*(o*u+d+2*l)+c}else d=r,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*l)+c;else d=-r,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*l)+c;else d<=-g?(u=Math.max(0,-(-o*r+a)),d=u>0?-r:Math.min(Math.max(-r,-l),r),f=-u*u+d*(d+2*l)+c):d<=g?(u=0,d=Math.min(Math.max(-r,-l),r),f=d*(d+2*l)+c):(u=Math.max(0,-(o*r+a)),d=u>0?r:Math.min(Math.max(-r,-l),r),f=-u*u+d*(d+2*l)+c);else d=o>0?-r:r,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*l)+c;return n&&n.copy(this.origin).addScaledVector(this.direction,u),i&&i.copy(Ba).addScaledVector(Jr,d),f}intersectSphere(t,e){Bn.subVectors(t.center,this.origin);const n=Bn.dot(this.direction),i=Bn.dot(Bn)-n*n,r=t.radius*t.radius;if(i>r)return null;const o=Math.sqrt(r-i),a=n-o,l=n+o;return l<0?null:a<0?this.at(l,e):this.at(a,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return n===null?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,r,o,a,l;const c=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,d=this.origin;return c>=0?(n=(t.min.x-d.x)*c,i=(t.max.x-d.x)*c):(n=(t.max.x-d.x)*c,i=(t.min.x-d.x)*c),h>=0?(r=(t.min.y-d.y)*h,o=(t.max.y-d.y)*h):(r=(t.max.y-d.y)*h,o=(t.min.y-d.y)*h),n>o||r>i||((r>n||isNaN(n))&&(n=r),(o<i||isNaN(i))&&(i=o),u>=0?(a=(t.min.z-d.z)*u,l=(t.max.z-d.z)*u):(a=(t.max.z-d.z)*u,l=(t.min.z-d.z)*u),n>l||a>i)||((a>n||n!==n)&&(n=a),(l<i||i!==i)&&(i=l),i<0)?null:this.at(n>=0?n:i,e)}intersectsBox(t){return this.intersectBox(t,Bn)!==null}intersectTriangle(t,e,n,i,r){Ua.subVectors(e,t),Qr.subVectors(n,t),Va.crossVectors(Ua,Qr);let o=this.direction.dot(Va),a;if(o>0){if(i)return null;a=1}else if(o<0)a=-1,o=-o;else return null;ai.subVectors(this.origin,t);const l=a*this.direction.dot(Qr.crossVectors(ai,Qr));if(l<0)return null;const c=a*this.direction.dot(Ua.cross(ai));if(c<0||l+c>o)return null;const h=-a*ai.dot(Va);return h<0?null:this.at(h/o,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}};class ve{constructor(){ve.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(t,e,n,i,r,o,a,l,c,h,u,d,f,g,_,m){const p=this.elements;return p[0]=t,p[4]=e,p[8]=n,p[12]=i,p[1]=r,p[5]=o,p[9]=a,p[13]=l,p[2]=c,p[6]=h,p[10]=u,p[14]=d,p[3]=f,p[7]=g,p[11]=_,p[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new ve().fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/ds.setFromMatrixColumn(t,0).length(),r=1/ds.setFromMatrixColumn(t,1).length(),o=1/ds.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*r,e[5]=n[5]*r,e[6]=n[6]*r,e[7]=0,e[8]=n[8]*o,e[9]=n[9]*o,e[10]=n[10]*o,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,i=t.y,r=t.z,o=Math.cos(n),a=Math.sin(n),l=Math.cos(i),c=Math.sin(i),h=Math.cos(r),u=Math.sin(r);if(t.order==="XYZ"){const d=o*h,f=o*u,g=a*h,_=a*u;e[0]=l*h,e[4]=-l*u,e[8]=c,e[1]=f+g*c,e[5]=d-_*c,e[9]=-a*l,e[2]=_-d*c,e[6]=g+f*c,e[10]=o*l}else if(t.order==="YXZ"){const d=l*h,f=l*u,g=c*h,_=c*u;e[0]=d+_*a,e[4]=g*a-f,e[8]=o*c,e[1]=o*u,e[5]=o*h,e[9]=-a,e[2]=f*a-g,e[6]=_+d*a,e[10]=o*l}else if(t.order==="ZXY"){const d=l*h,f=l*u,g=c*h,_=c*u;e[0]=d-_*a,e[4]=-o*u,e[8]=g+f*a,e[1]=f+g*a,e[5]=o*h,e[9]=_-d*a,e[2]=-o*c,e[6]=a,e[10]=o*l}else if(t.order==="ZYX"){const d=o*h,f=o*u,g=a*h,_=a*u;e[0]=l*h,e[4]=g*c-f,e[8]=d*c+_,e[1]=l*u,e[5]=_*c+d,e[9]=f*c-g,e[2]=-c,e[6]=a*l,e[10]=o*l}else if(t.order==="YZX"){const d=o*l,f=o*c,g=a*l,_=a*c;e[0]=l*h,e[4]=_-d*u,e[8]=g*u+f,e[1]=u,e[5]=o*h,e[9]=-a*h,e[2]=-c*h,e[6]=f*u+g,e[10]=d-_*u}else if(t.order==="XZY"){const d=o*l,f=o*c,g=a*l,_=a*c;e[0]=l*h,e[4]=-u,e[8]=c*h,e[1]=d*u+_,e[5]=o*h,e[9]=f*u-g,e[2]=g*u-f,e[6]=a*h,e[10]=_*u+d}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(Kg,t,Zg)}lookAt(t,e,n){const i=this.elements;return Ke.subVectors(t,e),Ke.lengthSq()===0&&(Ke.z=1),Ke.normalize(),li.crossVectors(n,Ke),li.lengthSq()===0&&(Math.abs(n.z)===1?Ke.x+=1e-4:Ke.z+=1e-4,Ke.normalize(),li.crossVectors(n,Ke)),li.normalize(),to.crossVectors(Ke,li),i[0]=li.x,i[4]=to.x,i[8]=Ke.x,i[1]=li.y,i[5]=to.y,i[9]=Ke.y,i[2]=li.z,i[6]=to.z,i[10]=Ke.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,o=n[0],a=n[4],l=n[8],c=n[12],h=n[1],u=n[5],d=n[9],f=n[13],g=n[2],_=n[6],m=n[10],p=n[14],x=n[3],w=n[7],v=n[11],y=n[15],S=i[0],T=i[4],A=i[8],b=i[12],M=i[1],L=i[5],I=i[9],C=i[13],D=i[2],P=i[6],O=i[10],V=i[14],B=i[3],j=i[7],$=i[11],ct=i[15];return r[0]=o*S+a*M+l*D+c*B,r[4]=o*T+a*L+l*P+c*j,r[8]=o*A+a*I+l*O+c*$,r[12]=o*b+a*C+l*V+c*ct,r[1]=h*S+u*M+d*D+f*B,r[5]=h*T+u*L+d*P+f*j,r[9]=h*A+u*I+d*O+f*$,r[13]=h*b+u*C+d*V+f*ct,r[2]=g*S+_*M+m*D+p*B,r[6]=g*T+_*L+m*P+p*j,r[10]=g*A+_*I+m*O+p*$,r[14]=g*b+_*C+m*V+p*ct,r[3]=x*S+w*M+v*D+y*B,r[7]=x*T+w*L+v*P+y*j,r[11]=x*A+w*I+v*O+y*$,r[15]=x*b+w*C+v*V+y*ct,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],r=t[12],o=t[1],a=t[5],l=t[9],c=t[13],h=t[2],u=t[6],d=t[10],f=t[14],g=t[3],_=t[7],m=t[11],p=t[15];return g*(+r*l*u-i*c*u-r*a*d+n*c*d+i*a*f-n*l*f)+_*(+e*l*f-e*c*d+r*o*d-i*o*f+i*c*h-r*l*h)+m*(+e*c*u-e*a*f-r*o*u+n*o*f+r*a*h-n*c*h)+p*(-i*a*h-e*l*u+e*a*d+i*o*u-n*o*d+n*l*h)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],o=t[4],a=t[5],l=t[6],c=t[7],h=t[8],u=t[9],d=t[10],f=t[11],g=t[12],_=t[13],m=t[14],p=t[15],x=u*m*c-_*d*c+_*l*f-a*m*f-u*l*p+a*d*p,w=g*d*c-h*m*c-g*l*f+o*m*f+h*l*p-o*d*p,v=h*_*c-g*u*c+g*a*f-o*_*f-h*a*p+o*u*p,y=g*u*l-h*_*l-g*a*d+o*_*d+h*a*m-o*u*m,S=e*x+n*w+i*v+r*y;if(S===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const T=1/S;return t[0]=x*T,t[1]=(_*d*r-u*m*r-_*i*f+n*m*f+u*i*p-n*d*p)*T,t[2]=(a*m*r-_*l*r+_*i*c-n*m*c-a*i*p+n*l*p)*T,t[3]=(u*l*r-a*d*r-u*i*c+n*d*c+a*i*f-n*l*f)*T,t[4]=w*T,t[5]=(h*m*r-g*d*r+g*i*f-e*m*f-h*i*p+e*d*p)*T,t[6]=(g*l*r-o*m*r-g*i*c+e*m*c+o*i*p-e*l*p)*T,t[7]=(o*d*r-h*l*r+h*i*c-e*d*c-o*i*f+e*l*f)*T,t[8]=v*T,t[9]=(g*u*r-h*_*r-g*n*f+e*_*f+h*n*p-e*u*p)*T,t[10]=(o*_*r-g*a*r+g*n*c-e*_*c-o*n*p+e*a*p)*T,t[11]=(h*a*r-o*u*r-h*n*c+e*u*c+o*n*f-e*a*f)*T,t[12]=y*T,t[13]=(h*_*i-g*u*i+g*n*d-e*_*d-h*n*m+e*u*m)*T,t[14]=(g*a*i-o*_*i-g*n*l+e*_*l+o*n*m-e*a*m)*T,t[15]=(o*u*i-h*a*i+h*n*l-e*u*l-o*n*d+e*a*d)*T,this}scale(t){const e=this.elements,n=t.x,i=t.y,r=t.z;return e[0]*=n,e[4]*=i,e[8]*=r,e[1]*=n,e[5]*=i,e[9]*=r,e[2]*=n,e[6]*=i,e[10]*=r,e[3]*=n,e[7]*=i,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),r=1-n,o=t.x,a=t.y,l=t.z,c=r*o,h=r*a;return this.set(c*o+n,c*a-i*l,c*l+i*a,0,c*a+i*l,h*a+n,h*l-i*o,0,c*l-i*a,h*l+i*o,r*l*l+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,i,r,o){return this.set(1,n,r,0,t,1,o,0,e,i,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,r=e._x,o=e._y,a=e._z,l=e._w,c=r+r,h=o+o,u=a+a,d=r*c,f=r*h,g=r*u,_=o*h,m=o*u,p=a*u,x=l*c,w=l*h,v=l*u,y=n.x,S=n.y,T=n.z;return i[0]=(1-(_+p))*y,i[1]=(f+v)*y,i[2]=(g-w)*y,i[3]=0,i[4]=(f-v)*S,i[5]=(1-(d+p))*S,i[6]=(m+x)*S,i[7]=0,i[8]=(g+w)*T,i[9]=(m-x)*T,i[10]=(1-(d+_))*T,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let r=ds.set(i[0],i[1],i[2]).length();const o=ds.set(i[4],i[5],i[6]).length(),a=ds.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),t.x=i[12],t.y=i[13],t.z=i[14],hn.copy(this);const c=1/r,h=1/o,u=1/a;return hn.elements[0]*=c,hn.elements[1]*=c,hn.elements[2]*=c,hn.elements[4]*=h,hn.elements[5]*=h,hn.elements[6]*=h,hn.elements[8]*=u,hn.elements[9]*=u,hn.elements[10]*=u,e.setFromRotationMatrix(hn),n.x=r,n.y=o,n.z=a,this}makePerspective(t,e,n,i,r,o){const a=this.elements,l=2*r/(e-t),c=2*r/(n-i),h=(e+t)/(e-t),u=(n+i)/(n-i),d=-(o+r)/(o-r),f=-2*o*r/(o-r);return a[0]=l,a[4]=0,a[8]=h,a[12]=0,a[1]=0,a[5]=c,a[9]=u,a[13]=0,a[2]=0,a[6]=0,a[10]=d,a[14]=f,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(t,e,n,i,r,o){const a=this.elements,l=1/(e-t),c=1/(n-i),h=1/(o-r),u=(e+t)*l,d=(n+i)*c,f=(o+r)*h;return a[0]=2*l,a[4]=0,a[8]=0,a[12]=-u,a[1]=0,a[5]=2*c,a[9]=0,a[13]=-d,a[2]=0,a[6]=0,a[10]=-2*h,a[14]=-f,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<16;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const ds=new U,hn=new ve,Kg=new U(0,0,0),Zg=new U(1,1,1),li=new U,to=new U,Ke=new U,wh=new ve,Sh=new Ji;class da{constructor(t=0,e=0,n=0,i=da.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i=this._order){return this._x=t,this._y=e,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const i=t.elements,r=i[0],o=i[4],a=i[8],l=i[1],c=i[5],h=i[9],u=i[2],d=i[6],f=i[10];switch(e){case"XYZ":this._y=Math.asin(Ue(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-h,f),this._z=Math.atan2(-o,r)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-Ue(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-u,r),this._z=0);break;case"ZXY":this._x=Math.asin(Ue(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,f),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,r));break;case"ZYX":this._y=Math.asin(-Ue(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(l,r)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(Ue(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,c),this._y=Math.atan2(-u,r)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-Ue(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-h,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,n===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return wh.makeRotationFromQuaternion(t),this.setFromRotationMatrix(wh,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return Sh.setFromEuler(this),this.setFromQuaternion(Sh,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}da.DEFAULT_ORDER="XYZ";class Cf{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let Jg=0;const Eh=new U,fs=new Ji,Un=new ve,eo=new U,Zs=new U,Qg=new U,t0=new Ji,Ah=new U(1,0,0),Th=new U(0,1,0),Ch=new U(0,0,1),e0={type:"added"},Ph={type:"removed"};class Ce extends ns{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Jg++}),this.uuid=Vr(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Ce.DEFAULT_UP.clone();const t=new U,e=new da,n=new Ji,i=new U(1,1,1);function r(){n.setFromEuler(e,!1)}function o(){e.setFromQuaternion(n,void 0,!1)}e._onChange(r),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new ve},normalMatrix:{value:new Ut}}),this.matrix=new ve,this.matrixWorld=new ve,this.matrixAutoUpdate=Ce.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=Ce.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new Cf,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return fs.setFromAxisAngle(t,e),this.quaternion.multiply(fs),this}rotateOnWorldAxis(t,e){return fs.setFromAxisAngle(t,e),this.quaternion.premultiply(fs),this}rotateX(t){return this.rotateOnAxis(Ah,t)}rotateY(t){return this.rotateOnAxis(Th,t)}rotateZ(t){return this.rotateOnAxis(Ch,t)}translateOnAxis(t,e){return Eh.copy(t).applyQuaternion(this.quaternion),this.position.add(Eh.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(Ah,t)}translateY(t){return this.translateOnAxis(Th,t)}translateZ(t){return this.translateOnAxis(Ch,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(Un.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?eo.copy(t):eo.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Zs.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Un.lookAt(Zs,eo,this.up):Un.lookAt(eo,Zs,this.up),this.quaternion.setFromRotationMatrix(Un),i&&(Un.extractRotation(i.matrixWorld),fs.setFromRotationMatrix(Un),this.quaternion.premultiply(fs.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.parent!==null&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(e0)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Ph)),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(Ph)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),Un.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),Un.multiply(t.parent.matrixWorld)),t.applyMatrix4(Un),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(t,e);if(o!==void 0)return o}}getObjectsByProperty(t,e){let n=[];this[t]===e&&n.push(this);for(let i=0,r=this.children.length;i<r;i++){const o=this.children[i].getObjectsByProperty(t,e);o.length>0&&(n=n.concat(o))}return n}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Zs,t,Qg),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Zs,t0,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++){const r=e[n];(r.matrixWorldAutoUpdate===!0||t===!0)&&r.updateMatrixWorld(t)}}updateWorldMatrix(t,e){const n=this.parent;if(t===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),e===!0){const i=this.children;for(let r=0,o=i.length;r<o;r++){const a=i[r];a.matrixWorldAutoUpdate===!0&&a.updateWorldMatrix(!1,!0)}}}toJSON(t){const e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function r(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(t)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(t.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,h=l.length;c<h;c++){const u=l[c];r(t.shapes,u)}else r(t.shapes,l)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(r(t.materials,this.material[l]));i.material=a}else i.material=r(t.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];i.animations.push(r(t.animations,l))}}if(e){const a=o(t.geometries),l=o(t.materials),c=o(t.textures),h=o(t.images),u=o(t.shapes),d=o(t.skeletons),f=o(t.animations),g=o(t.nodes);a.length>0&&(n.geometries=a),l.length>0&&(n.materials=l),c.length>0&&(n.textures=c),h.length>0&&(n.images=h),u.length>0&&(n.shapes=u),d.length>0&&(n.skeletons=d),f.length>0&&(n.animations=f),g.length>0&&(n.nodes=g)}return n.object=i,n;function o(a){const l=[];for(const c in a){const h=a[c];delete h.metadata,l.push(h)}return l}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let n=0;n<t.children.length;n++){const i=t.children[n];this.add(i.clone())}return this}}Ce.DEFAULT_UP=new U(0,1,0);Ce.DEFAULT_MATRIX_AUTO_UPDATE=!0;Ce.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const un=new U,Vn=new U,Ha=new U,Hn=new U,ps=new U,ms=new U,Lh=new U,Wa=new U,Ga=new U,qa=new U;let no=!1;class pn{constructor(t=new U,e=new U,n=new U){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){i.subVectors(n,e),un.subVectors(t,e),i.cross(un);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(t,e,n,i,r){un.subVectors(i,e),Vn.subVectors(n,e),Ha.subVectors(t,e);const o=un.dot(un),a=un.dot(Vn),l=un.dot(Ha),c=Vn.dot(Vn),h=Vn.dot(Ha),u=o*c-a*a;if(u===0)return r.set(-2,-1,-1);const d=1/u,f=(c*l-a*h)*d,g=(o*h-a*l)*d;return r.set(1-f-g,g,f)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,Hn),Hn.x>=0&&Hn.y>=0&&Hn.x+Hn.y<=1}static getUV(t,e,n,i,r,o,a,l){return no===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),no=!0),this.getInterpolation(t,e,n,i,r,o,a,l)}static getInterpolation(t,e,n,i,r,o,a,l){return this.getBarycoord(t,e,n,i,Hn),l.setScalar(0),l.addScaledVector(r,Hn.x),l.addScaledVector(o,Hn.y),l.addScaledVector(a,Hn.z),l}static isFrontFacing(t,e,n,i){return un.subVectors(n,e),Vn.subVectors(t,e),un.cross(Vn).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,n,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,i),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return un.subVectors(this.c,this.b),Vn.subVectors(this.a,this.b),un.cross(Vn).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return pn.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return pn.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,i,r){return no===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),no=!0),pn.getInterpolation(t,this.a,this.b,this.c,e,n,i,r)}getInterpolation(t,e,n,i,r){return pn.getInterpolation(t,this.a,this.b,this.c,e,n,i,r)}containsPoint(t){return pn.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return pn.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,i=this.b,r=this.c;let o,a;ps.subVectors(i,n),ms.subVectors(r,n),Wa.subVectors(t,n);const l=ps.dot(Wa),c=ms.dot(Wa);if(l<=0&&c<=0)return e.copy(n);Ga.subVectors(t,i);const h=ps.dot(Ga),u=ms.dot(Ga);if(h>=0&&u<=h)return e.copy(i);const d=l*u-h*c;if(d<=0&&l>=0&&h<=0)return o=l/(l-h),e.copy(n).addScaledVector(ps,o);qa.subVectors(t,r);const f=ps.dot(qa),g=ms.dot(qa);if(g>=0&&f<=g)return e.copy(r);const _=f*c-l*g;if(_<=0&&c>=0&&g<=0)return a=c/(c-g),e.copy(n).addScaledVector(ms,a);const m=h*g-f*u;if(m<=0&&u-h>=0&&f-g>=0)return Lh.subVectors(r,i),a=(u-h)/(u-h+(f-g)),e.copy(i).addScaledVector(Lh,a);const p=1/(m+_+d);return o=_*p,a=d*p,e.copy(n).addScaledVector(ps,o).addScaledVector(ms,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let n0=0,zn=class extends ns{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:n0++}),this.uuid=Vr(),this.name="",this.type="Material",this.blending=Ds,this.side=_i,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=xf,this.blendDst=vf,this.blendEquation=Ts,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Pl,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Ng,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=La,this.stencilZFail=La,this.stencilZPass=La,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const n=t[e];if(n===void 0){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const i=this[e];if(i===void 0){console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Ds&&(n.blending=this.blending),this.side!==_i&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.forceSinglePass===!0&&(n.forceSinglePass=this.forceSinglePass),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(r){const o=[];for(const a in r){const l=r[a];delete l.metadata,o.push(l)}return o}if(e){const r=i(t.textures),o=i(t.images);r.length>0&&(n.textures=r),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(e!==null){const i=e.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=e[r].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}};const Pf={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},dn={h:0,s:0,l:0},io={h:0,s:0,l:0};function ja(s,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?s+(t-s)*6*e:e<1/2?t:e<2/3?s+(t-s)*6*(2/3-e):s}let Nt=class{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,e===void 0&&n===void 0?this.set(t):this.setRGB(t,e,n)}set(t){return t&&t.isColor?this.copy(t):typeof t=="number"?this.setHex(t):typeof t=="string"&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=Rn){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,$e.toWorkingColorSpace(this,e),this}setRGB(t,e,n,i=$e.workingColorSpace){return this.r=t,this.g=e,this.b=n,$e.toWorkingColorSpace(this,i),this}setHSL(t,e,n,i=$e.workingColorSpace){if(t=Bg(t,1),e=Ue(e,0,1),n=Ue(n,0,1),e===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+e):n+e-n*e,o=2*n-r;this.r=ja(o,r,t+1/3),this.g=ja(o,r,t),this.b=ja(o,r,t-1/3)}return $e.toWorkingColorSpace(this,i),this}setStyle(t,e=Rn){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(t)){let r;const o=i[1],a=i[2];switch(o){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,$e.toWorkingColorSpace(this,e),n(r[4]),this;if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,$e.toWorkingColorSpace(this,e),n(r[4]),this;break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const l=parseFloat(r[1])/360,c=parseFloat(r[2])/100,h=parseFloat(r[3])/100;return n(r[4]),this.setHSL(l,c,h,e)}break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const r=i[1],o=r.length;if(o===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,e);if(o===6)return this.setHex(parseInt(r,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=Rn){const n=Pf[t.toLowerCase()];return n!==void 0?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Fs(t.r),this.g=Fs(t.g),this.b=Fs(t.b),this}copyLinearToSRGB(t){return this.r=Fa(t.r),this.g=Fa(t.g),this.b=Fa(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=Rn){return $e.fromWorkingColorSpace(De.copy(this),t),Ue(De.r*255,0,255)<<16^Ue(De.g*255,0,255)<<8^Ue(De.b*255,0,255)<<0}getHexString(t=Rn){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=$e.workingColorSpace){$e.fromWorkingColorSpace(De.copy(this),e);const n=De.r,i=De.g,r=De.b,o=Math.max(n,i,r),a=Math.min(n,i,r);let l,c;const h=(a+o)/2;if(a===o)l=0,c=0;else{const u=o-a;switch(c=h<=.5?u/(o+a):u/(2-o-a),o){case n:l=(i-r)/u+(i<r?6:0);break;case i:l=(r-n)/u+2;break;case r:l=(n-i)/u+4;break}l/=6}return t.h=l,t.s=c,t.l=h,t}getRGB(t,e=$e.workingColorSpace){return $e.fromWorkingColorSpace(De.copy(this),e),t.r=De.r,t.g=De.g,t.b=De.b,t}getStyle(t=Rn){$e.fromWorkingColorSpace(De.copy(this),t);const e=De.r,n=De.g,i=De.b;return t!==Rn?`color(${t} ${e.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${e*255|0},${n*255|0},${i*255|0})`}offsetHSL(t,e,n){return this.getHSL(dn),dn.h+=t,dn.s+=e,dn.l+=n,this.setHSL(dn.h,dn.s,dn.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(dn),t.getHSL(io);const n=Da(dn.h,io.h,e),i=Da(dn.s,io.s,e),r=Da(dn.l,io.l,e);return this.setHSL(n,i,r),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,n=this.g,i=this.b,r=t.elements;return this.r=r[0]*e+r[3]*n+r[6]*i,this.g=r[1]*e+r[4]*n+r[7]*i,this.b=r[2]*e+r[5]*n+r[8]*i,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}};const De=new Nt;Nt.NAMES=Pf;class oc extends zn{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Nt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=la,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const _e=new U,so=new Lt;class bn{constructor(t,e,n=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n,this.usage=vh,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,n=this.count;e<n;e++)so.fromBufferAttribute(this,e),so.applyMatrix3(t),this.setXY(e,so.x,so.y);else if(this.itemSize===3)for(let e=0,n=this.count;e<n;e++)_e.fromBufferAttribute(this,e),_e.applyMatrix3(t),this.setXYZ(e,_e.x,_e.y,_e.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)_e.fromBufferAttribute(this,e),_e.applyMatrix4(t),this.setXYZ(e,_e.x,_e.y,_e.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)_e.fromBufferAttribute(this,e),_e.applyNormalMatrix(t),this.setXYZ(e,_e.x,_e.y,_e.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)_e.fromBufferAttribute(this,e),_e.transformDirection(t),this.setXYZ(e,_e.x,_e.y,_e.z);return this}set(t,e=0){return this.array.set(t,e),this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=$r(e,this.array)),e}setX(t,e){return this.normalized&&(e=Ye(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=$r(e,this.array)),e}setY(t,e){return this.normalized&&(e=Ye(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=$r(e,this.array)),e}setZ(t,e){return this.normalized&&(e=Ye(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=$r(e,this.array)),e}setW(t,e){return this.normalized&&(e=Ye(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=Ye(e,this.array),n=Ye(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=Ye(e,this.array),n=Ye(n,this.array),i=Ye(i,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this}setXYZW(t,e,n,i,r){return t*=this.itemSize,this.normalized&&(e=Ye(e,this.array),n=Ye(n,this.array),i=Ye(i,this.array),r=Ye(r,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=r,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==vh&&(t.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(t.updateRange=this.updateRange),t}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class Lf extends bn{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class Rf extends bn{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class je extends bn{constructor(t,e,n){super(new Float32Array(t),e,n)}}let i0=0;const sn=new ve,Xa=new Ce,gs=new U,Ze=new Hr,Js=new Hr,Ee=new U;class ln extends ns{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:i0++}),this.uuid=Vr(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(wf(t)?Rf:Lf)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new Ut().getNormalMatrix(t);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(t),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return sn.makeRotationFromQuaternion(t),this.applyMatrix4(sn),this}rotateX(t){return sn.makeRotationX(t),this.applyMatrix4(sn),this}rotateY(t){return sn.makeRotationY(t),this.applyMatrix4(sn),this}rotateZ(t){return sn.makeRotationZ(t),this.applyMatrix4(sn),this}translate(t,e,n){return sn.makeTranslation(t,e,n),this.applyMatrix4(sn),this}scale(t,e,n){return sn.makeScale(t,e,n),this.applyMatrix4(sn),this}lookAt(t){return Xa.lookAt(t),Xa.updateMatrix(),this.applyMatrix4(Xa.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(gs).negate(),this.translate(gs.x,gs.y,gs.z),this}setFromPoints(t){const e=[];for(let n=0,i=t.length;n<i;n++){const r=t[n];e.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new je(e,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Hr);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new U(-1/0,-1/0,-1/0),new U(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,i=e.length;n<i;n++){const r=e[n];Ze.setFromBufferAttribute(r),this.morphTargetsRelative?(Ee.addVectors(this.boundingBox.min,Ze.min),this.boundingBox.expandByPoint(Ee),Ee.addVectors(this.boundingBox.max,Ze.max),this.boundingBox.expandByPoint(Ee)):(this.boundingBox.expandByPoint(Ze.min),this.boundingBox.expandByPoint(Ze.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new ua);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new U,1/0);return}if(t){const n=this.boundingSphere.center;if(Ze.setFromBufferAttribute(t),e)for(let r=0,o=e.length;r<o;r++){const a=e[r];Js.setFromBufferAttribute(a),this.morphTargetsRelative?(Ee.addVectors(Ze.min,Js.min),Ze.expandByPoint(Ee),Ee.addVectors(Ze.max,Js.max),Ze.expandByPoint(Ee)):(Ze.expandByPoint(Js.min),Ze.expandByPoint(Js.max))}Ze.getCenter(n);let i=0;for(let r=0,o=t.count;r<o;r++)Ee.fromBufferAttribute(t,r),i=Math.max(i,n.distanceToSquared(Ee));if(e)for(let r=0,o=e.length;r<o;r++){const a=e[r],l=this.morphTargetsRelative;for(let c=0,h=a.count;c<h;c++)Ee.fromBufferAttribute(a,c),l&&(gs.fromBufferAttribute(t,c),Ee.add(gs)),i=Math.max(i,n.distanceToSquared(Ee))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.array,i=e.position.array,r=e.normal.array,o=e.uv.array,a=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new bn(new Float32Array(4*a),4));const l=this.getAttribute("tangent").array,c=[],h=[];for(let M=0;M<a;M++)c[M]=new U,h[M]=new U;const u=new U,d=new U,f=new U,g=new Lt,_=new Lt,m=new Lt,p=new U,x=new U;function w(M,L,I){u.fromArray(i,M*3),d.fromArray(i,L*3),f.fromArray(i,I*3),g.fromArray(o,M*2),_.fromArray(o,L*2),m.fromArray(o,I*2),d.sub(u),f.sub(u),_.sub(g),m.sub(g);const C=1/(_.x*m.y-m.x*_.y);isFinite(C)&&(p.copy(d).multiplyScalar(m.y).addScaledVector(f,-_.y).multiplyScalar(C),x.copy(f).multiplyScalar(_.x).addScaledVector(d,-m.x).multiplyScalar(C),c[M].add(p),c[L].add(p),c[I].add(p),h[M].add(x),h[L].add(x),h[I].add(x))}let v=this.groups;v.length===0&&(v=[{start:0,count:n.length}]);for(let M=0,L=v.length;M<L;++M){const I=v[M],C=I.start,D=I.count;for(let P=C,O=C+D;P<O;P+=3)w(n[P+0],n[P+1],n[P+2])}const y=new U,S=new U,T=new U,A=new U;function b(M){T.fromArray(r,M*3),A.copy(T);const L=c[M];y.copy(L),y.sub(T.multiplyScalar(T.dot(L))).normalize(),S.crossVectors(A,L);const C=S.dot(h[M])<0?-1:1;l[M*4]=y.x,l[M*4+1]=y.y,l[M*4+2]=y.z,l[M*4+3]=C}for(let M=0,L=v.length;M<L;++M){const I=v[M],C=I.start,D=I.count;for(let P=C,O=C+D;P<O;P+=3)b(n[P+0]),b(n[P+1]),b(n[P+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new bn(new Float32Array(e.count*3),3),this.setAttribute("normal",n);else for(let d=0,f=n.count;d<f;d++)n.setXYZ(d,0,0,0);const i=new U,r=new U,o=new U,a=new U,l=new U,c=new U,h=new U,u=new U;if(t)for(let d=0,f=t.count;d<f;d+=3){const g=t.getX(d+0),_=t.getX(d+1),m=t.getX(d+2);i.fromBufferAttribute(e,g),r.fromBufferAttribute(e,_),o.fromBufferAttribute(e,m),h.subVectors(o,r),u.subVectors(i,r),h.cross(u),a.fromBufferAttribute(n,g),l.fromBufferAttribute(n,_),c.fromBufferAttribute(n,m),a.add(h),l.add(h),c.add(h),n.setXYZ(g,a.x,a.y,a.z),n.setXYZ(_,l.x,l.y,l.z),n.setXYZ(m,c.x,c.y,c.z)}else for(let d=0,f=e.count;d<f;d+=3)i.fromBufferAttribute(e,d+0),r.fromBufferAttribute(e,d+1),o.fromBufferAttribute(e,d+2),h.subVectors(o,r),u.subVectors(i,r),h.cross(u),n.setXYZ(d+0,h.x,h.y,h.z),n.setXYZ(d+1,h.x,h.y,h.z),n.setXYZ(d+2,h.x,h.y,h.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeGeometries() instead."),this}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)Ee.fromBufferAttribute(t,e),Ee.normalize(),t.setXYZ(e,Ee.x,Ee.y,Ee.z)}toNonIndexed(){function t(a,l){const c=a.array,h=a.itemSize,u=a.normalized,d=new c.constructor(l.length*h);let f=0,g=0;for(let _=0,m=l.length;_<m;_++){a.isInterleavedBufferAttribute?f=l[_]*a.data.stride+a.offset:f=l[_]*h;for(let p=0;p<h;p++)d[g++]=c[f++]}return new bn(d,h,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new ln,n=this.index.array,i=this.attributes;for(const a in i){const l=i[a],c=t(l,n);e.setAttribute(a,c)}const r=this.morphAttributes;for(const a in r){const l=[],c=r[a];for(let h=0,u=c.length;h<u;h++){const d=c[h],f=t(d,n);l.push(f)}e.morphAttributes[a]=l}e.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];e.addGroup(c.start,c.count,c.materialIndex)}return e}toJSON(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(t[c]=l[c]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const l in n){const c=n[l];t.data.attributes[l]=c.toJSON(t.data)}const i={};let r=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],h=[];for(let u=0,d=c.length;u<d;u++){const f=c[u];h.push(f.toJSON(t.data))}h.length>0&&(i[l]=h,r=!0)}r&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(t.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;n!==null&&this.setIndex(n.clone(e));const i=t.attributes;for(const c in i){const h=i[c];this.setAttribute(c,h.clone(e))}const r=t.morphAttributes;for(const c in r){const h=[],u=r[c];for(let d=0,f=u.length;d<f;d++)h.push(u[d].clone(e));this.morphAttributes[c]=h}this.morphTargetsRelative=t.morphTargetsRelative;const o=t.groups;for(let c=0,h=o.length;c<h;c++){const u=o[c];this.addGroup(u.start,u.count,u.materialIndex)}const a=t.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=t.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Rh=new ve,En=new Tf,ro=new ua,Dh=new U,_s=new U,xs=new U,vs=new U,Ya=new U,oo=new U,ao=new Lt,lo=new Lt,co=new Lt,Ih=new U,Fh=new U,Oh=new U,ho=new U,uo=new U;class ae extends Ce{constructor(t=new ln,e=new oc){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}getVertexPosition(t,e){const n=this.geometry,i=n.attributes.position,r=n.morphAttributes.position,o=n.morphTargetsRelative;e.fromBufferAttribute(i,t);const a=this.morphTargetInfluences;if(r&&a){oo.set(0,0,0);for(let l=0,c=r.length;l<c;l++){const h=a[l],u=r[l];h!==0&&(Ya.fromBufferAttribute(u,t),o?oo.addScaledVector(Ya,h):oo.addScaledVector(Ya.sub(e),h))}e.add(oo)}return this.isSkinnedMesh&&this.applyBoneTransform(t,e),e}raycast(t,e){const n=this.geometry,i=this.material,r=this.matrixWorld;if(i===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),ro.copy(n.boundingSphere),ro.applyMatrix4(r),En.copy(t.ray).recast(t.near),ro.containsPoint(En.origin)===!1&&(En.intersectSphere(ro,Dh)===null||En.origin.distanceToSquared(Dh)>(t.far-t.near)**2))||(Rh.copy(r).invert(),En.copy(t.ray).applyMatrix4(Rh),n.boundingBox!==null&&En.intersectsBox(n.boundingBox)===!1))return;let o;const a=n.index,l=n.attributes.position,c=n.attributes.uv,h=n.attributes.uv2,u=n.attributes.normal,d=n.groups,f=n.drawRange;if(a!==null)if(Array.isArray(i))for(let g=0,_=d.length;g<_;g++){const m=d[g],p=i[m.materialIndex],x=Math.max(m.start,f.start),w=Math.min(a.count,Math.min(m.start+m.count,f.start+f.count));for(let v=x,y=w;v<y;v+=3){const S=a.getX(v),T=a.getX(v+1),A=a.getX(v+2);o=fo(this,p,t,En,c,h,u,S,T,A),o&&(o.faceIndex=Math.floor(v/3),o.face.materialIndex=m.materialIndex,e.push(o))}}else{const g=Math.max(0,f.start),_=Math.min(a.count,f.start+f.count);for(let m=g,p=_;m<p;m+=3){const x=a.getX(m),w=a.getX(m+1),v=a.getX(m+2);o=fo(this,i,t,En,c,h,u,x,w,v),o&&(o.faceIndex=Math.floor(m/3),e.push(o))}}else if(l!==void 0)if(Array.isArray(i))for(let g=0,_=d.length;g<_;g++){const m=d[g],p=i[m.materialIndex],x=Math.max(m.start,f.start),w=Math.min(l.count,Math.min(m.start+m.count,f.start+f.count));for(let v=x,y=w;v<y;v+=3){const S=v,T=v+1,A=v+2;o=fo(this,p,t,En,c,h,u,S,T,A),o&&(o.faceIndex=Math.floor(v/3),o.face.materialIndex=m.materialIndex,e.push(o))}}else{const g=Math.max(0,f.start),_=Math.min(l.count,f.start+f.count);for(let m=g,p=_;m<p;m+=3){const x=m,w=m+1,v=m+2;o=fo(this,i,t,En,c,h,u,x,w,v),o&&(o.faceIndex=Math.floor(m/3),e.push(o))}}}}function s0(s,t,e,n,i,r,o,a){let l;if(t.side===Ge?l=n.intersectTriangle(o,r,i,!0,a):l=n.intersectTriangle(i,r,o,t.side===_i,a),l===null)return null;uo.copy(a),uo.applyMatrix4(s.matrixWorld);const c=e.ray.origin.distanceTo(uo);return c<e.near||c>e.far?null:{distance:c,point:uo.clone(),object:s}}function fo(s,t,e,n,i,r,o,a,l,c){s.getVertexPosition(a,_s),s.getVertexPosition(l,xs),s.getVertexPosition(c,vs);const h=s0(s,t,e,n,_s,xs,vs,ho);if(h){i&&(ao.fromBufferAttribute(i,a),lo.fromBufferAttribute(i,l),co.fromBufferAttribute(i,c),h.uv=pn.getInterpolation(ho,_s,xs,vs,ao,lo,co,new Lt)),r&&(ao.fromBufferAttribute(r,a),lo.fromBufferAttribute(r,l),co.fromBufferAttribute(r,c),h.uv2=pn.getInterpolation(ho,_s,xs,vs,ao,lo,co,new Lt)),o&&(Ih.fromBufferAttribute(o,a),Fh.fromBufferAttribute(o,l),Oh.fromBufferAttribute(o,c),h.normal=pn.getInterpolation(ho,_s,xs,vs,Ih,Fh,Oh,new U),h.normal.dot(n.direction)>0&&h.normal.multiplyScalar(-1));const u={a,b:l,c,normal:new U,materialIndex:0};pn.getNormal(_s,xs,vs,u.normal),h.face=u}return h}class xn extends ln{constructor(t=1,e=1,n=1,i=1,r=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:r,depthSegments:o};const a=this;i=Math.floor(i),r=Math.floor(r),o=Math.floor(o);const l=[],c=[],h=[],u=[];let d=0,f=0;g("z","y","x",-1,-1,n,e,t,o,r,0),g("z","y","x",1,-1,n,e,-t,o,r,1),g("x","z","y",1,1,t,n,e,i,o,2),g("x","z","y",1,-1,t,n,-e,i,o,3),g("x","y","z",1,-1,t,e,n,i,r,4),g("x","y","z",-1,-1,t,e,-n,i,r,5),this.setIndex(l),this.setAttribute("position",new je(c,3)),this.setAttribute("normal",new je(h,3)),this.setAttribute("uv",new je(u,2));function g(_,m,p,x,w,v,y,S,T,A,b){const M=v/T,L=y/A,I=v/2,C=y/2,D=S/2,P=T+1,O=A+1;let V=0,B=0;const j=new U;for(let $=0;$<O;$++){const ct=$*L-C;for(let G=0;G<P;G++){const q=G*M-I;j[_]=q*x,j[m]=ct*w,j[p]=D,c.push(j.x,j.y,j.z),j[_]=0,j[m]=0,j[p]=S>0?1:-1,h.push(j.x,j.y,j.z),u.push(G/T),u.push(1-$/A),V+=1}}for(let $=0;$<A;$++)for(let ct=0;ct<T;ct++){const G=d+ct+P*$,q=d+ct+P*($+1),J=d+(ct+1)+P*($+1),ot=d+(ct+1)+P*$;l.push(G,q,ot),l.push(q,J,ot),B+=6}a.addGroup(f,B,b),f+=B,d+=V}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new xn(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function Bs(s){const t={};for(const e in s){t[e]={};for(const n in s[e]){const i=s[e][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[e][n]=null):t[e][n]=i.clone():Array.isArray(i)?t[e][n]=i.slice():t[e][n]=i}}return t}function Ne(s){const t={};for(let e=0;e<s.length;e++){const n=Bs(s[e]);for(const i in n)t[i]=n[i]}return t}function r0(s){const t=[];for(let e=0;e<s.length;e++)t.push(s[e].clone());return t}function Df(s){return s.getRenderTarget()===null&&s.outputEncoding===ee?Rn:Lr}const o0={clone:Bs,merge:Ne};var a0=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,l0=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Qi extends zn{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=a0,this.fragmentShader=l0,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Bs(t.uniforms),this.uniformsGroups=r0(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?e.uniforms[i]={type:"t",value:o.toJSON(t).uuid}:o&&o.isColor?e.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?e.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?e.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?e.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?e.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?e.uniforms[i]={type:"m4",value:o.toArray()}:e.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}class If extends Ce{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new ve,this.projectionMatrix=new ve,this.projectionMatrixInverse=new ve}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class an extends If{constructor(t=50,e=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=Fl*2*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(Ra*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return Fl*2*Math.atan(Math.tan(Ra*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,n,i,r,o){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(Ra*.5*this.fov)/this.zoom,n=2*e,i=this.aspect*n,r=-.5*i;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;r+=o.offsetX*i/l,e-=o.offsetY*n/c,i*=o.width/l,n*=o.height/c}const a=this.filmOffset;a!==0&&(r+=t*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,e,e-n,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const ys=-90,bs=1;class c0 extends Ce{constructor(t,e,n){super(),this.type="CubeCamera",this.renderTarget=n;const i=new an(ys,bs,t,e);i.layers=this.layers,i.up.set(0,1,0),i.lookAt(1,0,0),this.add(i);const r=new an(ys,bs,t,e);r.layers=this.layers,r.up.set(0,1,0),r.lookAt(-1,0,0),this.add(r);const o=new an(ys,bs,t,e);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(0,1,0),this.add(o);const a=new an(ys,bs,t,e);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(0,-1,0),this.add(a);const l=new an(ys,bs,t,e);l.layers=this.layers,l.up.set(0,1,0),l.lookAt(0,0,1),this.add(l);const c=new an(ys,bs,t,e);c.layers=this.layers,c.up.set(0,1,0),c.lookAt(0,0,-1),this.add(c)}update(t,e){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[i,r,o,a,l,c]=this.children,h=t.getRenderTarget(),u=t.toneMapping,d=t.xr.enabled;t.toneMapping=ii,t.xr.enabled=!1;const f=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,i),t.setRenderTarget(n,1),t.render(e,r),t.setRenderTarget(n,2),t.render(e,o),t.setRenderTarget(n,3),t.render(e,a),t.setRenderTarget(n,4),t.render(e,l),n.texture.generateMipmaps=f,t.setRenderTarget(n,5),t.render(e,c),t.setRenderTarget(h),t.toneMapping=u,t.xr.enabled=d,n.texture.needsPMREMUpdate=!0}}class Ff extends qe{constructor(t,e,n,i,r,o,a,l,c,h){t=t!==void 0?t:[],e=e!==void 0?e:zs,super(t,e,n,i,r,o,a,l,c,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class h0 extends Zi{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},i=[n,n,n,n,n,n];this.texture=new Ff(i,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=e.generateMipmaps!==void 0?e.generateMipmaps:!1,this.texture.minFilter=e.minFilter!==void 0?e.minFilter:on}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new xn(5,5,5),r=new Qi({name:"CubemapFromEquirect",uniforms:Bs(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Ge,blending:pi});r.uniforms.tEquirect.value=e;const o=new ae(i,r),a=e.minFilter;return e.minFilter===Cr&&(e.minFilter=on),new c0(1,10,this).update(t,o),e.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(t,e,n,i){const r=t.getRenderTarget();for(let o=0;o<6;o++)t.setRenderTarget(this,o),t.clear(e,n,i);t.setRenderTarget(r)}}const $a=new U,u0=new U,d0=new Ut;class Fi{constructor(t=new U(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=$a.subVectors(n,e).cross(u0.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,e){const n=t.delta($a),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(t.start)===0?e.copy(t.start):null;const r=-(t.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:e.copy(t.start).addScaledVector(n,r)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||d0.getNormalMatrix(t),i=this.coplanarPoint($a).applyMatrix4(t),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Ti=new ua,po=new U;class ac{constructor(t=new Fi,e=new Fi,n=new Fi,i=new Fi,r=new Fi,o=new Fi){this.planes=[t,e,n,i,r,o]}set(t,e,n,i,r,o){const a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(n),a[3].copy(i),a[4].copy(r),a[5].copy(o),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t){const e=this.planes,n=t.elements,i=n[0],r=n[1],o=n[2],a=n[3],l=n[4],c=n[5],h=n[6],u=n[7],d=n[8],f=n[9],g=n[10],_=n[11],m=n[12],p=n[13],x=n[14],w=n[15];return e[0].setComponents(a-i,u-l,_-d,w-m).normalize(),e[1].setComponents(a+i,u+l,_+d,w+m).normalize(),e[2].setComponents(a+r,u+c,_+f,w+p).normalize(),e[3].setComponents(a-r,u-c,_-f,w-p).normalize(),e[4].setComponents(a-o,u-h,_-g,w-x).normalize(),e[5].setComponents(a+o,u+h,_+g,w+x).normalize(),this}intersectsObject(t){if(t.boundingSphere!==void 0)t.boundingSphere===null&&t.computeBoundingSphere(),Ti.copy(t.boundingSphere).applyMatrix4(t.matrixWorld);else{const e=t.geometry;e.boundingSphere===null&&e.computeBoundingSphere(),Ti.copy(e.boundingSphere).applyMatrix4(t.matrixWorld)}return this.intersectsSphere(Ti)}intersectsSprite(t){return Ti.center.set(0,0,0),Ti.radius=.7071067811865476,Ti.applyMatrix4(t.matrixWorld),this.intersectsSphere(Ti)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let r=0;r<6;r++)if(e[r].distanceToPoint(n)<i)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(po.x=i.normal.x>0?t.max.x:t.min.x,po.y=i.normal.y>0?t.max.y:t.min.y,po.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(po)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Of(){let s=null,t=!1,e=null,n=null;function i(r,o){e(r,o),n=s.requestAnimationFrame(i)}return{start:function(){t!==!0&&e!==null&&(n=s.requestAnimationFrame(i),t=!0)},stop:function(){s.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(r){e=r},setContext:function(r){s=r}}}function f0(s,t){const e=t.isWebGL2,n=new WeakMap;function i(c,h){const u=c.array,d=c.usage,f=s.createBuffer();s.bindBuffer(h,f),s.bufferData(h,u,d),c.onUploadCallback();let g;if(u instanceof Float32Array)g=5126;else if(u instanceof Uint16Array)if(c.isFloat16BufferAttribute)if(e)g=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else g=5123;else if(u instanceof Int16Array)g=5122;else if(u instanceof Uint32Array)g=5125;else if(u instanceof Int32Array)g=5124;else if(u instanceof Int8Array)g=5120;else if(u instanceof Uint8Array)g=5121;else if(u instanceof Uint8ClampedArray)g=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+u);return{buffer:f,type:g,bytesPerElement:u.BYTES_PER_ELEMENT,version:c.version}}function r(c,h,u){const d=h.array,f=h.updateRange;s.bindBuffer(u,c),f.count===-1?s.bufferSubData(u,0,d):(e?s.bufferSubData(u,f.offset*d.BYTES_PER_ELEMENT,d,f.offset,f.count):s.bufferSubData(u,f.offset*d.BYTES_PER_ELEMENT,d.subarray(f.offset,f.offset+f.count)),f.count=-1),h.onUploadCallback()}function o(c){return c.isInterleavedBufferAttribute&&(c=c.data),n.get(c)}function a(c){c.isInterleavedBufferAttribute&&(c=c.data);const h=n.get(c);h&&(s.deleteBuffer(h.buffer),n.delete(c))}function l(c,h){if(c.isGLBufferAttribute){const d=n.get(c);(!d||d.version<c.version)&&n.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const u=n.get(c);u===void 0?n.set(c,i(c,h)):u.version<c.version&&(r(u.buffer,c,h),u.version=c.version)}return{get:o,remove:a,update:l}}class lc extends ln{constructor(t=1,e=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const r=t/2,o=e/2,a=Math.floor(n),l=Math.floor(i),c=a+1,h=l+1,u=t/a,d=e/l,f=[],g=[],_=[],m=[];for(let p=0;p<h;p++){const x=p*d-o;for(let w=0;w<c;w++){const v=w*u-r;g.push(v,-x,0),_.push(0,0,1),m.push(w/a),m.push(1-p/l)}}for(let p=0;p<l;p++)for(let x=0;x<a;x++){const w=x+c*p,v=x+c*(p+1),y=x+1+c*(p+1),S=x+1+c*p;f.push(w,v,S),f.push(v,y,S)}this.setIndex(f),this.setAttribute("position",new je(g,3)),this.setAttribute("normal",new je(_,3)),this.setAttribute("uv",new je(m,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new lc(t.width,t.height,t.widthSegments,t.heightSegments)}}var p0=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,m0=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,g0=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,_0=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,x0=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,v0=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,y0="vec3 transformed = vec3( position );",b0=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,M0=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,w0=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,S0=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,E0=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,A0=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,T0=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,C0=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,P0=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,L0=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,R0=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,D0=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,I0=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,F0=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,O0=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,z0=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,k0=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,N0=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,B0=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,U0="gl_FragColor = linearToOutputTexel( gl_FragColor );",V0=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,H0=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,W0=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,G0=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,q0=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,j0=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,X0=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,Y0=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,$0=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,K0=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,Z0=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,J0=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,Q0=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,t_=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,e_=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,n_=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,i_=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,s_=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,r_=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,o_=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,a_=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,l_=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif`,c_=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,h_=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,u_=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,d_=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,f_=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,p_=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,m_=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,g_=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,__=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,x_=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,v_=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,y_=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,b_=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,M_=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,w_=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,S_=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,E_=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,A_=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,T_=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#ifdef USE_NORMALMAP_TANGENTSPACE
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal, vNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 geometryNormal = normal;`,C_=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,P_=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,L_=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,R_=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,D_=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,I_=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,F_=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,O_=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,z_=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,k_=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,N_=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,B_=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,U_=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,V_=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,H_=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,W_=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,G_=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,q_=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,j_=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,X_=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,Y_=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,$_=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,K_=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,Z_=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,J_=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,Q_=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,tx=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,ex=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,nx=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,ix=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );
#endif`,sx=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, vec2 fullSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		
		vec2 lodFudge = pow( 1.95, lod ) / fullSize;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec2 fullSize = vec2( textureSize( sampler, 0 ) );
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), fullSize, floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), fullSize, ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,rx=`#ifdef USE_UV
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,ox=`#ifdef USE_UV
	varying vec2 vUv;
#endif
#ifdef USE_UV2
	attribute vec2 uv2;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,ax=`#ifdef USE_UV
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,lx=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const cx=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,hx=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,ux=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,dx=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,fx=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,px=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,mx=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,gx=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,_x=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,xx=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,vx=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,yx=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,bx=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Mx=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,wx=`#include <common>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Sx=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Ex=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Ax=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Tx=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Cx=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Px=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Lx=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,Rx=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Dx=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Ix=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,Fx=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Ox=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,zx=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,kx=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Nx=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Bx=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Ux=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Vx=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Hx=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,It={alphamap_fragment:p0,alphamap_pars_fragment:m0,alphatest_fragment:g0,alphatest_pars_fragment:_0,aomap_fragment:x0,aomap_pars_fragment:v0,begin_vertex:y0,beginnormal_vertex:b0,bsdfs:M0,iridescence_fragment:w0,bumpmap_pars_fragment:S0,clipping_planes_fragment:E0,clipping_planes_pars_fragment:A0,clipping_planes_pars_vertex:T0,clipping_planes_vertex:C0,color_fragment:P0,color_pars_fragment:L0,color_pars_vertex:R0,color_vertex:D0,common:I0,cube_uv_reflection_fragment:F0,defaultnormal_vertex:O0,displacementmap_pars_vertex:z0,displacementmap_vertex:k0,emissivemap_fragment:N0,emissivemap_pars_fragment:B0,encodings_fragment:U0,encodings_pars_fragment:V0,envmap_fragment:H0,envmap_common_pars_fragment:W0,envmap_pars_fragment:G0,envmap_pars_vertex:q0,envmap_physical_pars_fragment:i_,envmap_vertex:j0,fog_vertex:X0,fog_pars_vertex:Y0,fog_fragment:$0,fog_pars_fragment:K0,gradientmap_pars_fragment:Z0,lightmap_fragment:J0,lightmap_pars_fragment:Q0,lights_lambert_fragment:t_,lights_lambert_pars_fragment:e_,lights_pars_begin:n_,lights_toon_fragment:s_,lights_toon_pars_fragment:r_,lights_phong_fragment:o_,lights_phong_pars_fragment:a_,lights_physical_fragment:l_,lights_physical_pars_fragment:c_,lights_fragment_begin:h_,lights_fragment_maps:u_,lights_fragment_end:d_,logdepthbuf_fragment:f_,logdepthbuf_pars_fragment:p_,logdepthbuf_pars_vertex:m_,logdepthbuf_vertex:g_,map_fragment:__,map_pars_fragment:x_,map_particle_fragment:v_,map_particle_pars_fragment:y_,metalnessmap_fragment:b_,metalnessmap_pars_fragment:M_,morphcolor_vertex:w_,morphnormal_vertex:S_,morphtarget_pars_vertex:E_,morphtarget_vertex:A_,normal_fragment_begin:T_,normal_fragment_maps:C_,normal_pars_fragment:P_,normal_pars_vertex:L_,normal_vertex:R_,normalmap_pars_fragment:D_,clearcoat_normal_fragment_begin:I_,clearcoat_normal_fragment_maps:F_,clearcoat_pars_fragment:O_,iridescence_pars_fragment:z_,output_fragment:k_,packing:N_,premultiplied_alpha_fragment:B_,project_vertex:U_,dithering_fragment:V_,dithering_pars_fragment:H_,roughnessmap_fragment:W_,roughnessmap_pars_fragment:G_,shadowmap_pars_fragment:q_,shadowmap_pars_vertex:j_,shadowmap_vertex:X_,shadowmask_pars_fragment:Y_,skinbase_vertex:$_,skinning_pars_vertex:K_,skinning_vertex:Z_,skinnormal_vertex:J_,specularmap_fragment:Q_,specularmap_pars_fragment:tx,tonemapping_fragment:ex,tonemapping_pars_fragment:nx,transmission_fragment:ix,transmission_pars_fragment:sx,uv_pars_fragment:rx,uv_pars_vertex:ox,uv_vertex:ax,worldpos_vertex:lx,background_vert:cx,background_frag:hx,backgroundCube_vert:ux,backgroundCube_frag:dx,cube_vert:fx,cube_frag:px,depth_vert:mx,depth_frag:gx,distanceRGBA_vert:_x,distanceRGBA_frag:xx,equirect_vert:vx,equirect_frag:yx,linedashed_vert:bx,linedashed_frag:Mx,meshbasic_vert:wx,meshbasic_frag:Sx,meshlambert_vert:Ex,meshlambert_frag:Ax,meshmatcap_vert:Tx,meshmatcap_frag:Cx,meshnormal_vert:Px,meshnormal_frag:Lx,meshphong_vert:Rx,meshphong_frag:Dx,meshphysical_vert:Ix,meshphysical_frag:Fx,meshtoon_vert:Ox,meshtoon_frag:zx,points_vert:kx,points_frag:Nx,shadow_vert:Bx,shadow_frag:Ux,sprite_vert:Vx,sprite_frag:Hx},ht={common:{diffuse:{value:new Nt(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Ut},alphaMap:{value:null},alphaMapTransform:{value:new Ut},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Ut}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Ut}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Ut}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Ut},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Ut},normalScale:{value:new Lt(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Ut},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Ut}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Ut}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Ut}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Nt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Nt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Ut}},sprite:{diffuse:{value:new Nt(16777215)},opacity:{value:1},center:{value:new Lt(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Ut},alphaMap:{value:null},alphaTest:{value:0}}},Dn={basic:{uniforms:Ne([ht.common,ht.specularmap,ht.envmap,ht.aomap,ht.lightmap,ht.fog]),vertexShader:It.meshbasic_vert,fragmentShader:It.meshbasic_frag},lambert:{uniforms:Ne([ht.common,ht.specularmap,ht.envmap,ht.aomap,ht.lightmap,ht.emissivemap,ht.bumpmap,ht.normalmap,ht.displacementmap,ht.fog,ht.lights,{emissive:{value:new Nt(0)}}]),vertexShader:It.meshlambert_vert,fragmentShader:It.meshlambert_frag},phong:{uniforms:Ne([ht.common,ht.specularmap,ht.envmap,ht.aomap,ht.lightmap,ht.emissivemap,ht.bumpmap,ht.normalmap,ht.displacementmap,ht.fog,ht.lights,{emissive:{value:new Nt(0)},specular:{value:new Nt(1118481)},shininess:{value:30}}]),vertexShader:It.meshphong_vert,fragmentShader:It.meshphong_frag},standard:{uniforms:Ne([ht.common,ht.envmap,ht.aomap,ht.lightmap,ht.emissivemap,ht.bumpmap,ht.normalmap,ht.displacementmap,ht.roughnessmap,ht.metalnessmap,ht.fog,ht.lights,{emissive:{value:new Nt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:It.meshphysical_vert,fragmentShader:It.meshphysical_frag},toon:{uniforms:Ne([ht.common,ht.aomap,ht.lightmap,ht.emissivemap,ht.bumpmap,ht.normalmap,ht.displacementmap,ht.gradientmap,ht.fog,ht.lights,{emissive:{value:new Nt(0)}}]),vertexShader:It.meshtoon_vert,fragmentShader:It.meshtoon_frag},matcap:{uniforms:Ne([ht.common,ht.bumpmap,ht.normalmap,ht.displacementmap,ht.fog,{matcap:{value:null}}]),vertexShader:It.meshmatcap_vert,fragmentShader:It.meshmatcap_frag},points:{uniforms:Ne([ht.points,ht.fog]),vertexShader:It.points_vert,fragmentShader:It.points_frag},dashed:{uniforms:Ne([ht.common,ht.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:It.linedashed_vert,fragmentShader:It.linedashed_frag},depth:{uniforms:Ne([ht.common,ht.displacementmap]),vertexShader:It.depth_vert,fragmentShader:It.depth_frag},normal:{uniforms:Ne([ht.common,ht.bumpmap,ht.normalmap,ht.displacementmap,{opacity:{value:1}}]),vertexShader:It.meshnormal_vert,fragmentShader:It.meshnormal_frag},sprite:{uniforms:Ne([ht.sprite,ht.fog]),vertexShader:It.sprite_vert,fragmentShader:It.sprite_frag},background:{uniforms:{uvTransform:{value:new Ut},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:It.background_vert,fragmentShader:It.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:It.backgroundCube_vert,fragmentShader:It.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:It.cube_vert,fragmentShader:It.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:It.equirect_vert,fragmentShader:It.equirect_frag},distanceRGBA:{uniforms:Ne([ht.common,ht.displacementmap,{referencePosition:{value:new U},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:It.distanceRGBA_vert,fragmentShader:It.distanceRGBA_frag},shadow:{uniforms:Ne([ht.lights,ht.fog,{color:{value:new Nt(0)},opacity:{value:1}}]),vertexShader:It.shadow_vert,fragmentShader:It.shadow_frag}};Dn.physical={uniforms:Ne([Dn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Ut},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Ut},clearcoatNormalScale:{value:new Lt(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Ut},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Ut},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Ut},sheen:{value:0},sheenColor:{value:new Nt(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Ut},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Ut},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Ut},transmissionSamplerSize:{value:new Lt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Ut},attenuationDistance:{value:0},attenuationColor:{value:new Nt(0)},specularColor:{value:new Nt(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Ut},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Ut}}]),vertexShader:It.meshphysical_vert,fragmentShader:It.meshphysical_frag};const mo={r:0,b:0,g:0};function Wx(s,t,e,n,i,r,o){const a=new Nt(0);let l=r===!0?0:1,c,h,u=null,d=0,f=null;function g(m,p){let x=!1,w=p.isScene===!0?p.background:null;w&&w.isTexture&&(w=(p.backgroundBlurriness>0?e:t).get(w));const v=s.xr,y=v.getSession&&v.getSession();y&&y.environmentBlendMode==="additive"&&(w=null),w===null?_(a,l):w&&w.isColor&&(_(w,1),x=!0),(s.autoClear||x)&&s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil),w&&(w.isCubeTexture||w.mapping===ca)?(h===void 0&&(h=new ae(new xn(1,1,1),new Qi({name:"BackgroundCubeMaterial",uniforms:Bs(Dn.backgroundCube.uniforms),vertexShader:Dn.backgroundCube.vertexShader,fragmentShader:Dn.backgroundCube.fragmentShader,side:Ge,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(S,T,A){this.matrixWorld.copyPosition(A.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(h)),h.material.uniforms.envMap.value=w,h.material.uniforms.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=p.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=p.backgroundIntensity,h.material.toneMapped=w.encoding!==ee,(u!==w||d!==w.version||f!==s.toneMapping)&&(h.material.needsUpdate=!0,u=w,d=w.version,f=s.toneMapping),h.layers.enableAll(),m.unshift(h,h.geometry,h.material,0,0,null)):w&&w.isTexture&&(c===void 0&&(c=new ae(new lc(2,2),new Qi({name:"BackgroundMaterial",uniforms:Bs(Dn.background.uniforms),vertexShader:Dn.background.vertexShader,fragmentShader:Dn.background.fragmentShader,side:_i,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(c)),c.material.uniforms.t2D.value=w,c.material.uniforms.backgroundIntensity.value=p.backgroundIntensity,c.material.toneMapped=w.encoding!==ee,w.matrixAutoUpdate===!0&&w.updateMatrix(),c.material.uniforms.uvTransform.value.copy(w.matrix),(u!==w||d!==w.version||f!==s.toneMapping)&&(c.material.needsUpdate=!0,u=w,d=w.version,f=s.toneMapping),c.layers.enableAll(),m.unshift(c,c.geometry,c.material,0,0,null))}function _(m,p){m.getRGB(mo,Df(s)),n.buffers.color.setClear(mo.r,mo.g,mo.b,p,o)}return{getClearColor:function(){return a},setClearColor:function(m,p=1){a.set(m),l=p,_(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(m){l=m,_(a,l)},render:g}}function Gx(s,t,e,n){const i=s.getParameter(34921),r=n.isWebGL2?null:t.get("OES_vertex_array_object"),o=n.isWebGL2||r!==null,a={},l=m(null);let c=l,h=!1;function u(D,P,O,V,B){let j=!1;if(o){const $=_(V,O,P);c!==$&&(c=$,f(c.object)),j=p(D,V,O,B),j&&x(D,V,O,B)}else{const $=P.wireframe===!0;(c.geometry!==V.id||c.program!==O.id||c.wireframe!==$)&&(c.geometry=V.id,c.program=O.id,c.wireframe=$,j=!0)}B!==null&&e.update(B,34963),(j||h)&&(h=!1,A(D,P,O,V),B!==null&&s.bindBuffer(34963,e.get(B).buffer))}function d(){return n.isWebGL2?s.createVertexArray():r.createVertexArrayOES()}function f(D){return n.isWebGL2?s.bindVertexArray(D):r.bindVertexArrayOES(D)}function g(D){return n.isWebGL2?s.deleteVertexArray(D):r.deleteVertexArrayOES(D)}function _(D,P,O){const V=O.wireframe===!0;let B=a[D.id];B===void 0&&(B={},a[D.id]=B);let j=B[P.id];j===void 0&&(j={},B[P.id]=j);let $=j[V];return $===void 0&&($=m(d()),j[V]=$),$}function m(D){const P=[],O=[],V=[];for(let B=0;B<i;B++)P[B]=0,O[B]=0,V[B]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:P,enabledAttributes:O,attributeDivisors:V,object:D,attributes:{},index:null}}function p(D,P,O,V){const B=c.attributes,j=P.attributes;let $=0;const ct=O.getAttributes();for(const G in ct)if(ct[G].location>=0){const J=B[G];let ot=j[G];if(ot===void 0&&(G==="instanceMatrix"&&D.instanceMatrix&&(ot=D.instanceMatrix),G==="instanceColor"&&D.instanceColor&&(ot=D.instanceColor)),J===void 0||J.attribute!==ot||ot&&J.data!==ot.data)return!0;$++}return c.attributesNum!==$||c.index!==V}function x(D,P,O,V){const B={},j=P.attributes;let $=0;const ct=O.getAttributes();for(const G in ct)if(ct[G].location>=0){let J=j[G];J===void 0&&(G==="instanceMatrix"&&D.instanceMatrix&&(J=D.instanceMatrix),G==="instanceColor"&&D.instanceColor&&(J=D.instanceColor));const ot={};ot.attribute=J,J&&J.data&&(ot.data=J.data),B[G]=ot,$++}c.attributes=B,c.attributesNum=$,c.index=V}function w(){const D=c.newAttributes;for(let P=0,O=D.length;P<O;P++)D[P]=0}function v(D){y(D,0)}function y(D,P){const O=c.newAttributes,V=c.enabledAttributes,B=c.attributeDivisors;O[D]=1,V[D]===0&&(s.enableVertexAttribArray(D),V[D]=1),B[D]!==P&&((n.isWebGL2?s:t.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](D,P),B[D]=P)}function S(){const D=c.newAttributes,P=c.enabledAttributes;for(let O=0,V=P.length;O<V;O++)P[O]!==D[O]&&(s.disableVertexAttribArray(O),P[O]=0)}function T(D,P,O,V,B,j){n.isWebGL2===!0&&(O===5124||O===5125)?s.vertexAttribIPointer(D,P,O,B,j):s.vertexAttribPointer(D,P,O,V,B,j)}function A(D,P,O,V){if(n.isWebGL2===!1&&(D.isInstancedMesh||V.isInstancedBufferGeometry)&&t.get("ANGLE_instanced_arrays")===null)return;w();const B=V.attributes,j=O.getAttributes(),$=P.defaultAttributeValues;for(const ct in j){const G=j[ct];if(G.location>=0){let q=B[ct];if(q===void 0&&(ct==="instanceMatrix"&&D.instanceMatrix&&(q=D.instanceMatrix),ct==="instanceColor"&&D.instanceColor&&(q=D.instanceColor)),q!==void 0){const J=q.normalized,ot=q.itemSize,at=e.get(q);if(at===void 0)continue;const X=at.buffer,Et=at.type,St=at.bytesPerElement;if(q.isInterleavedBufferAttribute){const st=q.data,Mt=st.stride,Ht=q.offset;if(st.isInstancedInterleavedBuffer){for(let xt=0;xt<G.locationSize;xt++)y(G.location+xt,st.meshPerAttribute);D.isInstancedMesh!==!0&&V._maxInstanceCount===void 0&&(V._maxInstanceCount=st.meshPerAttribute*st.count)}else for(let xt=0;xt<G.locationSize;xt++)v(G.location+xt);s.bindBuffer(34962,X);for(let xt=0;xt<G.locationSize;xt++)T(G.location+xt,ot/G.locationSize,Et,J,Mt*St,(Ht+ot/G.locationSize*xt)*St)}else{if(q.isInstancedBufferAttribute){for(let st=0;st<G.locationSize;st++)y(G.location+st,q.meshPerAttribute);D.isInstancedMesh!==!0&&V._maxInstanceCount===void 0&&(V._maxInstanceCount=q.meshPerAttribute*q.count)}else for(let st=0;st<G.locationSize;st++)v(G.location+st);s.bindBuffer(34962,X);for(let st=0;st<G.locationSize;st++)T(G.location+st,ot/G.locationSize,Et,J,ot*St,ot/G.locationSize*st*St)}}else if($!==void 0){const J=$[ct];if(J!==void 0)switch(J.length){case 2:s.vertexAttrib2fv(G.location,J);break;case 3:s.vertexAttrib3fv(G.location,J);break;case 4:s.vertexAttrib4fv(G.location,J);break;default:s.vertexAttrib1fv(G.location,J)}}}}S()}function b(){I();for(const D in a){const P=a[D];for(const O in P){const V=P[O];for(const B in V)g(V[B].object),delete V[B];delete P[O]}delete a[D]}}function M(D){if(a[D.id]===void 0)return;const P=a[D.id];for(const O in P){const V=P[O];for(const B in V)g(V[B].object),delete V[B];delete P[O]}delete a[D.id]}function L(D){for(const P in a){const O=a[P];if(O[D.id]===void 0)continue;const V=O[D.id];for(const B in V)g(V[B].object),delete V[B];delete O[D.id]}}function I(){C(),h=!0,c!==l&&(c=l,f(c.object))}function C(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:u,reset:I,resetDefaultState:C,dispose:b,releaseStatesOfGeometry:M,releaseStatesOfProgram:L,initAttributes:w,enableAttribute:v,disableUnusedAttributes:S}}function qx(s,t,e,n){const i=n.isWebGL2;let r;function o(c){r=c}function a(c,h){s.drawArrays(r,c,h),e.update(h,r,1)}function l(c,h,u){if(u===0)return;let d,f;if(i)d=s,f="drawArraysInstanced";else if(d=t.get("ANGLE_instanced_arrays"),f="drawArraysInstancedANGLE",d===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}d[f](r,c,h,u),e.update(h,r,u)}this.setMode=o,this.render=a,this.renderInstances=l}function jx(s,t,e){let n;function i(){if(n!==void 0)return n;if(t.has("EXT_texture_filter_anisotropic")===!0){const T=t.get("EXT_texture_filter_anisotropic");n=s.getParameter(T.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function r(T){if(T==="highp"){if(s.getShaderPrecisionFormat(35633,36338).precision>0&&s.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";T="mediump"}return T==="mediump"&&s.getShaderPrecisionFormat(35633,36337).precision>0&&s.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&s.constructor.name==="WebGL2RenderingContext";let a=e.precision!==void 0?e.precision:"highp";const l=r(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const c=o||t.has("WEBGL_draw_buffers"),h=e.logarithmicDepthBuffer===!0,u=s.getParameter(34930),d=s.getParameter(35660),f=s.getParameter(3379),g=s.getParameter(34076),_=s.getParameter(34921),m=s.getParameter(36347),p=s.getParameter(36348),x=s.getParameter(36349),w=d>0,v=o||t.has("OES_texture_float"),y=w&&v,S=o?s.getParameter(36183):0;return{isWebGL2:o,drawBuffers:c,getMaxAnisotropy:i,getMaxPrecision:r,precision:a,logarithmicDepthBuffer:h,maxTextures:u,maxVertexTextures:d,maxTextureSize:f,maxCubemapSize:g,maxAttributes:_,maxVertexUniforms:m,maxVaryings:p,maxFragmentUniforms:x,vertexTextures:w,floatFragmentTextures:v,floatVertexTextures:y,maxSamples:S}}function Xx(s){const t=this;let e=null,n=0,i=!1,r=!1;const o=new Fi,a=new Ut,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(u,d){const f=u.length!==0||d||n!==0||i;return i=d,n=u.length,f},this.beginShadows=function(){r=!0,h(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(u,d){e=h(u,d,0)},this.setState=function(u,d,f){const g=u.clippingPlanes,_=u.clipIntersection,m=u.clipShadows,p=s.get(u);if(!i||g===null||g.length===0||r&&!m)r?h(null):c();else{const x=r?0:n,w=x*4;let v=p.clippingState||null;l.value=v,v=h(g,d,w,f);for(let y=0;y!==w;++y)v[y]=e[y];p.clippingState=v,this.numIntersection=_?this.numPlanes:0,this.numPlanes+=x}};function c(){l.value!==e&&(l.value=e,l.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function h(u,d,f,g){const _=u!==null?u.length:0;let m=null;if(_!==0){if(m=l.value,g!==!0||m===null){const p=f+_*4,x=d.matrixWorldInverse;a.getNormalMatrix(x),(m===null||m.length<p)&&(m=new Float32Array(p));for(let w=0,v=f;w!==_;++w,v+=4)o.copy(u[w]).applyMatrix4(x,a),o.normal.toArray(m,v),m[v+3]=o.constant}l.value=m,l.needsUpdate=!0}return t.numPlanes=_,t.numIntersection=0,m}}function Yx(s){let t=new WeakMap;function e(o,a){return a===Ll?o.mapping=zs:a===Rl&&(o.mapping=ks),o}function n(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const a=o.mapping;if(a===Ll||a===Rl)if(t.has(o)){const l=t.get(o).texture;return e(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new h0(l.height/2);return c.fromEquirectangularTexture(s,o),t.set(o,c),o.addEventListener("dispose",i),e(c.texture,o.mapping)}else return null}}return o}function i(o){const a=o.target;a.removeEventListener("dispose",i);const l=t.get(a);l!==void 0&&(t.delete(a),l.dispose())}function r(){t=new WeakMap}return{get:n,dispose:r}}class zf extends If{constructor(t=-1,e=1,n=1,i=-1,r=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=r,this.far=o,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,r,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-t,o=n+t,a=i+e,l=i-e;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=c*this.view.offsetX,o=r+c*this.view.width,a-=h*this.view.offsetY,l=a-h*this.view.height}this.projectionMatrix.makeOrthographic(r,o,a,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}}const Ls=4,zh=[.125,.215,.35,.446,.526,.582],Bi=20,Ka=new zf,kh=new Nt;let Za=null;const Oi=(1+Math.sqrt(5))/2,Ms=1/Oi,Nh=[new U(1,1,1),new U(-1,1,1),new U(1,1,-1),new U(-1,1,-1),new U(0,Oi,Ms),new U(0,Oi,-Ms),new U(Ms,0,Oi),new U(-Ms,0,Oi),new U(Oi,Ms,0),new U(-Oi,Ms,0)];class Bh{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,i=100){Za=this._renderer.getRenderTarget(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(t,n,i,r),e>0&&this._blur(r,0,0,e),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Hh(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Vh(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(Za),t.scissorTest=!1,go(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===zs||t.mapping===ks?this._setSize(t.image.length===0?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),Za=this._renderer.getRenderTarget();const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:on,minFilter:on,generateMipmaps:!1,type:Pr,format:_n,encoding:Ki,depthBuffer:!1},i=Uh(t,e,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Uh(t,e,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=$x(r)),this._blurMaterial=Kx(r,t,e)}return i}_compileMaterial(t){const e=new ae(this._lodPlanes[0],t);this._renderer.compile(e,Ka)}_sceneToCubeUV(t,e,n,i){const a=new an(90,1,e,n),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],h=this._renderer,u=h.autoClear,d=h.toneMapping;h.getClearColor(kh),h.toneMapping=ii,h.autoClear=!1;const f=new oc({name:"PMREM.Background",side:Ge,depthWrite:!1,depthTest:!1}),g=new ae(new xn,f);let _=!1;const m=t.background;m?m.isColor&&(f.color.copy(m),t.background=null,_=!0):(f.color.copy(kh),_=!0);for(let p=0;p<6;p++){const x=p%3;x===0?(a.up.set(0,l[p],0),a.lookAt(c[p],0,0)):x===1?(a.up.set(0,0,l[p]),a.lookAt(0,c[p],0)):(a.up.set(0,l[p],0),a.lookAt(0,0,c[p]));const w=this._cubeSize;go(i,x*w,p>2?w:0,w,w),h.setRenderTarget(i),_&&h.render(g,a),h.render(t,a)}g.geometry.dispose(),g.material.dispose(),h.toneMapping=d,h.autoClear=u,t.background=m}_textureToCubeUV(t,e){const n=this._renderer,i=t.mapping===zs||t.mapping===ks;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=Hh()),this._cubemapMaterial.uniforms.flipEnvMap.value=t.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Vh());const r=i?this._cubemapMaterial:this._equirectMaterial,o=new ae(this._lodPlanes[0],r),a=r.uniforms;a.envMap.value=t;const l=this._cubeSize;go(e,0,0,3*l,2*l),n.setRenderTarget(e),n.render(o,Ka)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const r=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),o=Nh[(i-1)%Nh.length];this._blur(t,i-1,i,r,o)}e.autoClear=n}_blur(t,e,n,i,r){const o=this._pingPongRenderTarget;this._halfBlur(t,o,e,n,i,"latitudinal",r),this._halfBlur(o,t,n,n,i,"longitudinal",r)}_halfBlur(t,e,n,i,r,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,u=new ae(this._lodPlanes[i],c),d=c.uniforms,f=this._sizeLods[n]-1,g=isFinite(r)?Math.PI/(2*f):2*Math.PI/(2*Bi-1),_=r/g,m=isFinite(r)?1+Math.floor(h*_):Bi;m>Bi&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${Bi}`);const p=[];let x=0;for(let T=0;T<Bi;++T){const A=T/_,b=Math.exp(-A*A/2);p.push(b),T===0?x+=b:T<m&&(x+=2*b)}for(let T=0;T<p.length;T++)p[T]=p[T]/x;d.envMap.value=t.texture,d.samples.value=m,d.weights.value=p,d.latitudinal.value=o==="latitudinal",a&&(d.poleAxis.value=a);const{_lodMax:w}=this;d.dTheta.value=g,d.mipInt.value=w-n;const v=this._sizeLods[i],y=3*v*(i>w-Ls?i-w+Ls:0),S=4*(this._cubeSize-v);go(e,y,S,3*v,2*v),l.setRenderTarget(e),l.render(u,Ka)}}function $x(s){const t=[],e=[],n=[];let i=s;const r=s-Ls+1+zh.length;for(let o=0;o<r;o++){const a=Math.pow(2,i);e.push(a);let l=1/a;o>s-Ls?l=zh[o-s+Ls-1]:o===0&&(l=0),n.push(l);const c=1/(a-2),h=-c,u=1+c,d=[h,h,u,h,u,u,h,h,u,u,h,u],f=6,g=6,_=3,m=2,p=1,x=new Float32Array(_*g*f),w=new Float32Array(m*g*f),v=new Float32Array(p*g*f);for(let S=0;S<f;S++){const T=S%3*2/3-1,A=S>2?0:-1,b=[T,A,0,T+2/3,A,0,T+2/3,A+1,0,T,A,0,T+2/3,A+1,0,T,A+1,0];x.set(b,_*g*S),w.set(d,m*g*S);const M=[S,S,S,S,S,S];v.set(M,p*g*S)}const y=new ln;y.setAttribute("position",new bn(x,_)),y.setAttribute("uv",new bn(w,m)),y.setAttribute("faceIndex",new bn(v,p)),t.push(y),i>Ls&&i--}return{lodPlanes:t,sizeLods:e,sigmas:n}}function Uh(s,t,e){const n=new Zi(s,t,e);return n.texture.mapping=ca,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function go(s,t,e,n,i){s.viewport.set(t,e,n,i),s.scissor.set(t,e,n,i)}function Kx(s,t,e){const n=new Float32Array(Bi),i=new U(0,1,0);return new Qi({name:"SphericalGaussianBlur",defines:{n:Bi,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/e,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:cc(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:pi,depthTest:!1,depthWrite:!1})}function Vh(){return new Qi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:cc(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:pi,depthTest:!1,depthWrite:!1})}function Hh(){return new Qi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:cc(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:pi,depthTest:!1,depthWrite:!1})}function cc(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Zx(s){let t=new WeakMap,e=null;function n(a){if(a&&a.isTexture){const l=a.mapping,c=l===Ll||l===Rl,h=l===zs||l===ks;if(c||h)if(a.isRenderTargetTexture&&a.needsPMREMUpdate===!0){a.needsPMREMUpdate=!1;let u=t.get(a);return e===null&&(e=new Bh(s)),u=c?e.fromEquirectangular(a,u):e.fromCubemap(a,u),t.set(a,u),u.texture}else{if(t.has(a))return t.get(a).texture;{const u=a.image;if(c&&u&&u.height>0||h&&u&&i(u)){e===null&&(e=new Bh(s));const d=c?e.fromEquirectangular(a):e.fromCubemap(a);return t.set(a,d),a.addEventListener("dispose",r),d.texture}else return null}}}return a}function i(a){let l=0;const c=6;for(let h=0;h<c;h++)a[h]!==void 0&&l++;return l===c}function r(a){const l=a.target;l.removeEventListener("dispose",r);const c=t.get(l);c!==void 0&&(t.delete(l),c.dispose())}function o(){t=new WeakMap,e!==null&&(e.dispose(),e=null)}return{get:n,dispose:o}}function Jx(s){const t={};function e(n){if(t[n]!==void 0)return t[n];let i;switch(n){case"WEBGL_depth_texture":i=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=s.getExtension(n)}return t[n]=i,i}return{has:function(n){return e(n)!==null},init:function(n){n.isWebGL2?e("EXT_color_buffer_float"):(e("WEBGL_depth_texture"),e("OES_texture_float"),e("OES_texture_half_float"),e("OES_texture_half_float_linear"),e("OES_standard_derivatives"),e("OES_element_index_uint"),e("OES_vertex_array_object"),e("ANGLE_instanced_arrays")),e("OES_texture_float_linear"),e("EXT_color_buffer_half_float"),e("WEBGL_multisampled_render_to_texture")},get:function(n){const i=e(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function Qx(s,t,e,n){const i={},r=new WeakMap;function o(u){const d=u.target;d.index!==null&&t.remove(d.index);for(const g in d.attributes)t.remove(d.attributes[g]);d.removeEventListener("dispose",o),delete i[d.id];const f=r.get(d);f&&(t.remove(f),r.delete(d)),n.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,e.memory.geometries--}function a(u,d){return i[d.id]===!0||(d.addEventListener("dispose",o),i[d.id]=!0,e.memory.geometries++),d}function l(u){const d=u.attributes;for(const g in d)t.update(d[g],34962);const f=u.morphAttributes;for(const g in f){const _=f[g];for(let m=0,p=_.length;m<p;m++)t.update(_[m],34962)}}function c(u){const d=[],f=u.index,g=u.attributes.position;let _=0;if(f!==null){const x=f.array;_=f.version;for(let w=0,v=x.length;w<v;w+=3){const y=x[w+0],S=x[w+1],T=x[w+2];d.push(y,S,S,T,T,y)}}else{const x=g.array;_=g.version;for(let w=0,v=x.length/3-1;w<v;w+=3){const y=w+0,S=w+1,T=w+2;d.push(y,S,S,T,T,y)}}const m=new(wf(d)?Rf:Lf)(d,1);m.version=_;const p=r.get(u);p&&t.remove(p),r.set(u,m)}function h(u){const d=r.get(u);if(d){const f=u.index;f!==null&&d.version<f.version&&c(u)}else c(u);return r.get(u)}return{get:a,update:l,getWireframeAttribute:h}}function tv(s,t,e,n){const i=n.isWebGL2;let r;function o(d){r=d}let a,l;function c(d){a=d.type,l=d.bytesPerElement}function h(d,f){s.drawElements(r,f,a,d*l),e.update(f,r,1)}function u(d,f,g){if(g===0)return;let _,m;if(i)_=s,m="drawElementsInstanced";else if(_=t.get("ANGLE_instanced_arrays"),m="drawElementsInstancedANGLE",_===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}_[m](r,f,a,d*l,g),e.update(f,r,g)}this.setMode=o,this.setIndex=c,this.render=h,this.renderInstances=u}function ev(s){const t={geometries:0,textures:0},e={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,o,a){switch(e.calls++,o){case 4:e.triangles+=a*(r/3);break;case 1:e.lines+=a*(r/2);break;case 3:e.lines+=a*(r-1);break;case 2:e.lines+=a*r;break;case 0:e.points+=a*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function i(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0}return{memory:t,render:e,programs:null,autoReset:!0,reset:i,update:n}}function nv(s,t){return s[0]-t[0]}function iv(s,t){return Math.abs(t[1])-Math.abs(s[1])}function sv(s,t,e){const n={},i=new Float32Array(8),r=new WeakMap,o=new Ae,a=[];for(let c=0;c<8;c++)a[c]=[c,0];function l(c,h,u){const d=c.morphTargetInfluences;if(t.isWebGL2===!0){const g=h.morphAttributes.position||h.morphAttributes.normal||h.morphAttributes.color,_=g!==void 0?g.length:0;let m=r.get(h);if(m===void 0||m.count!==_){let P=function(){C.dispose(),r.delete(h),h.removeEventListener("dispose",P)};var f=P;m!==void 0&&m.texture.dispose();const w=h.morphAttributes.position!==void 0,v=h.morphAttributes.normal!==void 0,y=h.morphAttributes.color!==void 0,S=h.morphAttributes.position||[],T=h.morphAttributes.normal||[],A=h.morphAttributes.color||[];let b=0;w===!0&&(b=1),v===!0&&(b=2),y===!0&&(b=3);let M=h.attributes.position.count*b,L=1;M>t.maxTextureSize&&(L=Math.ceil(M/t.maxTextureSize),M=t.maxTextureSize);const I=new Float32Array(M*L*4*_),C=new Af(I,M,L,_);C.type=Hi,C.needsUpdate=!0;const D=b*4;for(let O=0;O<_;O++){const V=S[O],B=T[O],j=A[O],$=M*L*4*O;for(let ct=0;ct<V.count;ct++){const G=ct*D;w===!0&&(o.fromBufferAttribute(V,ct),I[$+G+0]=o.x,I[$+G+1]=o.y,I[$+G+2]=o.z,I[$+G+3]=0),v===!0&&(o.fromBufferAttribute(B,ct),I[$+G+4]=o.x,I[$+G+5]=o.y,I[$+G+6]=o.z,I[$+G+7]=0),y===!0&&(o.fromBufferAttribute(j,ct),I[$+G+8]=o.x,I[$+G+9]=o.y,I[$+G+10]=o.z,I[$+G+11]=j.itemSize===4?o.w:1)}}m={count:_,texture:C,size:new Lt(M,L)},r.set(h,m),h.addEventListener("dispose",P)}let p=0;for(let w=0;w<d.length;w++)p+=d[w];const x=h.morphTargetsRelative?1:1-p;u.getUniforms().setValue(s,"morphTargetBaseInfluence",x),u.getUniforms().setValue(s,"morphTargetInfluences",d),u.getUniforms().setValue(s,"morphTargetsTexture",m.texture,e),u.getUniforms().setValue(s,"morphTargetsTextureSize",m.size)}else{const g=d===void 0?0:d.length;let _=n[h.id];if(_===void 0||_.length!==g){_=[];for(let v=0;v<g;v++)_[v]=[v,0];n[h.id]=_}for(let v=0;v<g;v++){const y=_[v];y[0]=v,y[1]=d[v]}_.sort(iv);for(let v=0;v<8;v++)v<g&&_[v][1]?(a[v][0]=_[v][0],a[v][1]=_[v][1]):(a[v][0]=Number.MAX_SAFE_INTEGER,a[v][1]=0);a.sort(nv);const m=h.morphAttributes.position,p=h.morphAttributes.normal;let x=0;for(let v=0;v<8;v++){const y=a[v],S=y[0],T=y[1];S!==Number.MAX_SAFE_INTEGER&&T?(m&&h.getAttribute("morphTarget"+v)!==m[S]&&h.setAttribute("morphTarget"+v,m[S]),p&&h.getAttribute("morphNormal"+v)!==p[S]&&h.setAttribute("morphNormal"+v,p[S]),i[v]=T,x+=T):(m&&h.hasAttribute("morphTarget"+v)===!0&&h.deleteAttribute("morphTarget"+v),p&&h.hasAttribute("morphNormal"+v)===!0&&h.deleteAttribute("morphNormal"+v),i[v]=0)}const w=h.morphTargetsRelative?1:1-x;u.getUniforms().setValue(s,"morphTargetBaseInfluence",w),u.getUniforms().setValue(s,"morphTargetInfluences",i)}}return{update:l}}function rv(s,t,e,n){let i=new WeakMap;function r(l){const c=n.render.frame,h=l.geometry,u=t.get(l,h);return i.get(u)!==c&&(t.update(u),i.set(u,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),e.update(l.instanceMatrix,34962),l.instanceColor!==null&&e.update(l.instanceColor,34962)),u}function o(){i=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),e.remove(c.instanceMatrix),c.instanceColor!==null&&e.remove(c.instanceColor)}return{update:r,dispose:o}}const kf=new qe,Nf=new Af,Bf=new Yg,Uf=new Ff,Wh=[],Gh=[],qh=new Float32Array(16),jh=new Float32Array(9),Xh=new Float32Array(4);function js(s,t,e){const n=s[0];if(n<=0||n>0)return s;const i=t*e;let r=Wh[i];if(r===void 0&&(r=new Float32Array(i),Wh[i]=r),t!==0){n.toArray(r,0);for(let o=1,a=0;o!==t;++o)a+=e,s[o].toArray(r,a)}return r}function Me(s,t){if(s.length!==t.length)return!1;for(let e=0,n=s.length;e<n;e++)if(s[e]!==t[e])return!1;return!0}function we(s,t){for(let e=0,n=t.length;e<n;e++)s[e]=t[e]}function fa(s,t){let e=Gh[t];e===void 0&&(e=new Int32Array(t),Gh[t]=e);for(let n=0;n!==t;++n)e[n]=s.allocateTextureUnit();return e}function ov(s,t){const e=this.cache;e[0]!==t&&(s.uniform1f(this.addr,t),e[0]=t)}function av(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2f(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Me(e,t))return;s.uniform2fv(this.addr,t),we(e,t)}}function lv(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3f(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else if(t.r!==void 0)(e[0]!==t.r||e[1]!==t.g||e[2]!==t.b)&&(s.uniform3f(this.addr,t.r,t.g,t.b),e[0]=t.r,e[1]=t.g,e[2]=t.b);else{if(Me(e,t))return;s.uniform3fv(this.addr,t),we(e,t)}}function cv(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4f(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Me(e,t))return;s.uniform4fv(this.addr,t),we(e,t)}}function hv(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(Me(e,t))return;s.uniformMatrix2fv(this.addr,!1,t),we(e,t)}else{if(Me(e,n))return;Xh.set(n),s.uniformMatrix2fv(this.addr,!1,Xh),we(e,n)}}function uv(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(Me(e,t))return;s.uniformMatrix3fv(this.addr,!1,t),we(e,t)}else{if(Me(e,n))return;jh.set(n),s.uniformMatrix3fv(this.addr,!1,jh),we(e,n)}}function dv(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(Me(e,t))return;s.uniformMatrix4fv(this.addr,!1,t),we(e,t)}else{if(Me(e,n))return;qh.set(n),s.uniformMatrix4fv(this.addr,!1,qh),we(e,n)}}function fv(s,t){const e=this.cache;e[0]!==t&&(s.uniform1i(this.addr,t),e[0]=t)}function pv(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2i(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Me(e,t))return;s.uniform2iv(this.addr,t),we(e,t)}}function mv(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3i(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(Me(e,t))return;s.uniform3iv(this.addr,t),we(e,t)}}function gv(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4i(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Me(e,t))return;s.uniform4iv(this.addr,t),we(e,t)}}function _v(s,t){const e=this.cache;e[0]!==t&&(s.uniform1ui(this.addr,t),e[0]=t)}function xv(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2ui(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Me(e,t))return;s.uniform2uiv(this.addr,t),we(e,t)}}function vv(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3ui(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(Me(e,t))return;s.uniform3uiv(this.addr,t),we(e,t)}}function yv(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4ui(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Me(e,t))return;s.uniform4uiv(this.addr,t),we(e,t)}}function bv(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture2D(t||kf,i)}function Mv(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture3D(t||Bf,i)}function wv(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTextureCube(t||Uf,i)}function Sv(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture2DArray(t||Nf,i)}function Ev(s){switch(s){case 5126:return ov;case 35664:return av;case 35665:return lv;case 35666:return cv;case 35674:return hv;case 35675:return uv;case 35676:return dv;case 5124:case 35670:return fv;case 35667:case 35671:return pv;case 35668:case 35672:return mv;case 35669:case 35673:return gv;case 5125:return _v;case 36294:return xv;case 36295:return vv;case 36296:return yv;case 35678:case 36198:case 36298:case 36306:case 35682:return bv;case 35679:case 36299:case 36307:return Mv;case 35680:case 36300:case 36308:case 36293:return wv;case 36289:case 36303:case 36311:case 36292:return Sv}}function Av(s,t){s.uniform1fv(this.addr,t)}function Tv(s,t){const e=js(t,this.size,2);s.uniform2fv(this.addr,e)}function Cv(s,t){const e=js(t,this.size,3);s.uniform3fv(this.addr,e)}function Pv(s,t){const e=js(t,this.size,4);s.uniform4fv(this.addr,e)}function Lv(s,t){const e=js(t,this.size,4);s.uniformMatrix2fv(this.addr,!1,e)}function Rv(s,t){const e=js(t,this.size,9);s.uniformMatrix3fv(this.addr,!1,e)}function Dv(s,t){const e=js(t,this.size,16);s.uniformMatrix4fv(this.addr,!1,e)}function Iv(s,t){s.uniform1iv(this.addr,t)}function Fv(s,t){s.uniform2iv(this.addr,t)}function Ov(s,t){s.uniform3iv(this.addr,t)}function zv(s,t){s.uniform4iv(this.addr,t)}function kv(s,t){s.uniform1uiv(this.addr,t)}function Nv(s,t){s.uniform2uiv(this.addr,t)}function Bv(s,t){s.uniform3uiv(this.addr,t)}function Uv(s,t){s.uniform4uiv(this.addr,t)}function Vv(s,t,e){const n=this.cache,i=t.length,r=fa(e,i);Me(n,r)||(s.uniform1iv(this.addr,r),we(n,r));for(let o=0;o!==i;++o)e.setTexture2D(t[o]||kf,r[o])}function Hv(s,t,e){const n=this.cache,i=t.length,r=fa(e,i);Me(n,r)||(s.uniform1iv(this.addr,r),we(n,r));for(let o=0;o!==i;++o)e.setTexture3D(t[o]||Bf,r[o])}function Wv(s,t,e){const n=this.cache,i=t.length,r=fa(e,i);Me(n,r)||(s.uniform1iv(this.addr,r),we(n,r));for(let o=0;o!==i;++o)e.setTextureCube(t[o]||Uf,r[o])}function Gv(s,t,e){const n=this.cache,i=t.length,r=fa(e,i);Me(n,r)||(s.uniform1iv(this.addr,r),we(n,r));for(let o=0;o!==i;++o)e.setTexture2DArray(t[o]||Nf,r[o])}function qv(s){switch(s){case 5126:return Av;case 35664:return Tv;case 35665:return Cv;case 35666:return Pv;case 35674:return Lv;case 35675:return Rv;case 35676:return Dv;case 5124:case 35670:return Iv;case 35667:case 35671:return Fv;case 35668:case 35672:return Ov;case 35669:case 35673:return zv;case 5125:return kv;case 36294:return Nv;case 36295:return Bv;case 36296:return Uv;case 35678:case 36198:case 36298:case 36306:case 35682:return Vv;case 35679:case 36299:case 36307:return Hv;case 35680:case 36300:case 36308:case 36293:return Wv;case 36289:case 36303:case 36311:case 36292:return Gv}}class jv{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=Ev(e.type)}}class Xv{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=qv(e.type)}}class Yv{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,n){const i=this.seq;for(let r=0,o=i.length;r!==o;++r){const a=i[r];a.setValue(t,e[a.id],n)}}}const Ja=/(\w+)(\])?(\[|\.)?/g;function Yh(s,t){s.seq.push(t),s.map[t.id]=t}function $v(s,t,e){const n=s.name,i=n.length;for(Ja.lastIndex=0;;){const r=Ja.exec(n),o=Ja.lastIndex;let a=r[1];const l=r[2]==="]",c=r[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===i){Yh(e,c===void 0?new jv(a,s,t):new Xv(a,s,t));break}else{let u=e.map[a];u===void 0&&(u=new Yv(a),Yh(e,u)),e=u}}}class No{constructor(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,35718);for(let i=0;i<n;++i){const r=t.getActiveUniform(e,i),o=t.getUniformLocation(e,r.name);$v(r,o,this)}}setValue(t,e,n,i){const r=this.map[e];r!==void 0&&r.setValue(t,n,i)}setOptional(t,e,n){const i=e[n];i!==void 0&&this.setValue(t,n,i)}static upload(t,e,n,i){for(let r=0,o=e.length;r!==o;++r){const a=e[r],l=n[a.id];l.needsUpdate!==!1&&a.setValue(t,l.value,i)}}static seqWithValue(t,e){const n=[];for(let i=0,r=t.length;i!==r;++i){const o=t[i];o.id in e&&n.push(o)}return n}}function $h(s,t,e){const n=s.createShader(t);return s.shaderSource(n,e),s.compileShader(n),n}let Kv=0;function Zv(s,t){const e=s.split(`
`),n=[],i=Math.max(t-6,0),r=Math.min(t+6,e.length);for(let o=i;o<r;o++){const a=o+1;n.push(`${a===t?">":" "} ${a}: ${e[o]}`)}return n.join(`
`)}function Jv(s){switch(s){case Ki:return["Linear","( value )"];case ee:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",s),["Linear","( value )"]}}function Kh(s,t,e){const n=s.getShaderParameter(t,35713),i=s.getShaderInfoLog(t).trim();if(n&&i==="")return"";const r=/ERROR: 0:(\d+)/.exec(i);if(r){const o=parseInt(r[1]);return e.toUpperCase()+`

`+i+`

`+Zv(s.getShaderSource(t),o)}else return i}function Qv(s,t){const e=Jv(t);return"vec4 "+s+"( vec4 value ) { return LinearTo"+e[0]+e[1]+"; }"}function ty(s,t){let e;switch(t){case pg:e="Linear";break;case mg:e="Reinhard";break;case gg:e="OptimizedCineon";break;case _g:e="ACESFilmic";break;case xg:e="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),e="Linear"}return"vec3 "+s+"( vec3 color ) { return "+e+"ToneMapping( color ); }"}function ey(s){return[s.extensionDerivatives||s.envMapCubeUVHeight||s.bumpMap||s.normalMapTangentSpace||s.clearcoatNormalMap||s.flatShading||s.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(s.extensionFragDepth||s.logarithmicDepthBuffer)&&s.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",s.extensionDrawBuffers&&s.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(s.extensionShaderTextureLOD||s.envMap||s.transmission)&&s.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(ur).join(`
`)}function ny(s){const t=[];for(const e in s){const n=s[e];n!==!1&&t.push("#define "+e+" "+n)}return t.join(`
`)}function iy(s,t){const e={},n=s.getProgramParameter(t,35721);for(let i=0;i<n;i++){const r=s.getActiveAttrib(t,i),o=r.name;let a=1;r.type===35674&&(a=2),r.type===35675&&(a=3),r.type===35676&&(a=4),e[o]={type:r.type,location:s.getAttribLocation(t,o),locationSize:a}}return e}function ur(s){return s!==""}function Zh(s,t){const e=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,e).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function Jh(s,t){return s.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const sy=/^[ \t]*#include +<([\w\d./]+)>/gm;function Ol(s){return s.replace(sy,ry)}function ry(s,t){const e=It[t];if(e===void 0)throw new Error("Can not resolve #include <"+t+">");return Ol(e)}const oy=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Qh(s){return s.replace(oy,ay)}function ay(s,t,e,n){let i="";for(let r=parseInt(t);r<parseInt(e);r++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}function tu(s){let t="precision "+s.precision+` float;
precision `+s.precision+" int;";return s.precision==="highp"?t+=`
#define HIGH_PRECISION`:s.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function ly(s){let t="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===_f?t="SHADOWMAP_TYPE_PCF":s.shadowMapType===jm?t="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===hr&&(t="SHADOWMAP_TYPE_VSM"),t}function cy(s){let t="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case zs:case ks:t="ENVMAP_TYPE_CUBE";break;case ca:t="ENVMAP_TYPE_CUBE_UV";break}return t}function hy(s){let t="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case ks:t="ENVMAP_MODE_REFRACTION";break}return t}function uy(s){let t="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case la:t="ENVMAP_BLENDING_MULTIPLY";break;case dg:t="ENVMAP_BLENDING_MIX";break;case fg:t="ENVMAP_BLENDING_ADD";break}return t}function dy(s){const t=s.envMapCubeUVHeight;if(t===null)return null;const e=Math.log2(t)-2,n=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,e),7*16)),texelHeight:n,maxMip:e}}function fy(s,t,e,n){const i=s.getContext(),r=e.defines;let o=e.vertexShader,a=e.fragmentShader;const l=ly(e),c=cy(e),h=hy(e),u=uy(e),d=dy(e),f=e.isWebGL2?"":ey(e),g=ny(r),_=i.createProgram();let m,p,x=e.glslVersion?"#version "+e.glslVersion+`
`:"";e.isRawShaderMaterial?(m=[g].filter(ur).join(`
`),m.length>0&&(m+=`
`),p=[f,g].filter(ur).join(`
`),p.length>0&&(p+=`
`)):(m=[tu(e),"#define SHADER_NAME "+e.shaderName,g,e.instancing?"#define USE_INSTANCING":"",e.instancingColor?"#define USE_INSTANCING_COLOR":"",e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+h:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.displacementMap?"#define USE_DISPLACEMENTMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.mapUv?"#define MAP_UV "+e.mapUv:"",e.alphaMapUv?"#define ALPHAMAP_UV "+e.alphaMapUv:"",e.lightMapUv?"#define LIGHTMAP_UV "+e.lightMapUv:"",e.aoMapUv?"#define AOMAP_UV "+e.aoMapUv:"",e.emissiveMapUv?"#define EMISSIVEMAP_UV "+e.emissiveMapUv:"",e.bumpMapUv?"#define BUMPMAP_UV "+e.bumpMapUv:"",e.normalMapUv?"#define NORMALMAP_UV "+e.normalMapUv:"",e.displacementMapUv?"#define DISPLACEMENTMAP_UV "+e.displacementMapUv:"",e.metalnessMapUv?"#define METALNESSMAP_UV "+e.metalnessMapUv:"",e.roughnessMapUv?"#define ROUGHNESSMAP_UV "+e.roughnessMapUv:"",e.clearcoatMapUv?"#define CLEARCOATMAP_UV "+e.clearcoatMapUv:"",e.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+e.clearcoatNormalMapUv:"",e.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+e.clearcoatRoughnessMapUv:"",e.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+e.iridescenceMapUv:"",e.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+e.iridescenceThicknessMapUv:"",e.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+e.sheenColorMapUv:"",e.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+e.sheenRoughnessMapUv:"",e.specularMapUv?"#define SPECULARMAP_UV "+e.specularMapUv:"",e.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+e.specularColorMapUv:"",e.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+e.specularIntensityMapUv:"",e.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+e.transmissionMapUv:"",e.thicknessMapUv?"#define THICKNESSMAP_UV "+e.thicknessMapUv:"",e.vertexTangents?"#define USE_TANGENT":"",e.vertexColors?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUvs2?"#define USE_UV2":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.flatShading?"#define FLAT_SHADED":"",e.skinning?"#define USE_SKINNING":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals&&e.flatShading===!1?"#define USE_MORPHNORMALS":"",e.morphColors&&e.isWebGL2?"#define USE_MORPHCOLORS":"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+e.morphTextureStride:"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_COUNT "+e.morphTargetsCount:"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+l:"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(ur).join(`
`),p=[f,tu(e),"#define SHADER_NAME "+e.shaderName,g,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.matcap?"#define USE_MATCAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+c:"",e.envMap?"#define "+h:"",e.envMap?"#define "+u:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.clearcoat?"#define USE_CLEARCOAT":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescence?"#define USE_IRIDESCENCE":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaTest?"#define USE_ALPHATEST":"",e.sheen?"#define USE_SHEEN":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",e.vertexTangents?"#define USE_TANGENT":"",e.vertexColors||e.instancingColor?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUvs2?"#define USE_UV2":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.gradientMap?"#define USE_GRADIENTMAP":"",e.flatShading?"#define FLAT_SHADED":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+l:"",e.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",e.useLegacyLights?"#define LEGACY_LIGHTS":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",e.toneMapping!==ii?"#define TONE_MAPPING":"",e.toneMapping!==ii?It.tonemapping_pars_fragment:"",e.toneMapping!==ii?ty("toneMapping",e.toneMapping):"",e.dithering?"#define DITHERING":"",e.opaque?"#define OPAQUE":"",It.encodings_pars_fragment,Qv("linearToOutputTexel",e.outputEncoding),e.useDepthPacking?"#define DEPTH_PACKING "+e.depthPacking:"",`
`].filter(ur).join(`
`)),o=Ol(o),o=Zh(o,e),o=Jh(o,e),a=Ol(a),a=Zh(a,e),a=Jh(a,e),o=Qh(o),a=Qh(a),e.isWebGL2&&e.isRawShaderMaterial!==!0&&(x=`#version 300 es
`,m=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,p=["#define varying in",e.glslVersion===yh?"":"layout(location = 0) out highp vec4 pc_fragColor;",e.glslVersion===yh?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+p);const w=x+m+o,v=x+p+a,y=$h(i,35633,w),S=$h(i,35632,v);if(i.attachShader(_,y),i.attachShader(_,S),e.index0AttributeName!==void 0?i.bindAttribLocation(_,0,e.index0AttributeName):e.morphTargets===!0&&i.bindAttribLocation(_,0,"position"),i.linkProgram(_),s.debug.checkShaderErrors){const b=i.getProgramInfoLog(_).trim(),M=i.getShaderInfoLog(y).trim(),L=i.getShaderInfoLog(S).trim();let I=!0,C=!0;if(i.getProgramParameter(_,35714)===!1)if(I=!1,typeof s.debug.onShaderError=="function")s.debug.onShaderError(i,_,y,S);else{const D=Kh(i,y,"vertex"),P=Kh(i,S,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(_,35715)+`

Program Info Log: `+b+`
`+D+`
`+P)}else b!==""?console.warn("THREE.WebGLProgram: Program Info Log:",b):(M===""||L==="")&&(C=!1);C&&(this.diagnostics={runnable:I,programLog:b,vertexShader:{log:M,prefix:m},fragmentShader:{log:L,prefix:p}})}i.deleteShader(y),i.deleteShader(S);let T;this.getUniforms=function(){return T===void 0&&(T=new No(i,_)),T};let A;return this.getAttributes=function(){return A===void 0&&(A=iy(i,_)),A},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(_),this.program=void 0},this.name=e.shaderName,this.id=Kv++,this.cacheKey=t,this.usedTimes=1,this.program=_,this.vertexShader=y,this.fragmentShader=S,this}let py=0;class my{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,i=this._getShaderStage(e),r=this._getShaderStage(n),o=this._getShaderCacheForMaterial(t);return o.has(i)===!1&&(o.add(i),i.usedTimes++),o.has(r)===!1&&(o.add(r),r.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const n of e)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let n=e.get(t);return n===void 0&&(n=new Set,e.set(t,n)),n}_getShaderStage(t){const e=this.shaderCache;let n=e.get(t);return n===void 0&&(n=new gy(t),e.set(t,n)),n}}class gy{constructor(t){this.id=py++,this.code=t,this.usedTimes=0}}function _y(s,t,e,n,i,r,o){const a=new Cf,l=new my,c=[],h=i.isWebGL2,u=i.logarithmicDepthBuffer,d=i.vertexTextures;let f=i.precision;const g={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function _(b){return b===1?"uv2":"uv"}function m(b,M,L,I,C){const D=I.fog,P=C.geometry,O=b.isMeshStandardMaterial?I.environment:null,V=(b.isMeshStandardMaterial?e:t).get(b.envMap||O),B=V&&V.mapping===ca?V.image.height:null,j=g[b.type];b.precision!==null&&(f=i.getMaxPrecision(b.precision),f!==b.precision&&console.warn("THREE.WebGLProgram.getParameters:",b.precision,"not supported, using",f,"instead."));const $=P.morphAttributes.position||P.morphAttributes.normal||P.morphAttributes.color,ct=$!==void 0?$.length:0;let G=0;P.morphAttributes.position!==void 0&&(G=1),P.morphAttributes.normal!==void 0&&(G=2),P.morphAttributes.color!==void 0&&(G=3);let q,J,ot,at;if(j){const mt=Dn[j];q=mt.vertexShader,J=mt.fragmentShader}else q=b.vertexShader,J=b.fragmentShader,l.update(b),ot=l.getVertexShaderID(b),at=l.getFragmentShaderID(b);const X=s.getRenderTarget(),Et=C.isInstancedMesh===!0,St=!!b.map,st=!!b.matcap,Mt=!!V,Ht=!!b.aoMap,xt=!!b.lightMap,Pt=!!b.bumpMap,Jt=!!b.normalMap,re=!!b.displacementMap,me=!!b.emissiveMap,de=!!b.metalnessMap,Gt=!!b.roughnessMap,Yt=b.clearcoat>0,Pe=b.iridescence>0,z=b.sheen>0,R=b.transmission>0,K=Yt&&!!b.clearcoatMap,nt=Yt&&!!b.clearcoatNormalMap,rt=Yt&&!!b.clearcoatRoughnessMap,ut=Pe&&!!b.iridescenceMap,k=Pe&&!!b.iridescenceThicknessMap,et=z&&!!b.sheenColorMap,Y=z&&!!b.sheenRoughnessMap,dt=!!b.specularMap,_t=!!b.specularColorMap,yt=!!b.specularIntensityMap,pt=R&&!!b.transmissionMap,vt=R&&!!b.thicknessMap,Tt=!!b.gradientMap,Ft=!!b.alphaMap,fe=b.alphaTest>0,N=!!b.extensions,Q=!!P.attributes.uv2;return{isWebGL2:h,shaderID:j,shaderName:b.type,vertexShader:q,fragmentShader:J,defines:b.defines,customVertexShaderID:ot,customFragmentShaderID:at,isRawShaderMaterial:b.isRawShaderMaterial===!0,glslVersion:b.glslVersion,precision:f,instancing:Et,instancingColor:Et&&C.instanceColor!==null,supportsVertexTextures:d,outputEncoding:X===null?s.outputEncoding:X.isXRRenderTarget===!0?X.texture.encoding:Ki,map:St,matcap:st,envMap:Mt,envMapMode:Mt&&V.mapping,envMapCubeUVHeight:B,aoMap:Ht,lightMap:xt,bumpMap:Pt,normalMap:Jt,displacementMap:d&&re,emissiveMap:me,normalMapObjectSpace:Jt&&b.normalMapType===kg,normalMapTangentSpace:Jt&&b.normalMapType===ha,decodeVideoTexture:St&&b.map.isVideoTexture===!0&&b.map.encoding===ee,metalnessMap:de,roughnessMap:Gt,clearcoat:Yt,clearcoatMap:K,clearcoatNormalMap:nt,clearcoatRoughnessMap:rt,iridescence:Pe,iridescenceMap:ut,iridescenceThicknessMap:k,sheen:z,sheenColorMap:et,sheenRoughnessMap:Y,specularMap:dt,specularColorMap:_t,specularIntensityMap:yt,transmission:R,transmissionMap:pt,thicknessMap:vt,gradientMap:Tt,opaque:b.transparent===!1&&b.blending===Ds,alphaMap:Ft,alphaTest:fe,combine:b.combine,mapUv:St&&_(b.map.channel),aoMapUv:Ht&&_(b.aoMap.channel),lightMapUv:xt&&_(b.lightMap.channel),bumpMapUv:Pt&&_(b.bumpMap.channel),normalMapUv:Jt&&_(b.normalMap.channel),displacementMapUv:re&&_(b.displacementMap.channel),emissiveMapUv:me&&_(b.emissiveMap.channel),metalnessMapUv:de&&_(b.metalnessMap.channel),roughnessMapUv:Gt&&_(b.roughnessMap.channel),clearcoatMapUv:K&&_(b.clearcoatMap.channel),clearcoatNormalMapUv:nt&&_(b.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:rt&&_(b.clearcoatRoughnessMap.channel),iridescenceMapUv:ut&&_(b.iridescenceMap.channel),iridescenceThicknessMapUv:k&&_(b.iridescenceThicknessMap.channel),sheenColorMapUv:et&&_(b.sheenColorMap.channel),sheenRoughnessMapUv:Y&&_(b.sheenRoughnessMap.channel),specularMapUv:dt&&_(b.specularMap.channel),specularColorMapUv:_t&&_(b.specularColorMap.channel),specularIntensityMapUv:yt&&_(b.specularIntensityMap.channel),transmissionMapUv:pt&&_(b.transmissionMap.channel),thicknessMapUv:vt&&_(b.thicknessMap.channel),alphaMapUv:Ft&&_(b.alphaMap.channel),vertexTangents:Jt&&!!P.attributes.tangent,vertexColors:b.vertexColors,vertexAlphas:b.vertexColors===!0&&!!P.attributes.color&&P.attributes.color.itemSize===4,vertexUvs2:Q,pointsUvs:C.isPoints===!0&&!!P.attributes.uv&&(St||Ft),fog:!!D,useFog:b.fog===!0,fogExp2:D&&D.isFogExp2,flatShading:b.flatShading===!0,sizeAttenuation:b.sizeAttenuation===!0,logarithmicDepthBuffer:u,skinning:C.isSkinnedMesh===!0,morphTargets:P.morphAttributes.position!==void 0,morphNormals:P.morphAttributes.normal!==void 0,morphColors:P.morphAttributes.color!==void 0,morphTargetsCount:ct,morphTextureStride:G,numDirLights:M.directional.length,numPointLights:M.point.length,numSpotLights:M.spot.length,numSpotLightMaps:M.spotLightMap.length,numRectAreaLights:M.rectArea.length,numHemiLights:M.hemi.length,numDirLightShadows:M.directionalShadowMap.length,numPointLightShadows:M.pointShadowMap.length,numSpotLightShadows:M.spotShadowMap.length,numSpotLightShadowsWithMaps:M.numSpotLightShadowsWithMaps,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:b.dithering,shadowMapEnabled:s.shadowMap.enabled&&L.length>0,shadowMapType:s.shadowMap.type,toneMapping:b.toneMapped?s.toneMapping:ii,useLegacyLights:s.useLegacyLights,premultipliedAlpha:b.premultipliedAlpha,doubleSided:b.side===Jn,flipSided:b.side===Ge,useDepthPacking:b.depthPacking>=0,depthPacking:b.depthPacking||0,index0AttributeName:b.index0AttributeName,extensionDerivatives:N&&b.extensions.derivatives===!0,extensionFragDepth:N&&b.extensions.fragDepth===!0,extensionDrawBuffers:N&&b.extensions.drawBuffers===!0,extensionShaderTextureLOD:N&&b.extensions.shaderTextureLOD===!0,rendererExtensionFragDepth:h||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:h||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:h||n.has("EXT_shader_texture_lod"),customProgramCacheKey:b.customProgramCacheKey()}}function p(b){const M=[];if(b.shaderID?M.push(b.shaderID):(M.push(b.customVertexShaderID),M.push(b.customFragmentShaderID)),b.defines!==void 0)for(const L in b.defines)M.push(L),M.push(b.defines[L]);return b.isRawShaderMaterial===!1&&(x(M,b),w(M,b),M.push(s.outputEncoding)),M.push(b.customProgramCacheKey),M.join()}function x(b,M){b.push(M.precision),b.push(M.outputEncoding),b.push(M.envMapMode),b.push(M.envMapCubeUVHeight),b.push(M.mapUv),b.push(M.alphaMapUv),b.push(M.lightMapUv),b.push(M.aoMapUv),b.push(M.bumpMapUv),b.push(M.normalMapUv),b.push(M.displacementMapUv),b.push(M.emissiveMapUv),b.push(M.metalnessMapUv),b.push(M.roughnessMapUv),b.push(M.clearcoatMapUv),b.push(M.clearcoatNormalMapUv),b.push(M.clearcoatRoughnessMapUv),b.push(M.iridescenceMapUv),b.push(M.iridescenceThicknessMapUv),b.push(M.sheenColorMapUv),b.push(M.sheenRoughnessMapUv),b.push(M.specularMapUv),b.push(M.specularColorMapUv),b.push(M.specularIntensityMapUv),b.push(M.transmissionMapUv),b.push(M.thicknessMapUv),b.push(M.combine),b.push(M.fogExp2),b.push(M.sizeAttenuation),b.push(M.morphTargetsCount),b.push(M.morphAttributeCount),b.push(M.numDirLights),b.push(M.numPointLights),b.push(M.numSpotLights),b.push(M.numSpotLightMaps),b.push(M.numHemiLights),b.push(M.numRectAreaLights),b.push(M.numDirLightShadows),b.push(M.numPointLightShadows),b.push(M.numSpotLightShadows),b.push(M.numSpotLightShadowsWithMaps),b.push(M.shadowMapType),b.push(M.toneMapping),b.push(M.numClippingPlanes),b.push(M.numClipIntersection),b.push(M.depthPacking)}function w(b,M){a.disableAll(),M.isWebGL2&&a.enable(0),M.supportsVertexTextures&&a.enable(1),M.instancing&&a.enable(2),M.instancingColor&&a.enable(3),M.matcap&&a.enable(4),M.envMap&&a.enable(5),M.normalMapObjectSpace&&a.enable(6),M.normalMapTangentSpace&&a.enable(7),M.clearcoat&&a.enable(8),M.iridescence&&a.enable(9),M.alphaTest&&a.enable(10),M.vertexColors&&a.enable(11),M.vertexAlphas&&a.enable(12),M.vertexUvs2&&a.enable(13),M.vertexTangents&&a.enable(14),b.push(a.mask),a.disableAll(),M.fog&&a.enable(0),M.useFog&&a.enable(1),M.flatShading&&a.enable(2),M.logarithmicDepthBuffer&&a.enable(3),M.skinning&&a.enable(4),M.morphTargets&&a.enable(5),M.morphNormals&&a.enable(6),M.morphColors&&a.enable(7),M.premultipliedAlpha&&a.enable(8),M.shadowMapEnabled&&a.enable(9),M.useLegacyLights&&a.enable(10),M.doubleSided&&a.enable(11),M.flipSided&&a.enable(12),M.useDepthPacking&&a.enable(13),M.dithering&&a.enable(14),M.transmission&&a.enable(15),M.sheen&&a.enable(16),M.decodeVideoTexture&&a.enable(17),M.opaque&&a.enable(18),M.pointsUvs&&a.enable(19),b.push(a.mask)}function v(b){const M=g[b.type];let L;if(M){const I=Dn[M];L=o0.clone(I.uniforms)}else L=b.uniforms;return L}function y(b,M){let L;for(let I=0,C=c.length;I<C;I++){const D=c[I];if(D.cacheKey===M){L=D,++L.usedTimes;break}}return L===void 0&&(L=new fy(s,M,b,r),c.push(L)),L}function S(b){if(--b.usedTimes===0){const M=c.indexOf(b);c[M]=c[c.length-1],c.pop(),b.destroy()}}function T(b){l.remove(b)}function A(){l.dispose()}return{getParameters:m,getProgramCacheKey:p,getUniforms:v,acquireProgram:y,releaseProgram:S,releaseShaderCache:T,programs:c,dispose:A}}function xy(){let s=new WeakMap;function t(r){let o=s.get(r);return o===void 0&&(o={},s.set(r,o)),o}function e(r){s.delete(r)}function n(r,o,a){s.get(r)[o]=a}function i(){s=new WeakMap}return{get:t,remove:e,update:n,dispose:i}}function vy(s,t){return s.groupOrder!==t.groupOrder?s.groupOrder-t.groupOrder:s.renderOrder!==t.renderOrder?s.renderOrder-t.renderOrder:s.material.id!==t.material.id?s.material.id-t.material.id:s.z!==t.z?s.z-t.z:s.id-t.id}function eu(s,t){return s.groupOrder!==t.groupOrder?s.groupOrder-t.groupOrder:s.renderOrder!==t.renderOrder?s.renderOrder-t.renderOrder:s.z!==t.z?t.z-s.z:s.id-t.id}function nu(){const s=[];let t=0;const e=[],n=[],i=[];function r(){t=0,e.length=0,n.length=0,i.length=0}function o(u,d,f,g,_,m){let p=s[t];return p===void 0?(p={id:u.id,object:u,geometry:d,material:f,groupOrder:g,renderOrder:u.renderOrder,z:_,group:m},s[t]=p):(p.id=u.id,p.object=u,p.geometry=d,p.material=f,p.groupOrder=g,p.renderOrder=u.renderOrder,p.z=_,p.group=m),t++,p}function a(u,d,f,g,_,m){const p=o(u,d,f,g,_,m);f.transmission>0?n.push(p):f.transparent===!0?i.push(p):e.push(p)}function l(u,d,f,g,_,m){const p=o(u,d,f,g,_,m);f.transmission>0?n.unshift(p):f.transparent===!0?i.unshift(p):e.unshift(p)}function c(u,d){e.length>1&&e.sort(u||vy),n.length>1&&n.sort(d||eu),i.length>1&&i.sort(d||eu)}function h(){for(let u=t,d=s.length;u<d;u++){const f=s[u];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:e,transmissive:n,transparent:i,init:r,push:a,unshift:l,finish:h,sort:c}}function yy(){let s=new WeakMap;function t(n,i){const r=s.get(n);let o;return r===void 0?(o=new nu,s.set(n,[o])):i>=r.length?(o=new nu,r.push(o)):o=r[i],o}function e(){s=new WeakMap}return{get:t,dispose:e}}function by(){const s={};return{get:function(t){if(s[t.id]!==void 0)return s[t.id];let e;switch(t.type){case"DirectionalLight":e={direction:new U,color:new Nt};break;case"SpotLight":e={position:new U,direction:new U,color:new Nt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":e={position:new U,color:new Nt,distance:0,decay:0};break;case"HemisphereLight":e={direction:new U,skyColor:new Nt,groundColor:new Nt};break;case"RectAreaLight":e={color:new Nt,position:new U,halfWidth:new U,halfHeight:new U};break}return s[t.id]=e,e}}}function My(){const s={};return{get:function(t){if(s[t.id]!==void 0)return s[t.id];let e;switch(t.type){case"DirectionalLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Lt};break;case"SpotLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Lt};break;case"PointLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Lt,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[t.id]=e,e}}}let wy=0;function Sy(s,t){return(t.castShadow?2:0)-(s.castShadow?2:0)+(t.map?1:0)-(s.map?1:0)}function Ey(s,t){const e=new by,n=My(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let h=0;h<9;h++)i.probe.push(new U);const r=new U,o=new ve,a=new ve;function l(h,u){let d=0,f=0,g=0;for(let L=0;L<9;L++)i.probe[L].set(0,0,0);let _=0,m=0,p=0,x=0,w=0,v=0,y=0,S=0,T=0,A=0;h.sort(Sy);const b=u===!0?Math.PI:1;for(let L=0,I=h.length;L<I;L++){const C=h[L],D=C.color,P=C.intensity,O=C.distance,V=C.shadow&&C.shadow.map?C.shadow.map.texture:null;if(C.isAmbientLight)d+=D.r*P*b,f+=D.g*P*b,g+=D.b*P*b;else if(C.isLightProbe)for(let B=0;B<9;B++)i.probe[B].addScaledVector(C.sh.coefficients[B],P);else if(C.isDirectionalLight){const B=e.get(C);if(B.color.copy(C.color).multiplyScalar(C.intensity*b),C.castShadow){const j=C.shadow,$=n.get(C);$.shadowBias=j.bias,$.shadowNormalBias=j.normalBias,$.shadowRadius=j.radius,$.shadowMapSize=j.mapSize,i.directionalShadow[_]=$,i.directionalShadowMap[_]=V,i.directionalShadowMatrix[_]=C.shadow.matrix,v++}i.directional[_]=B,_++}else if(C.isSpotLight){const B=e.get(C);B.position.setFromMatrixPosition(C.matrixWorld),B.color.copy(D).multiplyScalar(P*b),B.distance=O,B.coneCos=Math.cos(C.angle),B.penumbraCos=Math.cos(C.angle*(1-C.penumbra)),B.decay=C.decay,i.spot[p]=B;const j=C.shadow;if(C.map&&(i.spotLightMap[T]=C.map,T++,j.updateMatrices(C),C.castShadow&&A++),i.spotLightMatrix[p]=j.matrix,C.castShadow){const $=n.get(C);$.shadowBias=j.bias,$.shadowNormalBias=j.normalBias,$.shadowRadius=j.radius,$.shadowMapSize=j.mapSize,i.spotShadow[p]=$,i.spotShadowMap[p]=V,S++}p++}else if(C.isRectAreaLight){const B=e.get(C);B.color.copy(D).multiplyScalar(P),B.halfWidth.set(C.width*.5,0,0),B.halfHeight.set(0,C.height*.5,0),i.rectArea[x]=B,x++}else if(C.isPointLight){const B=e.get(C);if(B.color.copy(C.color).multiplyScalar(C.intensity*b),B.distance=C.distance,B.decay=C.decay,C.castShadow){const j=C.shadow,$=n.get(C);$.shadowBias=j.bias,$.shadowNormalBias=j.normalBias,$.shadowRadius=j.radius,$.shadowMapSize=j.mapSize,$.shadowCameraNear=j.camera.near,$.shadowCameraFar=j.camera.far,i.pointShadow[m]=$,i.pointShadowMap[m]=V,i.pointShadowMatrix[m]=C.shadow.matrix,y++}i.point[m]=B,m++}else if(C.isHemisphereLight){const B=e.get(C);B.skyColor.copy(C.color).multiplyScalar(P*b),B.groundColor.copy(C.groundColor).multiplyScalar(P*b),i.hemi[w]=B,w++}}x>0&&(t.isWebGL2||s.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=ht.LTC_FLOAT_1,i.rectAreaLTC2=ht.LTC_FLOAT_2):s.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=ht.LTC_HALF_1,i.rectAreaLTC2=ht.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=d,i.ambient[1]=f,i.ambient[2]=g;const M=i.hash;(M.directionalLength!==_||M.pointLength!==m||M.spotLength!==p||M.rectAreaLength!==x||M.hemiLength!==w||M.numDirectionalShadows!==v||M.numPointShadows!==y||M.numSpotShadows!==S||M.numSpotMaps!==T)&&(i.directional.length=_,i.spot.length=p,i.rectArea.length=x,i.point.length=m,i.hemi.length=w,i.directionalShadow.length=v,i.directionalShadowMap.length=v,i.pointShadow.length=y,i.pointShadowMap.length=y,i.spotShadow.length=S,i.spotShadowMap.length=S,i.directionalShadowMatrix.length=v,i.pointShadowMatrix.length=y,i.spotLightMatrix.length=S+T-A,i.spotLightMap.length=T,i.numSpotLightShadowsWithMaps=A,M.directionalLength=_,M.pointLength=m,M.spotLength=p,M.rectAreaLength=x,M.hemiLength=w,M.numDirectionalShadows=v,M.numPointShadows=y,M.numSpotShadows=S,M.numSpotMaps=T,i.version=wy++)}function c(h,u){let d=0,f=0,g=0,_=0,m=0;const p=u.matrixWorldInverse;for(let x=0,w=h.length;x<w;x++){const v=h[x];if(v.isDirectionalLight){const y=i.directional[d];y.direction.setFromMatrixPosition(v.matrixWorld),r.setFromMatrixPosition(v.target.matrixWorld),y.direction.sub(r),y.direction.transformDirection(p),d++}else if(v.isSpotLight){const y=i.spot[g];y.position.setFromMatrixPosition(v.matrixWorld),y.position.applyMatrix4(p),y.direction.setFromMatrixPosition(v.matrixWorld),r.setFromMatrixPosition(v.target.matrixWorld),y.direction.sub(r),y.direction.transformDirection(p),g++}else if(v.isRectAreaLight){const y=i.rectArea[_];y.position.setFromMatrixPosition(v.matrixWorld),y.position.applyMatrix4(p),a.identity(),o.copy(v.matrixWorld),o.premultiply(p),a.extractRotation(o),y.halfWidth.set(v.width*.5,0,0),y.halfHeight.set(0,v.height*.5,0),y.halfWidth.applyMatrix4(a),y.halfHeight.applyMatrix4(a),_++}else if(v.isPointLight){const y=i.point[f];y.position.setFromMatrixPosition(v.matrixWorld),y.position.applyMatrix4(p),f++}else if(v.isHemisphereLight){const y=i.hemi[m];y.direction.setFromMatrixPosition(v.matrixWorld),y.direction.transformDirection(p),m++}}}return{setup:l,setupView:c,state:i}}function iu(s,t){const e=new Ey(s,t),n=[],i=[];function r(){n.length=0,i.length=0}function o(u){n.push(u)}function a(u){i.push(u)}function l(u){e.setup(n,u)}function c(u){e.setupView(n,u)}return{init:r,state:{lightsArray:n,shadowsArray:i,lights:e},setupLights:l,setupLightsView:c,pushLight:o,pushShadow:a}}function Ay(s,t){let e=new WeakMap;function n(r,o=0){const a=e.get(r);let l;return a===void 0?(l=new iu(s,t),e.set(r,[l])):o>=a.length?(l=new iu(s,t),a.push(l)):l=a[o],l}function i(){e=new WeakMap}return{get:n,dispose:i}}class Ty extends zn{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Og,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class Cy extends zn{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}const Py=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,Ly=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function Ry(s,t,e){let n=new ac;const i=new Lt,r=new Lt,o=new Ae,a=new Ty({depthPacking:zg}),l=new Cy,c={},h=e.maxTextureSize,u={[_i]:Ge,[Ge]:_i,[Jn]:Jn},d=new Qi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Lt},radius:{value:4}},vertexShader:Py,fragmentShader:Ly}),f=d.clone();f.defines.HORIZONTAL_PASS=1;const g=new ln;g.setAttribute("position",new bn(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const _=new ae(g,d),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=_f,this.render=function(v,y,S){if(m.enabled===!1||m.autoUpdate===!1&&m.needsUpdate===!1||v.length===0)return;const T=s.getRenderTarget(),A=s.getActiveCubeFace(),b=s.getActiveMipmapLevel(),M=s.state;M.setBlending(pi),M.buffers.color.setClear(1,1,1,1),M.buffers.depth.setTest(!0),M.setScissorTest(!1);for(let L=0,I=v.length;L<I;L++){const C=v[L],D=C.shadow;if(D===void 0){console.warn("THREE.WebGLShadowMap:",C,"has no shadow.");continue}if(D.autoUpdate===!1&&D.needsUpdate===!1)continue;i.copy(D.mapSize);const P=D.getFrameExtents();if(i.multiply(P),r.copy(D.mapSize),(i.x>h||i.y>h)&&(i.x>h&&(r.x=Math.floor(h/P.x),i.x=r.x*P.x,D.mapSize.x=r.x),i.y>h&&(r.y=Math.floor(h/P.y),i.y=r.y*P.y,D.mapSize.y=r.y)),D.map===null){const V=this.type!==hr?{minFilter:Be,magFilter:Be}:{};D.map=new Zi(i.x,i.y,V),D.map.texture.name=C.name+".shadowMap",D.camera.updateProjectionMatrix()}s.setRenderTarget(D.map),s.clear();const O=D.getViewportCount();for(let V=0;V<O;V++){const B=D.getViewport(V);o.set(r.x*B.x,r.y*B.y,r.x*B.z,r.y*B.w),M.viewport(o),D.updateMatrices(C,V),n=D.getFrustum(),w(y,S,D.camera,C,this.type)}D.isPointLightShadow!==!0&&this.type===hr&&p(D,S),D.needsUpdate=!1}m.needsUpdate=!1,s.setRenderTarget(T,A,b)};function p(v,y){const S=t.update(_);d.defines.VSM_SAMPLES!==v.blurSamples&&(d.defines.VSM_SAMPLES=v.blurSamples,f.defines.VSM_SAMPLES=v.blurSamples,d.needsUpdate=!0,f.needsUpdate=!0),v.mapPass===null&&(v.mapPass=new Zi(i.x,i.y)),d.uniforms.shadow_pass.value=v.map.texture,d.uniforms.resolution.value=v.mapSize,d.uniforms.radius.value=v.radius,s.setRenderTarget(v.mapPass),s.clear(),s.renderBufferDirect(y,null,S,d,_,null),f.uniforms.shadow_pass.value=v.mapPass.texture,f.uniforms.resolution.value=v.mapSize,f.uniforms.radius.value=v.radius,s.setRenderTarget(v.map),s.clear(),s.renderBufferDirect(y,null,S,f,_,null)}function x(v,y,S,T){let A=null;const b=S.isPointLight===!0?v.customDistanceMaterial:v.customDepthMaterial;if(b!==void 0)A=b;else if(A=S.isPointLight===!0?l:a,s.localClippingEnabled&&y.clipShadows===!0&&Array.isArray(y.clippingPlanes)&&y.clippingPlanes.length!==0||y.displacementMap&&y.displacementScale!==0||y.alphaMap&&y.alphaTest>0||y.map&&y.alphaTest>0){const M=A.uuid,L=y.uuid;let I=c[M];I===void 0&&(I={},c[M]=I);let C=I[L];C===void 0&&(C=A.clone(),I[L]=C),A=C}if(A.visible=y.visible,A.wireframe=y.wireframe,T===hr?A.side=y.shadowSide!==null?y.shadowSide:y.side:A.side=y.shadowSide!==null?y.shadowSide:u[y.side],A.alphaMap=y.alphaMap,A.alphaTest=y.alphaTest,A.map=y.map,A.clipShadows=y.clipShadows,A.clippingPlanes=y.clippingPlanes,A.clipIntersection=y.clipIntersection,A.displacementMap=y.displacementMap,A.displacementScale=y.displacementScale,A.displacementBias=y.displacementBias,A.wireframeLinewidth=y.wireframeLinewidth,A.linewidth=y.linewidth,S.isPointLight===!0&&A.isMeshDistanceMaterial===!0){const M=s.properties.get(A);M.light=S}return A}function w(v,y,S,T,A){if(v.visible===!1)return;if(v.layers.test(y.layers)&&(v.isMesh||v.isLine||v.isPoints)&&(v.castShadow||v.receiveShadow&&A===hr)&&(!v.frustumCulled||n.intersectsObject(v))){v.modelViewMatrix.multiplyMatrices(S.matrixWorldInverse,v.matrixWorld);const L=t.update(v),I=v.material;if(Array.isArray(I)){const C=L.groups;for(let D=0,P=C.length;D<P;D++){const O=C[D],V=I[O.materialIndex];if(V&&V.visible){const B=x(v,V,T,A);s.renderBufferDirect(S,null,L,B,v,O)}}}else if(I.visible){const C=x(v,I,T,A);s.renderBufferDirect(S,null,L,C,v,null)}}const M=v.children;for(let L=0,I=M.length;L<I;L++)w(M[L],y,S,T,A)}}function Dy(s,t,e){const n=e.isWebGL2;function i(){let N=!1;const Q=new Ae;let it=null;const mt=new Ae(0,0,0,0);return{setMask:function(bt){it!==bt&&!N&&(s.colorMask(bt,bt,bt,bt),it=bt)},setLocked:function(bt){N=bt},setClear:function(bt,Qt,oe,Le,si){si===!0&&(bt*=Le,Qt*=Le,oe*=Le),Q.set(bt,Qt,oe,Le),mt.equals(Q)===!1&&(s.clearColor(bt,Qt,oe,Le),mt.copy(Q))},reset:function(){N=!1,it=null,mt.set(-1,0,0,0)}}}function r(){let N=!1,Q=null,it=null,mt=null;return{setTest:function(bt){bt?X(2929):Et(2929)},setMask:function(bt){Q!==bt&&!N&&(s.depthMask(bt),Q=bt)},setFunc:function(bt){if(it!==bt){switch(bt){case rg:s.depthFunc(512);break;case og:s.depthFunc(519);break;case ag:s.depthFunc(513);break;case Pl:s.depthFunc(515);break;case lg:s.depthFunc(514);break;case cg:s.depthFunc(518);break;case hg:s.depthFunc(516);break;case ug:s.depthFunc(517);break;default:s.depthFunc(515)}it=bt}},setLocked:function(bt){N=bt},setClear:function(bt){mt!==bt&&(s.clearDepth(bt),mt=bt)},reset:function(){N=!1,Q=null,it=null,mt=null}}}function o(){let N=!1,Q=null,it=null,mt=null,bt=null,Qt=null,oe=null,Le=null,si=null;return{setTest:function(pe){N||(pe?X(2960):Et(2960))},setMask:function(pe){Q!==pe&&!N&&(s.stencilMask(pe),Q=pe)},setFunc:function(pe,nn,Sn){(it!==pe||mt!==nn||bt!==Sn)&&(s.stencilFunc(pe,nn,Sn),it=pe,mt=nn,bt=Sn)},setOp:function(pe,nn,Sn){(Qt!==pe||oe!==nn||Le!==Sn)&&(s.stencilOp(pe,nn,Sn),Qt=pe,oe=nn,Le=Sn)},setLocked:function(pe){N=pe},setClear:function(pe){si!==pe&&(s.clearStencil(pe),si=pe)},reset:function(){N=!1,Q=null,it=null,mt=null,bt=null,Qt=null,oe=null,Le=null,si=null}}}const a=new i,l=new r,c=new o,h=new WeakMap,u=new WeakMap;let d={},f={},g=new WeakMap,_=[],m=null,p=!1,x=null,w=null,v=null,y=null,S=null,T=null,A=null,b=!1,M=null,L=null,I=null,C=null,D=null;const P=s.getParameter(35661);let O=!1,V=0;const B=s.getParameter(7938);B.indexOf("WebGL")!==-1?(V=parseFloat(/^WebGL (\d)/.exec(B)[1]),O=V>=1):B.indexOf("OpenGL ES")!==-1&&(V=parseFloat(/^OpenGL ES (\d)/.exec(B)[1]),O=V>=2);let j=null,$={};const ct=s.getParameter(3088),G=s.getParameter(2978),q=new Ae().fromArray(ct),J=new Ae().fromArray(G);function ot(N,Q,it){const mt=new Uint8Array(4),bt=s.createTexture();s.bindTexture(N,bt),s.texParameteri(N,10241,9728),s.texParameteri(N,10240,9728);for(let Qt=0;Qt<it;Qt++)s.texImage2D(Q+Qt,0,6408,1,1,0,6408,5121,mt);return bt}const at={};at[3553]=ot(3553,3553,1),at[34067]=ot(34067,34069,6),a.setClear(0,0,0,1),l.setClear(1),c.setClear(0),X(2929),l.setFunc(Pl),re(!1),me(Wc),X(2884),Pt(pi);function X(N){d[N]!==!0&&(s.enable(N),d[N]=!0)}function Et(N){d[N]!==!1&&(s.disable(N),d[N]=!1)}function St(N,Q){return f[N]!==Q?(s.bindFramebuffer(N,Q),f[N]=Q,n&&(N===36009&&(f[36160]=Q),N===36160&&(f[36009]=Q)),!0):!1}function st(N,Q){let it=_,mt=!1;if(N)if(it=g.get(Q),it===void 0&&(it=[],g.set(Q,it)),N.isWebGLMultipleRenderTargets){const bt=N.texture;if(it.length!==bt.length||it[0]!==36064){for(let Qt=0,oe=bt.length;Qt<oe;Qt++)it[Qt]=36064+Qt;it.length=bt.length,mt=!0}}else it[0]!==36064&&(it[0]=36064,mt=!0);else it[0]!==1029&&(it[0]=1029,mt=!0);mt&&(e.isWebGL2?s.drawBuffers(it):t.get("WEBGL_draw_buffers").drawBuffersWEBGL(it))}function Mt(N){return m!==N?(s.useProgram(N),m=N,!0):!1}const Ht={[Ts]:32774,[Ym]:32778,[$m]:32779};if(n)Ht[Xc]=32775,Ht[Yc]=32776;else{const N=t.get("EXT_blend_minmax");N!==null&&(Ht[Xc]=N.MIN_EXT,Ht[Yc]=N.MAX_EXT)}const xt={[Km]:0,[Zm]:1,[Jm]:768,[xf]:770,[sg]:776,[ng]:774,[tg]:772,[Qm]:769,[vf]:771,[ig]:775,[eg]:773};function Pt(N,Q,it,mt,bt,Qt,oe,Le){if(N===pi){p===!0&&(Et(3042),p=!1);return}if(p===!1&&(X(3042),p=!0),N!==Xm){if(N!==x||Le!==b){if((w!==Ts||S!==Ts)&&(s.blendEquation(32774),w=Ts,S=Ts),Le)switch(N){case Ds:s.blendFuncSeparate(1,771,1,771);break;case Gc:s.blendFunc(1,1);break;case qc:s.blendFuncSeparate(0,769,0,1);break;case jc:s.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",N);break}else switch(N){case Ds:s.blendFuncSeparate(770,771,1,771);break;case Gc:s.blendFunc(770,1);break;case qc:s.blendFuncSeparate(0,769,0,1);break;case jc:s.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",N);break}v=null,y=null,T=null,A=null,x=N,b=Le}return}bt=bt||Q,Qt=Qt||it,oe=oe||mt,(Q!==w||bt!==S)&&(s.blendEquationSeparate(Ht[Q],Ht[bt]),w=Q,S=bt),(it!==v||mt!==y||Qt!==T||oe!==A)&&(s.blendFuncSeparate(xt[it],xt[mt],xt[Qt],xt[oe]),v=it,y=mt,T=Qt,A=oe),x=N,b=!1}function Jt(N,Q){N.side===Jn?Et(2884):X(2884);let it=N.side===Ge;Q&&(it=!it),re(it),N.blending===Ds&&N.transparent===!1?Pt(pi):Pt(N.blending,N.blendEquation,N.blendSrc,N.blendDst,N.blendEquationAlpha,N.blendSrcAlpha,N.blendDstAlpha,N.premultipliedAlpha),l.setFunc(N.depthFunc),l.setTest(N.depthTest),l.setMask(N.depthWrite),a.setMask(N.colorWrite);const mt=N.stencilWrite;c.setTest(mt),mt&&(c.setMask(N.stencilWriteMask),c.setFunc(N.stencilFunc,N.stencilRef,N.stencilFuncMask),c.setOp(N.stencilFail,N.stencilZFail,N.stencilZPass)),Gt(N.polygonOffset,N.polygonOffsetFactor,N.polygonOffsetUnits),N.alphaToCoverage===!0?X(32926):Et(32926)}function re(N){M!==N&&(N?s.frontFace(2304):s.frontFace(2305),M=N)}function me(N){N!==Gm?(X(2884),N!==L&&(N===Wc?s.cullFace(1029):N===qm?s.cullFace(1028):s.cullFace(1032))):Et(2884),L=N}function de(N){N!==I&&(O&&s.lineWidth(N),I=N)}function Gt(N,Q,it){N?(X(32823),(C!==Q||D!==it)&&(s.polygonOffset(Q,it),C=Q,D=it)):Et(32823)}function Yt(N){N?X(3089):Et(3089)}function Pe(N){N===void 0&&(N=33984+P-1),j!==N&&(s.activeTexture(N),j=N)}function z(N,Q,it){it===void 0&&(j===null?it=33984+P-1:it=j);let mt=$[it];mt===void 0&&(mt={type:void 0,texture:void 0},$[it]=mt),(mt.type!==N||mt.texture!==Q)&&(j!==it&&(s.activeTexture(it),j=it),s.bindTexture(N,Q||at[N]),mt.type=N,mt.texture=Q)}function R(){const N=$[j];N!==void 0&&N.type!==void 0&&(s.bindTexture(N.type,null),N.type=void 0,N.texture=void 0)}function K(){try{s.compressedTexImage2D.apply(s,arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function nt(){try{s.compressedTexImage3D.apply(s,arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function rt(){try{s.texSubImage2D.apply(s,arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function ut(){try{s.texSubImage3D.apply(s,arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function k(){try{s.compressedTexSubImage2D.apply(s,arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function et(){try{s.compressedTexSubImage3D.apply(s,arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function Y(){try{s.texStorage2D.apply(s,arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function dt(){try{s.texStorage3D.apply(s,arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function _t(){try{s.texImage2D.apply(s,arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function yt(){try{s.texImage3D.apply(s,arguments)}catch(N){console.error("THREE.WebGLState:",N)}}function pt(N){q.equals(N)===!1&&(s.scissor(N.x,N.y,N.z,N.w),q.copy(N))}function vt(N){J.equals(N)===!1&&(s.viewport(N.x,N.y,N.z,N.w),J.copy(N))}function Tt(N,Q){let it=u.get(Q);it===void 0&&(it=new WeakMap,u.set(Q,it));let mt=it.get(N);mt===void 0&&(mt=s.getUniformBlockIndex(Q,N.name),it.set(N,mt))}function Ft(N,Q){const mt=u.get(Q).get(N);h.get(Q)!==mt&&(s.uniformBlockBinding(Q,mt,N.__bindingPointIndex),h.set(Q,mt))}function fe(){s.disable(3042),s.disable(2884),s.disable(2929),s.disable(32823),s.disable(3089),s.disable(2960),s.disable(32926),s.blendEquation(32774),s.blendFunc(1,0),s.blendFuncSeparate(1,0,1,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(513),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(519,0,4294967295),s.stencilOp(7680,7680,7680),s.clearStencil(0),s.cullFace(1029),s.frontFace(2305),s.polygonOffset(0,0),s.activeTexture(33984),s.bindFramebuffer(36160,null),n===!0&&(s.bindFramebuffer(36009,null),s.bindFramebuffer(36008,null)),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),d={},j=null,$={},f={},g=new WeakMap,_=[],m=null,p=!1,x=null,w=null,v=null,y=null,S=null,T=null,A=null,b=!1,M=null,L=null,I=null,C=null,D=null,q.set(0,0,s.canvas.width,s.canvas.height),J.set(0,0,s.canvas.width,s.canvas.height),a.reset(),l.reset(),c.reset()}return{buffers:{color:a,depth:l,stencil:c},enable:X,disable:Et,bindFramebuffer:St,drawBuffers:st,useProgram:Mt,setBlending:Pt,setMaterial:Jt,setFlipSided:re,setCullFace:me,setLineWidth:de,setPolygonOffset:Gt,setScissorTest:Yt,activeTexture:Pe,bindTexture:z,unbindTexture:R,compressedTexImage2D:K,compressedTexImage3D:nt,texImage2D:_t,texImage3D:yt,updateUBOMapping:Tt,uniformBlockBinding:Ft,texStorage2D:Y,texStorage3D:dt,texSubImage2D:rt,texSubImage3D:ut,compressedTexSubImage2D:k,compressedTexSubImage3D:et,scissor:pt,viewport:vt,reset:fe}}function Iy(s,t,e,n,i,r,o){const a=i.isWebGL2,l=i.maxTextures,c=i.maxCubemapSize,h=i.maxTextureSize,u=i.maxSamples,d=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,f=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),g=new WeakMap;let _;const m=new WeakMap;let p=!1;try{p=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function x(z,R){return p?new OffscreenCanvas(z,R):Rr("canvas")}function w(z,R,K,nt){let rt=1;if((z.width>nt||z.height>nt)&&(rt=nt/Math.max(z.width,z.height)),rt<1||R===!0)if(typeof HTMLImageElement<"u"&&z instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&z instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&z instanceof ImageBitmap){const ut=R?Ug:Math.floor,k=ut(rt*z.width),et=ut(rt*z.height);_===void 0&&(_=x(k,et));const Y=K?x(k,et):_;return Y.width=k,Y.height=et,Y.getContext("2d").drawImage(z,0,0,k,et),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+z.width+"x"+z.height+") to ("+k+"x"+et+")."),Y}else return"data"in z&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+z.width+"x"+z.height+")."),z;return z}function v(z){return bh(z.width)&&bh(z.height)}function y(z){return a?!1:z.wrapS!==gn||z.wrapT!==gn||z.minFilter!==Be&&z.minFilter!==on}function S(z,R){return z.generateMipmaps&&R&&z.minFilter!==Be&&z.minFilter!==on}function T(z){s.generateMipmap(z)}function A(z,R,K,nt,rt=!1){if(a===!1)return R;if(z!==null){if(s[z]!==void 0)return s[z];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+z+"'")}let ut=R;return R===6403&&(K===5126&&(ut=33326),K===5131&&(ut=33325),K===5121&&(ut=33321)),R===33319&&(K===5126&&(ut=33328),K===5131&&(ut=33327),K===5121&&(ut=33323)),R===6408&&(K===5126&&(ut=34836),K===5131&&(ut=34842),K===5121&&(ut=nt===ee&&rt===!1?35907:32856),K===32819&&(ut=32854),K===32820&&(ut=32855)),(ut===33325||ut===33326||ut===33327||ut===33328||ut===34842||ut===34836)&&t.get("EXT_color_buffer_float"),ut}function b(z,R,K){return S(z,K)===!0||z.isFramebufferTexture&&z.minFilter!==Be&&z.minFilter!==on?Math.log2(Math.max(R.width,R.height))+1:z.mipmaps!==void 0&&z.mipmaps.length>0?z.mipmaps.length:z.isCompressedTexture&&Array.isArray(z.image)?R.mipmaps.length:1}function M(z){return z===Be||z===$c||z===Sa?9728:9729}function L(z){const R=z.target;R.removeEventListener("dispose",L),C(R),R.isVideoTexture&&g.delete(R)}function I(z){const R=z.target;R.removeEventListener("dispose",I),P(R)}function C(z){const R=n.get(z);if(R.__webglInit===void 0)return;const K=z.source,nt=m.get(K);if(nt){const rt=nt[R.__cacheKey];rt.usedTimes--,rt.usedTimes===0&&D(z),Object.keys(nt).length===0&&m.delete(K)}n.remove(z)}function D(z){const R=n.get(z);s.deleteTexture(R.__webglTexture);const K=z.source,nt=m.get(K);delete nt[R.__cacheKey],o.memory.textures--}function P(z){const R=z.texture,K=n.get(z),nt=n.get(R);if(nt.__webglTexture!==void 0&&(s.deleteTexture(nt.__webglTexture),o.memory.textures--),z.depthTexture&&z.depthTexture.dispose(),z.isWebGLCubeRenderTarget)for(let rt=0;rt<6;rt++)s.deleteFramebuffer(K.__webglFramebuffer[rt]),K.__webglDepthbuffer&&s.deleteRenderbuffer(K.__webglDepthbuffer[rt]);else{if(s.deleteFramebuffer(K.__webglFramebuffer),K.__webglDepthbuffer&&s.deleteRenderbuffer(K.__webglDepthbuffer),K.__webglMultisampledFramebuffer&&s.deleteFramebuffer(K.__webglMultisampledFramebuffer),K.__webglColorRenderbuffer)for(let rt=0;rt<K.__webglColorRenderbuffer.length;rt++)K.__webglColorRenderbuffer[rt]&&s.deleteRenderbuffer(K.__webglColorRenderbuffer[rt]);K.__webglDepthRenderbuffer&&s.deleteRenderbuffer(K.__webglDepthRenderbuffer)}if(z.isWebGLMultipleRenderTargets)for(let rt=0,ut=R.length;rt<ut;rt++){const k=n.get(R[rt]);k.__webglTexture&&(s.deleteTexture(k.__webglTexture),o.memory.textures--),n.remove(R[rt])}n.remove(R),n.remove(z)}let O=0;function V(){O=0}function B(){const z=O;return z>=l&&console.warn("THREE.WebGLTextures: Trying to use "+z+" texture units while this GPU supports only "+l),O+=1,z}function j(z){const R=[];return R.push(z.wrapS),R.push(z.wrapT),R.push(z.wrapR||0),R.push(z.magFilter),R.push(z.minFilter),R.push(z.anisotropy),R.push(z.internalFormat),R.push(z.format),R.push(z.type),R.push(z.generateMipmaps),R.push(z.premultiplyAlpha),R.push(z.flipY),R.push(z.unpackAlignment),R.push(z.encoding),R.join()}function $(z,R){const K=n.get(z);if(z.isVideoTexture&&Yt(z),z.isRenderTargetTexture===!1&&z.version>0&&K.__version!==z.version){const nt=z.image;if(nt===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(nt.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Et(K,z,R);return}}e.bindTexture(3553,K.__webglTexture,33984+R)}function ct(z,R){const K=n.get(z);if(z.version>0&&K.__version!==z.version){Et(K,z,R);return}e.bindTexture(35866,K.__webglTexture,33984+R)}function G(z,R){const K=n.get(z);if(z.version>0&&K.__version!==z.version){Et(K,z,R);return}e.bindTexture(32879,K.__webglTexture,33984+R)}function q(z,R){const K=n.get(z);if(z.version>0&&K.__version!==z.version){St(K,z,R);return}e.bindTexture(34067,K.__webglTexture,33984+R)}const J={[Tr]:10497,[gn]:33071,[Dl]:33648},ot={[Be]:9728,[$c]:9984,[Sa]:9986,[on]:9729,[vg]:9985,[Cr]:9987};function at(z,R,K){if(K?(s.texParameteri(z,10242,J[R.wrapS]),s.texParameteri(z,10243,J[R.wrapT]),(z===32879||z===35866)&&s.texParameteri(z,32882,J[R.wrapR]),s.texParameteri(z,10240,ot[R.magFilter]),s.texParameteri(z,10241,ot[R.minFilter])):(s.texParameteri(z,10242,33071),s.texParameteri(z,10243,33071),(z===32879||z===35866)&&s.texParameteri(z,32882,33071),(R.wrapS!==gn||R.wrapT!==gn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),s.texParameteri(z,10240,M(R.magFilter)),s.texParameteri(z,10241,M(R.minFilter)),R.minFilter!==Be&&R.minFilter!==on&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),t.has("EXT_texture_filter_anisotropic")===!0){const nt=t.get("EXT_texture_filter_anisotropic");if(R.magFilter===Be||R.minFilter!==Sa&&R.minFilter!==Cr||R.type===Hi&&t.has("OES_texture_float_linear")===!1||a===!1&&R.type===Pr&&t.has("OES_texture_half_float_linear")===!1)return;(R.anisotropy>1||n.get(R).__currentAnisotropy)&&(s.texParameterf(z,nt.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(R.anisotropy,i.getMaxAnisotropy())),n.get(R).__currentAnisotropy=R.anisotropy)}}function X(z,R){let K=!1;z.__webglInit===void 0&&(z.__webglInit=!0,R.addEventListener("dispose",L));const nt=R.source;let rt=m.get(nt);rt===void 0&&(rt={},m.set(nt,rt));const ut=j(R);if(ut!==z.__cacheKey){rt[ut]===void 0&&(rt[ut]={texture:s.createTexture(),usedTimes:0},o.memory.textures++,K=!0),rt[ut].usedTimes++;const k=rt[z.__cacheKey];k!==void 0&&(rt[z.__cacheKey].usedTimes--,k.usedTimes===0&&D(R)),z.__cacheKey=ut,z.__webglTexture=rt[ut].texture}return K}function Et(z,R,K){let nt=3553;(R.isDataArrayTexture||R.isCompressedArrayTexture)&&(nt=35866),R.isData3DTexture&&(nt=32879);const rt=X(z,R),ut=R.source;e.bindTexture(nt,z.__webglTexture,33984+K);const k=n.get(ut);if(ut.version!==k.__version||rt===!0){e.activeTexture(33984+K),s.pixelStorei(37440,R.flipY),s.pixelStorei(37441,R.premultiplyAlpha),s.pixelStorei(3317,R.unpackAlignment),s.pixelStorei(37443,0);const et=y(R)&&v(R.image)===!1;let Y=w(R.image,et,!1,h);Y=Pe(R,Y);const dt=v(Y)||a,_t=r.convert(R.format,R.encoding);let yt=r.convert(R.type),pt=A(R.internalFormat,_t,yt,R.encoding,R.isVideoTexture);at(nt,R,dt);let vt;const Tt=R.mipmaps,Ft=a&&R.isVideoTexture!==!0,fe=k.__version===void 0||rt===!0,N=b(R,Y,dt);if(R.isDepthTexture)pt=6402,a?R.type===Hi?pt=36012:R.type===Vi?pt=33190:R.type===Is?pt=35056:pt=33189:R.type===Hi&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),R.format===qi&&pt===6402&&R.type!==bf&&R.type!==Vi&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),R.type=Vi,yt=r.convert(R.type)),R.format===Ns&&pt===6402&&(pt=34041,R.type!==Is&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),R.type=Is,yt=r.convert(R.type))),fe&&(Ft?e.texStorage2D(3553,1,pt,Y.width,Y.height):e.texImage2D(3553,0,pt,Y.width,Y.height,0,_t,yt,null));else if(R.isDataTexture)if(Tt.length>0&&dt){Ft&&fe&&e.texStorage2D(3553,N,pt,Tt[0].width,Tt[0].height);for(let Q=0,it=Tt.length;Q<it;Q++)vt=Tt[Q],Ft?e.texSubImage2D(3553,Q,0,0,vt.width,vt.height,_t,yt,vt.data):e.texImage2D(3553,Q,pt,vt.width,vt.height,0,_t,yt,vt.data);R.generateMipmaps=!1}else Ft?(fe&&e.texStorage2D(3553,N,pt,Y.width,Y.height),e.texSubImage2D(3553,0,0,0,Y.width,Y.height,_t,yt,Y.data)):e.texImage2D(3553,0,pt,Y.width,Y.height,0,_t,yt,Y.data);else if(R.isCompressedTexture)if(R.isCompressedArrayTexture){Ft&&fe&&e.texStorage3D(35866,N,pt,Tt[0].width,Tt[0].height,Y.depth);for(let Q=0,it=Tt.length;Q<it;Q++)vt=Tt[Q],R.format!==_n?_t!==null?Ft?e.compressedTexSubImage3D(35866,Q,0,0,0,vt.width,vt.height,Y.depth,_t,vt.data,0,0):e.compressedTexImage3D(35866,Q,pt,vt.width,vt.height,Y.depth,0,vt.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Ft?e.texSubImage3D(35866,Q,0,0,0,vt.width,vt.height,Y.depth,_t,yt,vt.data):e.texImage3D(35866,Q,pt,vt.width,vt.height,Y.depth,0,_t,yt,vt.data)}else{Ft&&fe&&e.texStorage2D(3553,N,pt,Tt[0].width,Tt[0].height);for(let Q=0,it=Tt.length;Q<it;Q++)vt=Tt[Q],R.format!==_n?_t!==null?Ft?e.compressedTexSubImage2D(3553,Q,0,0,vt.width,vt.height,_t,vt.data):e.compressedTexImage2D(3553,Q,pt,vt.width,vt.height,0,vt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Ft?e.texSubImage2D(3553,Q,0,0,vt.width,vt.height,_t,yt,vt.data):e.texImage2D(3553,Q,pt,vt.width,vt.height,0,_t,yt,vt.data)}else if(R.isDataArrayTexture)Ft?(fe&&e.texStorage3D(35866,N,pt,Y.width,Y.height,Y.depth),e.texSubImage3D(35866,0,0,0,0,Y.width,Y.height,Y.depth,_t,yt,Y.data)):e.texImage3D(35866,0,pt,Y.width,Y.height,Y.depth,0,_t,yt,Y.data);else if(R.isData3DTexture)Ft?(fe&&e.texStorage3D(32879,N,pt,Y.width,Y.height,Y.depth),e.texSubImage3D(32879,0,0,0,0,Y.width,Y.height,Y.depth,_t,yt,Y.data)):e.texImage3D(32879,0,pt,Y.width,Y.height,Y.depth,0,_t,yt,Y.data);else if(R.isFramebufferTexture){if(fe)if(Ft)e.texStorage2D(3553,N,pt,Y.width,Y.height);else{let Q=Y.width,it=Y.height;for(let mt=0;mt<N;mt++)e.texImage2D(3553,mt,pt,Q,it,0,_t,yt,null),Q>>=1,it>>=1}}else if(Tt.length>0&&dt){Ft&&fe&&e.texStorage2D(3553,N,pt,Tt[0].width,Tt[0].height);for(let Q=0,it=Tt.length;Q<it;Q++)vt=Tt[Q],Ft?e.texSubImage2D(3553,Q,0,0,_t,yt,vt):e.texImage2D(3553,Q,pt,_t,yt,vt);R.generateMipmaps=!1}else Ft?(fe&&e.texStorage2D(3553,N,pt,Y.width,Y.height),e.texSubImage2D(3553,0,0,0,_t,yt,Y)):e.texImage2D(3553,0,pt,_t,yt,Y);S(R,dt)&&T(nt),k.__version=ut.version,R.onUpdate&&R.onUpdate(R)}z.__version=R.version}function St(z,R,K){if(R.image.length!==6)return;const nt=X(z,R),rt=R.source;e.bindTexture(34067,z.__webglTexture,33984+K);const ut=n.get(rt);if(rt.version!==ut.__version||nt===!0){e.activeTexture(33984+K),s.pixelStorei(37440,R.flipY),s.pixelStorei(37441,R.premultiplyAlpha),s.pixelStorei(3317,R.unpackAlignment),s.pixelStorei(37443,0);const k=R.isCompressedTexture||R.image[0].isCompressedTexture,et=R.image[0]&&R.image[0].isDataTexture,Y=[];for(let Q=0;Q<6;Q++)!k&&!et?Y[Q]=w(R.image[Q],!1,!0,c):Y[Q]=et?R.image[Q].image:R.image[Q],Y[Q]=Pe(R,Y[Q]);const dt=Y[0],_t=v(dt)||a,yt=r.convert(R.format,R.encoding),pt=r.convert(R.type),vt=A(R.internalFormat,yt,pt,R.encoding),Tt=a&&R.isVideoTexture!==!0,Ft=ut.__version===void 0||nt===!0;let fe=b(R,dt,_t);at(34067,R,_t);let N;if(k){Tt&&Ft&&e.texStorage2D(34067,fe,vt,dt.width,dt.height);for(let Q=0;Q<6;Q++){N=Y[Q].mipmaps;for(let it=0;it<N.length;it++){const mt=N[it];R.format!==_n?yt!==null?Tt?e.compressedTexSubImage2D(34069+Q,it,0,0,mt.width,mt.height,yt,mt.data):e.compressedTexImage2D(34069+Q,it,vt,mt.width,mt.height,0,mt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Tt?e.texSubImage2D(34069+Q,it,0,0,mt.width,mt.height,yt,pt,mt.data):e.texImage2D(34069+Q,it,vt,mt.width,mt.height,0,yt,pt,mt.data)}}}else{N=R.mipmaps,Tt&&Ft&&(N.length>0&&fe++,e.texStorage2D(34067,fe,vt,Y[0].width,Y[0].height));for(let Q=0;Q<6;Q++)if(et){Tt?e.texSubImage2D(34069+Q,0,0,0,Y[Q].width,Y[Q].height,yt,pt,Y[Q].data):e.texImage2D(34069+Q,0,vt,Y[Q].width,Y[Q].height,0,yt,pt,Y[Q].data);for(let it=0;it<N.length;it++){const bt=N[it].image[Q].image;Tt?e.texSubImage2D(34069+Q,it+1,0,0,bt.width,bt.height,yt,pt,bt.data):e.texImage2D(34069+Q,it+1,vt,bt.width,bt.height,0,yt,pt,bt.data)}}else{Tt?e.texSubImage2D(34069+Q,0,0,0,yt,pt,Y[Q]):e.texImage2D(34069+Q,0,vt,yt,pt,Y[Q]);for(let it=0;it<N.length;it++){const mt=N[it];Tt?e.texSubImage2D(34069+Q,it+1,0,0,yt,pt,mt.image[Q]):e.texImage2D(34069+Q,it+1,vt,yt,pt,mt.image[Q])}}}S(R,_t)&&T(34067),ut.__version=rt.version,R.onUpdate&&R.onUpdate(R)}z.__version=R.version}function st(z,R,K,nt,rt){const ut=r.convert(K.format,K.encoding),k=r.convert(K.type),et=A(K.internalFormat,ut,k,K.encoding);n.get(R).__hasExternalTextures||(rt===32879||rt===35866?e.texImage3D(rt,0,et,R.width,R.height,R.depth,0,ut,k,null):e.texImage2D(rt,0,et,R.width,R.height,0,ut,k,null)),e.bindFramebuffer(36160,z),Gt(R)?d.framebufferTexture2DMultisampleEXT(36160,nt,rt,n.get(K).__webglTexture,0,de(R)):(rt===3553||rt>=34069&&rt<=34074)&&s.framebufferTexture2D(36160,nt,rt,n.get(K).__webglTexture,0),e.bindFramebuffer(36160,null)}function Mt(z,R,K){if(s.bindRenderbuffer(36161,z),R.depthBuffer&&!R.stencilBuffer){let nt=33189;if(K||Gt(R)){const rt=R.depthTexture;rt&&rt.isDepthTexture&&(rt.type===Hi?nt=36012:rt.type===Vi&&(nt=33190));const ut=de(R);Gt(R)?d.renderbufferStorageMultisampleEXT(36161,ut,nt,R.width,R.height):s.renderbufferStorageMultisample(36161,ut,nt,R.width,R.height)}else s.renderbufferStorage(36161,nt,R.width,R.height);s.framebufferRenderbuffer(36160,36096,36161,z)}else if(R.depthBuffer&&R.stencilBuffer){const nt=de(R);K&&Gt(R)===!1?s.renderbufferStorageMultisample(36161,nt,35056,R.width,R.height):Gt(R)?d.renderbufferStorageMultisampleEXT(36161,nt,35056,R.width,R.height):s.renderbufferStorage(36161,34041,R.width,R.height),s.framebufferRenderbuffer(36160,33306,36161,z)}else{const nt=R.isWebGLMultipleRenderTargets===!0?R.texture:[R.texture];for(let rt=0;rt<nt.length;rt++){const ut=nt[rt],k=r.convert(ut.format,ut.encoding),et=r.convert(ut.type),Y=A(ut.internalFormat,k,et,ut.encoding),dt=de(R);K&&Gt(R)===!1?s.renderbufferStorageMultisample(36161,dt,Y,R.width,R.height):Gt(R)?d.renderbufferStorageMultisampleEXT(36161,dt,Y,R.width,R.height):s.renderbufferStorage(36161,Y,R.width,R.height)}}s.bindRenderbuffer(36161,null)}function Ht(z,R){if(R&&R.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(36160,z),!(R.depthTexture&&R.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(R.depthTexture).__webglTexture||R.depthTexture.image.width!==R.width||R.depthTexture.image.height!==R.height)&&(R.depthTexture.image.width=R.width,R.depthTexture.image.height=R.height,R.depthTexture.needsUpdate=!0),$(R.depthTexture,0);const nt=n.get(R.depthTexture).__webglTexture,rt=de(R);if(R.depthTexture.format===qi)Gt(R)?d.framebufferTexture2DMultisampleEXT(36160,36096,3553,nt,0,rt):s.framebufferTexture2D(36160,36096,3553,nt,0);else if(R.depthTexture.format===Ns)Gt(R)?d.framebufferTexture2DMultisampleEXT(36160,33306,3553,nt,0,rt):s.framebufferTexture2D(36160,33306,3553,nt,0);else throw new Error("Unknown depthTexture format")}function xt(z){const R=n.get(z),K=z.isWebGLCubeRenderTarget===!0;if(z.depthTexture&&!R.__autoAllocateDepthBuffer){if(K)throw new Error("target.depthTexture not supported in Cube render targets");Ht(R.__webglFramebuffer,z)}else if(K){R.__webglDepthbuffer=[];for(let nt=0;nt<6;nt++)e.bindFramebuffer(36160,R.__webglFramebuffer[nt]),R.__webglDepthbuffer[nt]=s.createRenderbuffer(),Mt(R.__webglDepthbuffer[nt],z,!1)}else e.bindFramebuffer(36160,R.__webglFramebuffer),R.__webglDepthbuffer=s.createRenderbuffer(),Mt(R.__webglDepthbuffer,z,!1);e.bindFramebuffer(36160,null)}function Pt(z,R,K){const nt=n.get(z);R!==void 0&&st(nt.__webglFramebuffer,z,z.texture,36064,3553),K!==void 0&&xt(z)}function Jt(z){const R=z.texture,K=n.get(z),nt=n.get(R);z.addEventListener("dispose",I),z.isWebGLMultipleRenderTargets!==!0&&(nt.__webglTexture===void 0&&(nt.__webglTexture=s.createTexture()),nt.__version=R.version,o.memory.textures++);const rt=z.isWebGLCubeRenderTarget===!0,ut=z.isWebGLMultipleRenderTargets===!0,k=v(z)||a;if(rt){K.__webglFramebuffer=[];for(let et=0;et<6;et++)K.__webglFramebuffer[et]=s.createFramebuffer()}else{if(K.__webglFramebuffer=s.createFramebuffer(),ut)if(i.drawBuffers){const et=z.texture;for(let Y=0,dt=et.length;Y<dt;Y++){const _t=n.get(et[Y]);_t.__webglTexture===void 0&&(_t.__webglTexture=s.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(a&&z.samples>0&&Gt(z)===!1){const et=ut?R:[R];K.__webglMultisampledFramebuffer=s.createFramebuffer(),K.__webglColorRenderbuffer=[],e.bindFramebuffer(36160,K.__webglMultisampledFramebuffer);for(let Y=0;Y<et.length;Y++){const dt=et[Y];K.__webglColorRenderbuffer[Y]=s.createRenderbuffer(),s.bindRenderbuffer(36161,K.__webglColorRenderbuffer[Y]);const _t=r.convert(dt.format,dt.encoding),yt=r.convert(dt.type),pt=A(dt.internalFormat,_t,yt,dt.encoding,z.isXRRenderTarget===!0),vt=de(z);s.renderbufferStorageMultisample(36161,vt,pt,z.width,z.height),s.framebufferRenderbuffer(36160,36064+Y,36161,K.__webglColorRenderbuffer[Y])}s.bindRenderbuffer(36161,null),z.depthBuffer&&(K.__webglDepthRenderbuffer=s.createRenderbuffer(),Mt(K.__webglDepthRenderbuffer,z,!0)),e.bindFramebuffer(36160,null)}}if(rt){e.bindTexture(34067,nt.__webglTexture),at(34067,R,k);for(let et=0;et<6;et++)st(K.__webglFramebuffer[et],z,R,36064,34069+et);S(R,k)&&T(34067),e.unbindTexture()}else if(ut){const et=z.texture;for(let Y=0,dt=et.length;Y<dt;Y++){const _t=et[Y],yt=n.get(_t);e.bindTexture(3553,yt.__webglTexture),at(3553,_t,k),st(K.__webglFramebuffer,z,_t,36064+Y,3553),S(_t,k)&&T(3553)}e.unbindTexture()}else{let et=3553;(z.isWebGL3DRenderTarget||z.isWebGLArrayRenderTarget)&&(a?et=z.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),e.bindTexture(et,nt.__webglTexture),at(et,R,k),st(K.__webglFramebuffer,z,R,36064,et),S(R,k)&&T(et),e.unbindTexture()}z.depthBuffer&&xt(z)}function re(z){const R=v(z)||a,K=z.isWebGLMultipleRenderTargets===!0?z.texture:[z.texture];for(let nt=0,rt=K.length;nt<rt;nt++){const ut=K[nt];if(S(ut,R)){const k=z.isWebGLCubeRenderTarget?34067:3553,et=n.get(ut).__webglTexture;e.bindTexture(k,et),T(k),e.unbindTexture()}}}function me(z){if(a&&z.samples>0&&Gt(z)===!1){const R=z.isWebGLMultipleRenderTargets?z.texture:[z.texture],K=z.width,nt=z.height;let rt=16384;const ut=[],k=z.stencilBuffer?33306:36096,et=n.get(z),Y=z.isWebGLMultipleRenderTargets===!0;if(Y)for(let dt=0;dt<R.length;dt++)e.bindFramebuffer(36160,et.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(36160,36064+dt,36161,null),e.bindFramebuffer(36160,et.__webglFramebuffer),s.framebufferTexture2D(36009,36064+dt,3553,null,0);e.bindFramebuffer(36008,et.__webglMultisampledFramebuffer),e.bindFramebuffer(36009,et.__webglFramebuffer);for(let dt=0;dt<R.length;dt++){ut.push(36064+dt),z.depthBuffer&&ut.push(k);const _t=et.__ignoreDepthValues!==void 0?et.__ignoreDepthValues:!1;if(_t===!1&&(z.depthBuffer&&(rt|=256),z.stencilBuffer&&(rt|=1024)),Y&&s.framebufferRenderbuffer(36008,36064,36161,et.__webglColorRenderbuffer[dt]),_t===!0&&(s.invalidateFramebuffer(36008,[k]),s.invalidateFramebuffer(36009,[k])),Y){const yt=n.get(R[dt]).__webglTexture;s.framebufferTexture2D(36009,36064,3553,yt,0)}s.blitFramebuffer(0,0,K,nt,0,0,K,nt,rt,9728),f&&s.invalidateFramebuffer(36008,ut)}if(e.bindFramebuffer(36008,null),e.bindFramebuffer(36009,null),Y)for(let dt=0;dt<R.length;dt++){e.bindFramebuffer(36160,et.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(36160,36064+dt,36161,et.__webglColorRenderbuffer[dt]);const _t=n.get(R[dt]).__webglTexture;e.bindFramebuffer(36160,et.__webglFramebuffer),s.framebufferTexture2D(36009,36064+dt,3553,_t,0)}e.bindFramebuffer(36009,et.__webglMultisampledFramebuffer)}}function de(z){return Math.min(u,z.samples)}function Gt(z){const R=n.get(z);return a&&z.samples>0&&t.has("WEBGL_multisampled_render_to_texture")===!0&&R.__useRenderToTexture!==!1}function Yt(z){const R=o.render.frame;g.get(z)!==R&&(g.set(z,R),z.update())}function Pe(z,R){const K=z.encoding,nt=z.format,rt=z.type;return z.isCompressedTexture===!0||z.isVideoTexture===!0||z.format===Il||K!==Ki&&(K===ee?a===!1?t.has("EXT_sRGB")===!0&&nt===_n?(z.format=Il,z.minFilter=on,z.generateMipmaps=!1):R=Sf.sRGBToLinear(R):(nt!==_n||rt!==$i)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",K)),R}this.allocateTextureUnit=B,this.resetTextureUnits=V,this.setTexture2D=$,this.setTexture2DArray=ct,this.setTexture3D=G,this.setTextureCube=q,this.rebindTextures=Pt,this.setupRenderTarget=Jt,this.updateRenderTargetMipmap=re,this.updateMultisampleRenderTarget=me,this.setupDepthRenderbuffer=xt,this.setupFrameBufferTexture=st,this.useMultisampledRTT=Gt}function Fy(s,t,e){const n=e.isWebGL2;function i(r,o=null){let a;if(r===$i)return 5121;if(r===wg)return 32819;if(r===Sg)return 32820;if(r===yg)return 5120;if(r===bg)return 5122;if(r===bf)return 5123;if(r===Mg)return 5124;if(r===Vi)return 5125;if(r===Hi)return 5126;if(r===Pr)return n?5131:(a=t.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(r===Eg)return 6406;if(r===_n)return 6408;if(r===Ag)return 6409;if(r===Tg)return 6410;if(r===qi)return 6402;if(r===Ns)return 34041;if(r===Il)return a=t.get("EXT_sRGB"),a!==null?a.SRGB_ALPHA_EXT:null;if(r===Cg)return 6403;if(r===Pg)return 36244;if(r===Lg)return 33319;if(r===Rg)return 33320;if(r===Dg)return 36249;if(r===Ea||r===Aa||r===Ta||r===Ca)if(o===ee)if(a=t.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(r===Ea)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(r===Aa)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(r===Ta)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(r===Ca)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=t.get("WEBGL_compressed_texture_s3tc"),a!==null){if(r===Ea)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===Aa)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===Ta)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===Ca)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(r===Kc||r===Zc||r===Jc||r===Qc)if(a=t.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(r===Kc)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===Zc)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===Jc)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===Qc)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(r===Ig)return a=t.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(r===th||r===eh)if(a=t.get("WEBGL_compressed_texture_etc"),a!==null){if(r===th)return o===ee?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(r===eh)return o===ee?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(r===nh||r===ih||r===sh||r===rh||r===oh||r===ah||r===lh||r===ch||r===hh||r===uh||r===dh||r===fh||r===ph||r===mh)if(a=t.get("WEBGL_compressed_texture_astc"),a!==null){if(r===nh)return o===ee?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(r===ih)return o===ee?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(r===sh)return o===ee?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(r===rh)return o===ee?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(r===oh)return o===ee?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(r===ah)return o===ee?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(r===lh)return o===ee?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(r===ch)return o===ee?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(r===hh)return o===ee?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(r===uh)return o===ee?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(r===dh)return o===ee?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(r===fh)return o===ee?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(r===ph)return o===ee?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(r===mh)return o===ee?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(r===Pa)if(a=t.get("EXT_texture_compression_bptc"),a!==null){if(r===Pa)return o===ee?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(r===Fg||r===gh||r===_h||r===xh)if(a=t.get("EXT_texture_compression_rgtc"),a!==null){if(r===Pa)return a.COMPRESSED_RED_RGTC1_EXT;if(r===gh)return a.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(r===_h)return a.COMPRESSED_RED_GREEN_RGTC2_EXT;if(r===xh)return a.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return r===Is?n?34042:(a=t.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null):s[r]!==void 0?s[r]:null}return{convert:i}}class Oy extends an{constructor(t=[]){super(),this.isArrayCamera=!0,this.cameras=t}}class _o extends Ce{constructor(){super(),this.isGroup=!0,this.type="Group"}}const zy={type:"move"};class Qa{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new _o,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new _o,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new U,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new U),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new _o,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new U,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new U),this._grip}dispatchEvent(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const e=this._hand;if(e)for(const n of t.hand.values())this._getHandJoint(e,n)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(t,e,n){let i=null,r=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(t&&e.session.visibilityState!=="visible-blurred"){if(c&&t.hand){o=!0;for(const _ of t.hand.values()){const m=e.getJointPose(_,n),p=this._getHandJoint(c,_);m!==null&&(p.matrix.fromArray(m.transform.matrix),p.matrix.decompose(p.position,p.rotation,p.scale),p.jointRadius=m.radius),p.visible=m!==null}const h=c.joints["index-finger-tip"],u=c.joints["thumb-tip"],d=h.position.distanceTo(u.position),f=.02,g=.005;c.inputState.pinching&&d>f+g?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!c.inputState.pinching&&d<=f-g&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else l!==null&&t.gripSpace&&(r=e.getPose(t.gripSpace,n),r!==null&&(l.matrix.fromArray(r.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),r.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(r.linearVelocity)):l.hasLinearVelocity=!1,r.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(r.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(i=e.getPose(t.targetRaySpace,n),i===null&&r!==null&&(i=r),i!==null&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(zy)))}return a!==null&&(a.visible=i!==null),l!==null&&(l.visible=r!==null),c!==null&&(c.visible=o!==null),this}_getHandJoint(t,e){if(t.joints[e.jointName]===void 0){const n=new _o;n.matrixAutoUpdate=!1,n.visible=!1,t.joints[e.jointName]=n,t.add(n)}return t.joints[e.jointName]}}class ky extends qe{constructor(t,e,n,i,r,o,a,l,c,h){if(h=h!==void 0?h:qi,h!==qi&&h!==Ns)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&h===qi&&(n=Vi),n===void 0&&h===Ns&&(n=Is),super(null,i,r,o,a,l,h,n,c),this.isDepthTexture=!0,this.image={width:t,height:e},this.magFilter=a!==void 0?a:Be,this.minFilter=l!==void 0?l:Be,this.flipY=!1,this.generateMipmaps=!1}}class Ny extends ns{constructor(t,e){super();const n=this;let i=null,r=1,o=null,a="local-floor",l=1,c=null,h=null,u=null,d=null,f=null,g=null;const _=e.getContextAttributes();let m=null,p=null;const x=[],w=[],v=new Set,y=new Map,S=new an;S.layers.enable(1),S.viewport=new Ae;const T=new an;T.layers.enable(2),T.viewport=new Ae;const A=[S,T],b=new Oy;b.layers.enable(1),b.layers.enable(2);let M=null,L=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(q){let J=x[q];return J===void 0&&(J=new Qa,x[q]=J),J.getTargetRaySpace()},this.getControllerGrip=function(q){let J=x[q];return J===void 0&&(J=new Qa,x[q]=J),J.getGripSpace()},this.getHand=function(q){let J=x[q];return J===void 0&&(J=new Qa,x[q]=J),J.getHandSpace()};function I(q){const J=w.indexOf(q.inputSource);if(J===-1)return;const ot=x[J];ot!==void 0&&ot.dispatchEvent({type:q.type,data:q.inputSource})}function C(){i.removeEventListener("select",I),i.removeEventListener("selectstart",I),i.removeEventListener("selectend",I),i.removeEventListener("squeeze",I),i.removeEventListener("squeezestart",I),i.removeEventListener("squeezeend",I),i.removeEventListener("end",C),i.removeEventListener("inputsourceschange",D);for(let q=0;q<x.length;q++){const J=w[q];J!==null&&(w[q]=null,x[q].disconnect(J))}M=null,L=null,t.setRenderTarget(m),f=null,d=null,u=null,i=null,p=null,G.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(q){r=q,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(q){a=q,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||o},this.setReferenceSpace=function(q){c=q},this.getBaseLayer=function(){return d!==null?d:f},this.getBinding=function(){return u},this.getFrame=function(){return g},this.getSession=function(){return i},this.setSession=async function(q){if(i=q,i!==null){if(m=t.getRenderTarget(),i.addEventListener("select",I),i.addEventListener("selectstart",I),i.addEventListener("selectend",I),i.addEventListener("squeeze",I),i.addEventListener("squeezestart",I),i.addEventListener("squeezeend",I),i.addEventListener("end",C),i.addEventListener("inputsourceschange",D),_.xrCompatible!==!0&&await e.makeXRCompatible(),i.renderState.layers===void 0||t.capabilities.isWebGL2===!1){const J={antialias:i.renderState.layers===void 0?_.antialias:!0,alpha:_.alpha,depth:_.depth,stencil:_.stencil,framebufferScaleFactor:r};f=new XRWebGLLayer(i,e,J),i.updateRenderState({baseLayer:f}),p=new Zi(f.framebufferWidth,f.framebufferHeight,{format:_n,type:$i,encoding:t.outputEncoding,stencilBuffer:_.stencil})}else{let J=null,ot=null,at=null;_.depth&&(at=_.stencil?35056:33190,J=_.stencil?Ns:qi,ot=_.stencil?Is:Vi);const X={colorFormat:32856,depthFormat:at,scaleFactor:r};u=new XRWebGLBinding(i,e),d=u.createProjectionLayer(X),i.updateRenderState({layers:[d]}),p=new Zi(d.textureWidth,d.textureHeight,{format:_n,type:$i,depthTexture:new ky(d.textureWidth,d.textureHeight,ot,void 0,void 0,void 0,void 0,void 0,void 0,J),stencilBuffer:_.stencil,encoding:t.outputEncoding,samples:_.antialias?4:0});const Et=t.properties.get(p);Et.__ignoreDepthValues=d.ignoreDepthValues}p.isXRRenderTarget=!0,this.setFoveation(l),c=null,o=await i.requestReferenceSpace(a),G.setContext(i),G.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function D(q){for(let J=0;J<q.removed.length;J++){const ot=q.removed[J],at=w.indexOf(ot);at>=0&&(w[at]=null,x[at].disconnect(ot))}for(let J=0;J<q.added.length;J++){const ot=q.added[J];let at=w.indexOf(ot);if(at===-1){for(let Et=0;Et<x.length;Et++)if(Et>=w.length){w.push(ot),at=Et;break}else if(w[Et]===null){w[Et]=ot,at=Et;break}if(at===-1)break}const X=x[at];X&&X.connect(ot)}}const P=new U,O=new U;function V(q,J,ot){P.setFromMatrixPosition(J.matrixWorld),O.setFromMatrixPosition(ot.matrixWorld);const at=P.distanceTo(O),X=J.projectionMatrix.elements,Et=ot.projectionMatrix.elements,St=X[14]/(X[10]-1),st=X[14]/(X[10]+1),Mt=(X[9]+1)/X[5],Ht=(X[9]-1)/X[5],xt=(X[8]-1)/X[0],Pt=(Et[8]+1)/Et[0],Jt=St*xt,re=St*Pt,me=at/(-xt+Pt),de=me*-xt;J.matrixWorld.decompose(q.position,q.quaternion,q.scale),q.translateX(de),q.translateZ(me),q.matrixWorld.compose(q.position,q.quaternion,q.scale),q.matrixWorldInverse.copy(q.matrixWorld).invert();const Gt=St+me,Yt=st+me,Pe=Jt-de,z=re+(at-de),R=Mt*st/Yt*Gt,K=Ht*st/Yt*Gt;q.projectionMatrix.makePerspective(Pe,z,R,K,Gt,Yt),q.projectionMatrixInverse.copy(q.projectionMatrix).invert()}function B(q,J){J===null?q.matrixWorld.copy(q.matrix):q.matrixWorld.multiplyMatrices(J.matrixWorld,q.matrix),q.matrixWorldInverse.copy(q.matrixWorld).invert()}this.updateCamera=function(q){if(i===null)return;b.near=T.near=S.near=q.near,b.far=T.far=S.far=q.far,(M!==b.near||L!==b.far)&&(i.updateRenderState({depthNear:b.near,depthFar:b.far}),M=b.near,L=b.far);const J=q.parent,ot=b.cameras;B(b,J);for(let at=0;at<ot.length;at++)B(ot[at],J);ot.length===2?V(b,S,T):b.projectionMatrix.copy(S.projectionMatrix),j(q,b,J)};function j(q,J,ot){ot===null?q.matrix.copy(J.matrixWorld):(q.matrix.copy(ot.matrixWorld),q.matrix.invert(),q.matrix.multiply(J.matrixWorld)),q.matrix.decompose(q.position,q.quaternion,q.scale),q.updateMatrixWorld(!0);const at=q.children;for(let X=0,Et=at.length;X<Et;X++)at[X].updateMatrixWorld(!0);q.projectionMatrix.copy(J.projectionMatrix),q.projectionMatrixInverse.copy(J.projectionMatrixInverse),q.isPerspectiveCamera&&(q.fov=Fl*2*Math.atan(1/q.projectionMatrix.elements[5]),q.zoom=1)}this.getCamera=function(){return b},this.getFoveation=function(){if(!(d===null&&f===null))return l},this.setFoveation=function(q){l=q,d!==null&&(d.fixedFoveation=q),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=q)},this.getPlanes=function(){return v};let $=null;function ct(q,J){if(h=J.getViewerPose(c||o),g=J,h!==null){const ot=h.views;f!==null&&(t.setRenderTargetFramebuffer(p,f.framebuffer),t.setRenderTarget(p));let at=!1;ot.length!==b.cameras.length&&(b.cameras.length=0,at=!0);for(let X=0;X<ot.length;X++){const Et=ot[X];let St=null;if(f!==null)St=f.getViewport(Et);else{const Mt=u.getViewSubImage(d,Et);St=Mt.viewport,X===0&&(t.setRenderTargetTextures(p,Mt.colorTexture,d.ignoreDepthValues?void 0:Mt.depthStencilTexture),t.setRenderTarget(p))}let st=A[X];st===void 0&&(st=new an,st.layers.enable(X),st.viewport=new Ae,A[X]=st),st.matrix.fromArray(Et.transform.matrix),st.matrix.decompose(st.position,st.quaternion,st.scale),st.projectionMatrix.fromArray(Et.projectionMatrix),st.projectionMatrixInverse.copy(st.projectionMatrix).invert(),st.viewport.set(St.x,St.y,St.width,St.height),X===0&&(b.matrix.copy(st.matrix),b.matrix.decompose(b.position,b.quaternion,b.scale)),at===!0&&b.cameras.push(st)}}for(let ot=0;ot<x.length;ot++){const at=w[ot],X=x[ot];at!==null&&X!==void 0&&X.update(at,J,c||o)}if($&&$(q,J),J.detectedPlanes){n.dispatchEvent({type:"planesdetected",data:J.detectedPlanes});let ot=null;for(const at of v)J.detectedPlanes.has(at)||(ot===null&&(ot=[]),ot.push(at));if(ot!==null)for(const at of ot)v.delete(at),y.delete(at),n.dispatchEvent({type:"planeremoved",data:at});for(const at of J.detectedPlanes)if(!v.has(at))v.add(at),y.set(at,J.lastChangedTime),n.dispatchEvent({type:"planeadded",data:at});else{const X=y.get(at);at.lastChangedTime>X&&(y.set(at,at.lastChangedTime),n.dispatchEvent({type:"planechanged",data:at}))}}g=null}const G=new Of;G.setAnimationLoop(ct),this.setAnimationLoop=function(q){$=q},this.dispose=function(){}}}function By(s,t){function e(m,p){m.matrixAutoUpdate===!0&&m.updateMatrix(),p.value.copy(m.matrix)}function n(m,p){p.color.getRGB(m.fogColor.value,Df(s)),p.isFog?(m.fogNear.value=p.near,m.fogFar.value=p.far):p.isFogExp2&&(m.fogDensity.value=p.density)}function i(m,p,x,w,v){p.isMeshBasicMaterial||p.isMeshLambertMaterial?r(m,p):p.isMeshToonMaterial?(r(m,p),u(m,p)):p.isMeshPhongMaterial?(r(m,p),h(m,p)):p.isMeshStandardMaterial?(r(m,p),d(m,p),p.isMeshPhysicalMaterial&&f(m,p,v)):p.isMeshMatcapMaterial?(r(m,p),g(m,p)):p.isMeshDepthMaterial?r(m,p):p.isMeshDistanceMaterial?(r(m,p),_(m,p)):p.isMeshNormalMaterial?r(m,p):p.isLineBasicMaterial?(o(m,p),p.isLineDashedMaterial&&a(m,p)):p.isPointsMaterial?l(m,p,x,w):p.isSpriteMaterial?c(m,p):p.isShadowMaterial?(m.color.value.copy(p.color),m.opacity.value=p.opacity):p.isShaderMaterial&&(p.uniformsNeedUpdate=!1)}function r(m,p){m.opacity.value=p.opacity,p.color&&m.diffuse.value.copy(p.color),p.emissive&&m.emissive.value.copy(p.emissive).multiplyScalar(p.emissiveIntensity),p.map&&(m.map.value=p.map,e(p.map,m.mapTransform)),p.alphaMap&&(m.alphaMap.value=p.alphaMap,e(p.alphaMap,m.alphaMapTransform)),p.bumpMap&&(m.bumpMap.value=p.bumpMap,e(p.bumpMap,m.bumpMapTransform),m.bumpScale.value=p.bumpScale,p.side===Ge&&(m.bumpScale.value*=-1)),p.normalMap&&(m.normalMap.value=p.normalMap,e(p.normalMap,m.normalMapTransform),m.normalScale.value.copy(p.normalScale),p.side===Ge&&m.normalScale.value.negate()),p.displacementMap&&(m.displacementMap.value=p.displacementMap,e(p.displacementMap,m.displacementMapTransform),m.displacementScale.value=p.displacementScale,m.displacementBias.value=p.displacementBias),p.emissiveMap&&(m.emissiveMap.value=p.emissiveMap,e(p.emissiveMap,m.emissiveMapTransform)),p.specularMap&&(m.specularMap.value=p.specularMap,e(p.specularMap,m.specularMapTransform)),p.alphaTest>0&&(m.alphaTest.value=p.alphaTest);const x=t.get(p).envMap;if(x&&(m.envMap.value=x,m.flipEnvMap.value=x.isCubeTexture&&x.isRenderTargetTexture===!1?-1:1,m.reflectivity.value=p.reflectivity,m.ior.value=p.ior,m.refractionRatio.value=p.refractionRatio),p.lightMap){m.lightMap.value=p.lightMap;const w=s.useLegacyLights===!0?Math.PI:1;m.lightMapIntensity.value=p.lightMapIntensity*w,e(p.lightMap,m.lightMapTransform)}p.aoMap&&(m.aoMap.value=p.aoMap,m.aoMapIntensity.value=p.aoMapIntensity,e(p.aoMap,m.aoMapTransform))}function o(m,p){m.diffuse.value.copy(p.color),m.opacity.value=p.opacity,p.map&&(m.map.value=p.map,e(p.map,m.mapTransform))}function a(m,p){m.dashSize.value=p.dashSize,m.totalSize.value=p.dashSize+p.gapSize,m.scale.value=p.scale}function l(m,p,x,w){m.diffuse.value.copy(p.color),m.opacity.value=p.opacity,m.size.value=p.size*x,m.scale.value=w*.5,p.map&&(m.map.value=p.map,e(p.map,m.uvTransform)),p.alphaMap&&(m.alphaMap.value=p.alphaMap),p.alphaTest>0&&(m.alphaTest.value=p.alphaTest)}function c(m,p){m.diffuse.value.copy(p.color),m.opacity.value=p.opacity,m.rotation.value=p.rotation,p.map&&(m.map.value=p.map,e(p.map,m.mapTransform)),p.alphaMap&&(m.alphaMap.value=p.alphaMap),p.alphaTest>0&&(m.alphaTest.value=p.alphaTest)}function h(m,p){m.specular.value.copy(p.specular),m.shininess.value=Math.max(p.shininess,1e-4)}function u(m,p){p.gradientMap&&(m.gradientMap.value=p.gradientMap)}function d(m,p){m.metalness.value=p.metalness,p.metalnessMap&&(m.metalnessMap.value=p.metalnessMap,e(p.metalnessMap,m.metalnessMapTransform)),m.roughness.value=p.roughness,p.roughnessMap&&(m.roughnessMap.value=p.roughnessMap,e(p.roughnessMap,m.roughnessMapTransform)),t.get(p).envMap&&(m.envMapIntensity.value=p.envMapIntensity)}function f(m,p,x){m.ior.value=p.ior,p.sheen>0&&(m.sheenColor.value.copy(p.sheenColor).multiplyScalar(p.sheen),m.sheenRoughness.value=p.sheenRoughness,p.sheenColorMap&&(m.sheenColorMap.value=p.sheenColorMap,e(p.sheenColorMap,m.sheenColorMapTransform)),p.sheenRoughnessMap&&(m.sheenRoughnessMap.value=p.sheenRoughnessMap,e(p.sheenRoughnessMap,m.sheenRoughnessMapTransform))),p.clearcoat>0&&(m.clearcoat.value=p.clearcoat,m.clearcoatRoughness.value=p.clearcoatRoughness,p.clearcoatMap&&(m.clearcoatMap.value=p.clearcoatMap,e(p.clearcoatMap,m.clearcoatMapTransform)),p.clearcoatRoughnessMap&&(m.clearcoatRoughnessMap.value=p.clearcoatRoughnessMap,e(p.clearcoatRoughnessMap,m.clearcoatRoughnessMapTransform)),p.clearcoatNormalMap&&(m.clearcoatNormalMap.value=p.clearcoatNormalMap,e(p.clearcoatNormalMap,m.clearcoatNormalMapTransform),m.clearcoatNormalScale.value.copy(p.clearcoatNormalScale),p.side===Ge&&m.clearcoatNormalScale.value.negate())),p.iridescence>0&&(m.iridescence.value=p.iridescence,m.iridescenceIOR.value=p.iridescenceIOR,m.iridescenceThicknessMinimum.value=p.iridescenceThicknessRange[0],m.iridescenceThicknessMaximum.value=p.iridescenceThicknessRange[1],p.iridescenceMap&&(m.iridescenceMap.value=p.iridescenceMap,e(p.iridescenceMap,m.iridescenceMapTransform)),p.iridescenceThicknessMap&&(m.iridescenceThicknessMap.value=p.iridescenceThicknessMap,e(p.iridescenceThicknessMap,m.iridescenceThicknessMapTransform))),p.transmission>0&&(m.transmission.value=p.transmission,m.transmissionSamplerMap.value=x.texture,m.transmissionSamplerSize.value.set(x.width,x.height),p.transmissionMap&&(m.transmissionMap.value=p.transmissionMap,e(p.transmissionMap,m.transmissionMapTransform)),m.thickness.value=p.thickness,p.thicknessMap&&(m.thicknessMap.value=p.thicknessMap,e(p.thicknessMap,m.thicknessMapTransform)),m.attenuationDistance.value=p.attenuationDistance,m.attenuationColor.value.copy(p.attenuationColor)),m.specularIntensity.value=p.specularIntensity,m.specularColor.value.copy(p.specularColor),p.specularColorMap&&(m.specularColorMap.value=p.specularColorMap,e(p.specularColorMap,m.specularColorMapTransform)),p.specularIntensityMap&&(m.specularIntensityMap.value=p.specularIntensityMap,e(p.specularIntensityMap,m.specularIntensityMapTransform))}function g(m,p){p.matcap&&(m.matcap.value=p.matcap)}function _(m,p){const x=t.get(p).light;m.referencePosition.value.setFromMatrixPosition(x.matrixWorld),m.nearDistance.value=x.shadow.camera.near,m.farDistance.value=x.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function Uy(s,t,e,n){let i={},r={},o=[];const a=e.isWebGL2?s.getParameter(35375):0;function l(x,w){const v=w.program;n.uniformBlockBinding(x,v)}function c(x,w){let v=i[x.id];v===void 0&&(g(x),v=h(x),i[x.id]=v,x.addEventListener("dispose",m));const y=w.program;n.updateUBOMapping(x,y);const S=t.render.frame;r[x.id]!==S&&(d(x),r[x.id]=S)}function h(x){const w=u();x.__bindingPointIndex=w;const v=s.createBuffer(),y=x.__size,S=x.usage;return s.bindBuffer(35345,v),s.bufferData(35345,y,S),s.bindBuffer(35345,null),s.bindBufferBase(35345,w,v),v}function u(){for(let x=0;x<a;x++)if(o.indexOf(x)===-1)return o.push(x),x;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(x){const w=i[x.id],v=x.uniforms,y=x.__cache;s.bindBuffer(35345,w);for(let S=0,T=v.length;S<T;S++){const A=v[S];if(f(A,S,y)===!0){const b=A.__offset,M=Array.isArray(A.value)?A.value:[A.value];let L=0;for(let I=0;I<M.length;I++){const C=M[I],D=_(C);typeof C=="number"?(A.__data[0]=C,s.bufferSubData(35345,b+L,A.__data)):C.isMatrix3?(A.__data[0]=C.elements[0],A.__data[1]=C.elements[1],A.__data[2]=C.elements[2],A.__data[3]=C.elements[0],A.__data[4]=C.elements[3],A.__data[5]=C.elements[4],A.__data[6]=C.elements[5],A.__data[7]=C.elements[0],A.__data[8]=C.elements[6],A.__data[9]=C.elements[7],A.__data[10]=C.elements[8],A.__data[11]=C.elements[0]):(C.toArray(A.__data,L),L+=D.storage/Float32Array.BYTES_PER_ELEMENT)}s.bufferSubData(35345,b,A.__data)}}s.bindBuffer(35345,null)}function f(x,w,v){const y=x.value;if(v[w]===void 0){if(typeof y=="number")v[w]=y;else{const S=Array.isArray(y)?y:[y],T=[];for(let A=0;A<S.length;A++)T.push(S[A].clone());v[w]=T}return!0}else if(typeof y=="number"){if(v[w]!==y)return v[w]=y,!0}else{const S=Array.isArray(v[w])?v[w]:[v[w]],T=Array.isArray(y)?y:[y];for(let A=0;A<S.length;A++){const b=S[A];if(b.equals(T[A])===!1)return b.copy(T[A]),!0}}return!1}function g(x){const w=x.uniforms;let v=0;const y=16;let S=0;for(let T=0,A=w.length;T<A;T++){const b=w[T],M={boundary:0,storage:0},L=Array.isArray(b.value)?b.value:[b.value];for(let I=0,C=L.length;I<C;I++){const D=L[I],P=_(D);M.boundary+=P.boundary,M.storage+=P.storage}if(b.__data=new Float32Array(M.storage/Float32Array.BYTES_PER_ELEMENT),b.__offset=v,T>0){S=v%y;const I=y-S;S!==0&&I-M.boundary<0&&(v+=y-S,b.__offset=v)}v+=M.storage}return S=v%y,S>0&&(v+=y-S),x.__size=v,x.__cache={},this}function _(x){const w={boundary:0,storage:0};return typeof x=="number"?(w.boundary=4,w.storage=4):x.isVector2?(w.boundary=8,w.storage=8):x.isVector3||x.isColor?(w.boundary=16,w.storage=12):x.isVector4?(w.boundary=16,w.storage=16):x.isMatrix3?(w.boundary=48,w.storage=48):x.isMatrix4?(w.boundary=64,w.storage=64):x.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",x),w}function m(x){const w=x.target;w.removeEventListener("dispose",m);const v=o.indexOf(w.__bindingPointIndex);o.splice(v,1),s.deleteBuffer(i[w.id]),delete i[w.id],delete r[w.id]}function p(){for(const x in i)s.deleteBuffer(i[x]);o=[],i={},r={}}return{bind:l,update:c,dispose:p}}function Vy(){const s=Rr("canvas");return s.style.display="block",s}class Vf{constructor(t={}){const{canvas:e=Vy(),context:n=null,depth:i=!0,stencil:r=!0,alpha:o=!1,antialias:a=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:c=!1,powerPreference:h="default",failIfMajorPerformanceCaveat:u=!1}=t;this.isWebGLRenderer=!0;let d;n!==null?d=n.getContextAttributes().alpha:d=o;let f=null,g=null;const _=[],m=[];this.domElement=e,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=Ki,this.useLegacyLights=!0,this.toneMapping=ii,this.toneMappingExposure=1;const p=this;let x=!1,w=0,v=0,y=null,S=-1,T=null;const A=new Ae,b=new Ae;let M=null,L=e.width,I=e.height,C=1,D=null,P=null;const O=new Ae(0,0,L,I),V=new Ae(0,0,L,I);let B=!1;const j=new ac;let $=!1,ct=!1,G=null;const q=new ve,J=new U,ot={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function at(){return y===null?C:1}let X=n;function Et(F,W){for(let Z=0;Z<F.length;Z++){const H=F[Z],tt=e.getContext(H,W);if(tt!==null)return tt}return null}try{const F={alpha:!0,depth:i,stencil:r,antialias:a,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:h,failIfMajorPerformanceCaveat:u};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${rc}`),e.addEventListener("webglcontextlost",vt,!1),e.addEventListener("webglcontextrestored",Tt,!1),e.addEventListener("webglcontextcreationerror",Ft,!1),X===null){const W=["webgl2","webgl","experimental-webgl"];if(p.isWebGL1Renderer===!0&&W.shift(),X=Et(W,F),X===null)throw Et(W)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}X.getShaderPrecisionFormat===void 0&&(X.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(F){throw console.error("THREE.WebGLRenderer: "+F.message),F}let St,st,Mt,Ht,xt,Pt,Jt,re,me,de,Gt,Yt,Pe,z,R,K,nt,rt,ut,k,et,Y,dt,_t;function yt(){St=new Jx(X),st=new jx(X,St,t),St.init(st),Y=new Fy(X,St,st),Mt=new Dy(X,St,st),Ht=new ev,xt=new xy,Pt=new Iy(X,St,Mt,xt,st,Y,Ht),Jt=new Yx(p),re=new Zx(p),me=new f0(X,st),dt=new Gx(X,St,me,st),de=new Qx(X,me,Ht,dt),Gt=new rv(X,de,me,Ht),ut=new sv(X,st,Pt),K=new Xx(xt),Yt=new _y(p,Jt,re,St,st,dt,K),Pe=new By(p,xt),z=new yy,R=new Ay(St,st),rt=new Wx(p,Jt,re,Mt,Gt,d,l),nt=new Ry(p,Gt,st),_t=new Uy(X,Ht,st,Mt),k=new qx(X,St,Ht,st),et=new tv(X,St,Ht,st),Ht.programs=Yt.programs,p.capabilities=st,p.extensions=St,p.properties=xt,p.renderLists=z,p.shadowMap=nt,p.state=Mt,p.info=Ht}yt();const pt=new Ny(p,X);this.xr=pt,this.getContext=function(){return X},this.getContextAttributes=function(){return X.getContextAttributes()},this.forceContextLoss=function(){const F=St.get("WEBGL_lose_context");F&&F.loseContext()},this.forceContextRestore=function(){const F=St.get("WEBGL_lose_context");F&&F.restoreContext()},this.getPixelRatio=function(){return C},this.setPixelRatio=function(F){F!==void 0&&(C=F,this.setSize(L,I,!1))},this.getSize=function(F){return F.set(L,I)},this.setSize=function(F,W,Z=!0){if(pt.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}L=F,I=W,e.width=Math.floor(F*C),e.height=Math.floor(W*C),Z===!0&&(e.style.width=F+"px",e.style.height=W+"px"),this.setViewport(0,0,F,W)},this.getDrawingBufferSize=function(F){return F.set(L*C,I*C).floor()},this.setDrawingBufferSize=function(F,W,Z){L=F,I=W,C=Z,e.width=Math.floor(F*Z),e.height=Math.floor(W*Z),this.setViewport(0,0,F,W)},this.getCurrentViewport=function(F){return F.copy(A)},this.getViewport=function(F){return F.copy(O)},this.setViewport=function(F,W,Z,H){F.isVector4?O.set(F.x,F.y,F.z,F.w):O.set(F,W,Z,H),Mt.viewport(A.copy(O).multiplyScalar(C).floor())},this.getScissor=function(F){return F.copy(V)},this.setScissor=function(F,W,Z,H){F.isVector4?V.set(F.x,F.y,F.z,F.w):V.set(F,W,Z,H),Mt.scissor(b.copy(V).multiplyScalar(C).floor())},this.getScissorTest=function(){return B},this.setScissorTest=function(F){Mt.setScissorTest(B=F)},this.setOpaqueSort=function(F){D=F},this.setTransparentSort=function(F){P=F},this.getClearColor=function(F){return F.copy(rt.getClearColor())},this.setClearColor=function(){rt.setClearColor.apply(rt,arguments)},this.getClearAlpha=function(){return rt.getClearAlpha()},this.setClearAlpha=function(){rt.setClearAlpha.apply(rt,arguments)},this.clear=function(F=!0,W=!0,Z=!0){let H=0;F&&(H|=16384),W&&(H|=256),Z&&(H|=1024),X.clear(H)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",vt,!1),e.removeEventListener("webglcontextrestored",Tt,!1),e.removeEventListener("webglcontextcreationerror",Ft,!1),z.dispose(),R.dispose(),xt.dispose(),Jt.dispose(),re.dispose(),Gt.dispose(),dt.dispose(),_t.dispose(),Yt.dispose(),pt.dispose(),pt.removeEventListener("sessionstart",bt),pt.removeEventListener("sessionend",Qt),G&&(G.dispose(),G=null),oe.stop()};function vt(F){F.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),x=!0}function Tt(){console.log("THREE.WebGLRenderer: Context Restored."),x=!1;const F=Ht.autoReset,W=nt.enabled,Z=nt.autoUpdate,H=nt.needsUpdate,tt=nt.type;yt(),Ht.autoReset=F,nt.enabled=W,nt.autoUpdate=Z,nt.needsUpdate=H,nt.type=tt}function Ft(F){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",F.statusMessage)}function fe(F){const W=F.target;W.removeEventListener("dispose",fe),N(W)}function N(F){Q(F),xt.remove(F)}function Q(F){const W=xt.get(F).programs;W!==void 0&&(W.forEach(function(Z){Yt.releaseProgram(Z)}),F.isShaderMaterial&&Yt.releaseShaderCache(F))}this.renderBufferDirect=function(F,W,Z,H,tt,wt){W===null&&(W=ot);const At=tt.isMesh&&tt.matrixWorld.determinant()<0,Ct=Nm(F,W,Z,H,tt);Mt.setMaterial(H,At);let Dt=Z.index,Ot=1;H.wireframe===!0&&(Dt=de.getWireframeAttribute(Z),Ot=2);const zt=Z.drawRange,kt=Z.attributes.position;let Xt=zt.start*Ot,ze=(zt.start+zt.count)*Ot;wt!==null&&(Xt=Math.max(Xt,wt.start*Ot),ze=Math.min(ze,(wt.start+wt.count)*Ot)),Dt!==null?(Xt=Math.max(Xt,0),ze=Math.min(ze,Dt.count)):kt!=null&&(Xt=Math.max(Xt,0),ze=Math.min(ze,kt.count));const cn=ze-Xt;if(cn<0||cn===1/0)return;dt.setup(tt,H,Ct,Z,Dt);let Mi,ge=k;if(Dt!==null&&(Mi=me.get(Dt),ge=et,ge.setIndex(Mi)),tt.isMesh)H.wireframe===!0?(Mt.setLineWidth(H.wireframeLinewidth*at()),ge.setMode(1)):ge.setMode(4);else if(tt.isLine){let Vt=H.linewidth;Vt===void 0&&(Vt=1),Mt.setLineWidth(Vt*at()),tt.isLineSegments?ge.setMode(1):tt.isLineLoop?ge.setMode(2):ge.setMode(3)}else tt.isPoints?ge.setMode(0):tt.isSprite&&ge.setMode(4);if(tt.isInstancedMesh)ge.renderInstances(Xt,cn,tt.count);else if(Z.isInstancedBufferGeometry){const Vt=Z._maxInstanceCount!==void 0?Z._maxInstanceCount:1/0,ya=Math.min(Z.instanceCount,Vt);ge.renderInstances(Xt,cn,ya)}else ge.render(Xt,cn)},this.compile=function(F,W){function Z(H,tt,wt){H.transparent===!0&&H.side===Jn&&H.forceSinglePass===!1?(H.side=Ge,H.needsUpdate=!0,Yr(H,tt,wt),H.side=_i,H.needsUpdate=!0,Yr(H,tt,wt),H.side=Jn):Yr(H,tt,wt)}g=R.get(F),g.init(),m.push(g),F.traverseVisible(function(H){H.isLight&&H.layers.test(W.layers)&&(g.pushLight(H),H.castShadow&&g.pushShadow(H))}),g.setupLights(p.useLegacyLights),F.traverse(function(H){const tt=H.material;if(tt)if(Array.isArray(tt))for(let wt=0;wt<tt.length;wt++){const At=tt[wt];Z(At,F,H)}else Z(tt,F,H)}),m.pop(),g=null};let it=null;function mt(F){it&&it(F)}function bt(){oe.stop()}function Qt(){oe.start()}const oe=new Of;oe.setAnimationLoop(mt),typeof self<"u"&&oe.setContext(self),this.setAnimationLoop=function(F){it=F,pt.setAnimationLoop(F),F===null?oe.stop():oe.start()},pt.addEventListener("sessionstart",bt),pt.addEventListener("sessionend",Qt),this.render=function(F,W){if(W!==void 0&&W.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(x===!0)return;F.matrixWorldAutoUpdate===!0&&F.updateMatrixWorld(),W.parent===null&&W.matrixWorldAutoUpdate===!0&&W.updateMatrixWorld(),pt.enabled===!0&&pt.isPresenting===!0&&(pt.cameraAutoUpdate===!0&&pt.updateCamera(W),W=pt.getCamera()),F.isScene===!0&&F.onBeforeRender(p,F,W,y),g=R.get(F,m.length),g.init(),m.push(g),q.multiplyMatrices(W.projectionMatrix,W.matrixWorldInverse),j.setFromProjectionMatrix(q),ct=this.localClippingEnabled,$=K.init(this.clippingPlanes,ct),f=z.get(F,_.length),f.init(),_.push(f),Le(F,W,0,p.sortObjects),f.finish(),p.sortObjects===!0&&f.sort(D,P),$===!0&&K.beginShadows();const Z=g.state.shadowsArray;if(nt.render(Z,F,W),$===!0&&K.endShadows(),this.info.autoReset===!0&&this.info.reset(),rt.render(f,F),g.setupLights(p.useLegacyLights),W.isArrayCamera){const H=W.cameras;for(let tt=0,wt=H.length;tt<wt;tt++){const At=H[tt];si(f,F,At,At.viewport)}}else si(f,F,W);y!==null&&(Pt.updateMultisampleRenderTarget(y),Pt.updateRenderTargetMipmap(y)),F.isScene===!0&&F.onAfterRender(p,F,W),dt.resetDefaultState(),S=-1,T=null,m.pop(),m.length>0?g=m[m.length-1]:g=null,_.pop(),_.length>0?f=_[_.length-1]:f=null};function Le(F,W,Z,H){if(F.visible===!1)return;if(F.layers.test(W.layers)){if(F.isGroup)Z=F.renderOrder;else if(F.isLOD)F.autoUpdate===!0&&F.update(W);else if(F.isLight)g.pushLight(F),F.castShadow&&g.pushShadow(F);else if(F.isSprite){if(!F.frustumCulled||j.intersectsSprite(F)){H&&J.setFromMatrixPosition(F.matrixWorld).applyMatrix4(q);const At=Gt.update(F),Ct=F.material;Ct.visible&&f.push(F,At,Ct,Z,J.z,null)}}else if((F.isMesh||F.isLine||F.isPoints)&&(F.isSkinnedMesh&&F.skeleton.frame!==Ht.render.frame&&(F.skeleton.update(),F.skeleton.frame=Ht.render.frame),!F.frustumCulled||j.intersectsObject(F))){H&&J.setFromMatrixPosition(F.matrixWorld).applyMatrix4(q);const At=Gt.update(F),Ct=F.material;if(Array.isArray(Ct)){const Dt=At.groups;for(let Ot=0,zt=Dt.length;Ot<zt;Ot++){const kt=Dt[Ot],Xt=Ct[kt.materialIndex];Xt&&Xt.visible&&f.push(F,At,Xt,Z,J.z,kt)}}else Ct.visible&&f.push(F,At,Ct,Z,J.z,null)}}const wt=F.children;for(let At=0,Ct=wt.length;At<Ct;At++)Le(wt[At],W,Z,H)}function si(F,W,Z,H){const tt=F.opaque,wt=F.transmissive,At=F.transparent;g.setupLightsView(Z),$===!0&&K.setGlobalState(p.clippingPlanes,Z),wt.length>0&&pe(tt,wt,W,Z),H&&Mt.viewport(A.copy(H)),tt.length>0&&nn(tt,W,Z),wt.length>0&&nn(wt,W,Z),At.length>0&&nn(At,W,Z),Mt.buffers.depth.setTest(!0),Mt.buffers.depth.setMask(!0),Mt.buffers.color.setMask(!0),Mt.setPolygonOffset(!1)}function pe(F,W,Z,H){if(G===null){const Ct=st.isWebGL2;G=new Zi(1024,1024,{generateMipmaps:!0,type:St.has("EXT_color_buffer_half_float")?Pr:$i,minFilter:Cr,samples:Ct&&a===!0?4:0})}const tt=p.getRenderTarget();p.setRenderTarget(G),p.clear();const wt=p.toneMapping;p.toneMapping=ii,nn(F,Z,H),Pt.updateMultisampleRenderTarget(G),Pt.updateRenderTargetMipmap(G);let At=!1;for(let Ct=0,Dt=W.length;Ct<Dt;Ct++){const Ot=W[Ct],zt=Ot.object,kt=Ot.geometry,Xt=Ot.material,ze=Ot.group;if(Xt.side===Jn&&zt.layers.test(H.layers)){const cn=Xt.side;Xt.side=Ge,Xt.needsUpdate=!0,Sn(zt,Z,H,kt,Xt,ze),Xt.side=cn,Xt.needsUpdate=!0,At=!0}}At===!0&&(Pt.updateMultisampleRenderTarget(G),Pt.updateRenderTargetMipmap(G)),p.setRenderTarget(tt),p.toneMapping=wt}function nn(F,W,Z){const H=W.isScene===!0?W.overrideMaterial:null;for(let tt=0,wt=F.length;tt<wt;tt++){const At=F[tt],Ct=At.object,Dt=At.geometry,Ot=H===null?At.material:H,zt=At.group;Ct.layers.test(Z.layers)&&Sn(Ct,W,Z,Dt,Ot,zt)}}function Sn(F,W,Z,H,tt,wt){F.onBeforeRender(p,W,Z,H,tt,wt),F.modelViewMatrix.multiplyMatrices(Z.matrixWorldInverse,F.matrixWorld),F.normalMatrix.getNormalMatrix(F.modelViewMatrix),tt.onBeforeRender(p,W,Z,H,F,wt),tt.transparent===!0&&tt.side===Jn&&tt.forceSinglePass===!1?(tt.side=Ge,tt.needsUpdate=!0,p.renderBufferDirect(Z,W,H,tt,F,wt),tt.side=_i,tt.needsUpdate=!0,p.renderBufferDirect(Z,W,H,tt,F,wt),tt.side=Jn):p.renderBufferDirect(Z,W,H,tt,F,wt),F.onAfterRender(p,W,Z,H,tt,wt)}function Yr(F,W,Z){W.isScene!==!0&&(W=ot);const H=xt.get(F),tt=g.state.lights,wt=g.state.shadowsArray,At=tt.state.version,Ct=Yt.getParameters(F,tt.state,wt,W,Z),Dt=Yt.getProgramCacheKey(Ct);let Ot=H.programs;H.environment=F.isMeshStandardMaterial?W.environment:null,H.fog=W.fog,H.envMap=(F.isMeshStandardMaterial?re:Jt).get(F.envMap||H.environment),Ot===void 0&&(F.addEventListener("dispose",fe),Ot=new Map,H.programs=Ot);let zt=Ot.get(Dt);if(zt!==void 0){if(H.currentProgram===zt&&H.lightsStateVersion===At)return Uc(F,Ct),zt}else Ct.uniforms=Yt.getUniforms(F),F.onBuild(Z,Ct,p),F.onBeforeCompile(Ct,p),zt=Yt.acquireProgram(Ct,Dt),Ot.set(Dt,zt),H.uniforms=Ct.uniforms;const kt=H.uniforms;(!F.isShaderMaterial&&!F.isRawShaderMaterial||F.clipping===!0)&&(kt.clippingPlanes=K.uniform),Uc(F,Ct),H.needsLights=Um(F),H.lightsStateVersion=At,H.needsLights&&(kt.ambientLightColor.value=tt.state.ambient,kt.lightProbe.value=tt.state.probe,kt.directionalLights.value=tt.state.directional,kt.directionalLightShadows.value=tt.state.directionalShadow,kt.spotLights.value=tt.state.spot,kt.spotLightShadows.value=tt.state.spotShadow,kt.rectAreaLights.value=tt.state.rectArea,kt.ltc_1.value=tt.state.rectAreaLTC1,kt.ltc_2.value=tt.state.rectAreaLTC2,kt.pointLights.value=tt.state.point,kt.pointLightShadows.value=tt.state.pointShadow,kt.hemisphereLights.value=tt.state.hemi,kt.directionalShadowMap.value=tt.state.directionalShadowMap,kt.directionalShadowMatrix.value=tt.state.directionalShadowMatrix,kt.spotShadowMap.value=tt.state.spotShadowMap,kt.spotLightMatrix.value=tt.state.spotLightMatrix,kt.spotLightMap.value=tt.state.spotLightMap,kt.pointShadowMap.value=tt.state.pointShadowMap,kt.pointShadowMatrix.value=tt.state.pointShadowMatrix);const Xt=zt.getUniforms(),ze=No.seqWithValue(Xt.seq,kt);return H.currentProgram=zt,H.uniformsList=ze,zt}function Uc(F,W){const Z=xt.get(F);Z.outputEncoding=W.outputEncoding,Z.instancing=W.instancing,Z.skinning=W.skinning,Z.morphTargets=W.morphTargets,Z.morphNormals=W.morphNormals,Z.morphColors=W.morphColors,Z.morphTargetsCount=W.morphTargetsCount,Z.numClippingPlanes=W.numClippingPlanes,Z.numIntersection=W.numClipIntersection,Z.vertexAlphas=W.vertexAlphas,Z.vertexTangents=W.vertexTangents,Z.toneMapping=W.toneMapping}function Nm(F,W,Z,H,tt){W.isScene!==!0&&(W=ot),Pt.resetTextureUnits();const wt=W.fog,At=H.isMeshStandardMaterial?W.environment:null,Ct=y===null?p.outputEncoding:y.isXRRenderTarget===!0?y.texture.encoding:Ki,Dt=(H.isMeshStandardMaterial?re:Jt).get(H.envMap||At),Ot=H.vertexColors===!0&&!!Z.attributes.color&&Z.attributes.color.itemSize===4,zt=!!H.normalMap&&!!Z.attributes.tangent,kt=!!Z.morphAttributes.position,Xt=!!Z.morphAttributes.normal,ze=!!Z.morphAttributes.color,cn=H.toneMapped?p.toneMapping:ii,Mi=Z.morphAttributes.position||Z.morphAttributes.normal||Z.morphAttributes.color,ge=Mi!==void 0?Mi.length:0,Vt=xt.get(H),ya=g.state.lights;if($===!0&&(ct===!0||F!==T)){const Xe=F===T&&H.id===S;K.setState(H,F,Xe)}let Se=!1;H.version===Vt.__version?(Vt.needsLights&&Vt.lightsStateVersion!==ya.state.version||Vt.outputEncoding!==Ct||tt.isInstancedMesh&&Vt.instancing===!1||!tt.isInstancedMesh&&Vt.instancing===!0||tt.isSkinnedMesh&&Vt.skinning===!1||!tt.isSkinnedMesh&&Vt.skinning===!0||Vt.envMap!==Dt||H.fog===!0&&Vt.fog!==wt||Vt.numClippingPlanes!==void 0&&(Vt.numClippingPlanes!==K.numPlanes||Vt.numIntersection!==K.numIntersection)||Vt.vertexAlphas!==Ot||Vt.vertexTangents!==zt||Vt.morphTargets!==kt||Vt.morphNormals!==Xt||Vt.morphColors!==ze||Vt.toneMapping!==cn||st.isWebGL2===!0&&Vt.morphTargetsCount!==ge)&&(Se=!0):(Se=!0,Vt.__version=H.version);let wi=Vt.currentProgram;Se===!0&&(wi=Yr(H,W,tt));let Vc=!1,Ys=!1,ba=!1;const ke=wi.getUniforms(),Si=Vt.uniforms;if(Mt.useProgram(wi.program)&&(Vc=!0,Ys=!0,ba=!0),H.id!==S&&(S=H.id,Ys=!0),Vc||T!==F){if(ke.setValue(X,"projectionMatrix",F.projectionMatrix),st.logarithmicDepthBuffer&&ke.setValue(X,"logDepthBufFC",2/(Math.log(F.far+1)/Math.LN2)),T!==F&&(T=F,Ys=!0,ba=!0),H.isShaderMaterial||H.isMeshPhongMaterial||H.isMeshToonMaterial||H.isMeshStandardMaterial||H.envMap){const Xe=ke.map.cameraPosition;Xe!==void 0&&Xe.setValue(X,J.setFromMatrixPosition(F.matrixWorld))}(H.isMeshPhongMaterial||H.isMeshToonMaterial||H.isMeshLambertMaterial||H.isMeshBasicMaterial||H.isMeshStandardMaterial||H.isShaderMaterial)&&ke.setValue(X,"isOrthographic",F.isOrthographicCamera===!0),(H.isMeshPhongMaterial||H.isMeshToonMaterial||H.isMeshLambertMaterial||H.isMeshBasicMaterial||H.isMeshStandardMaterial||H.isShaderMaterial||H.isShadowMaterial||tt.isSkinnedMesh)&&ke.setValue(X,"viewMatrix",F.matrixWorldInverse)}if(tt.isSkinnedMesh){ke.setOptional(X,tt,"bindMatrix"),ke.setOptional(X,tt,"bindMatrixInverse");const Xe=tt.skeleton;Xe&&(st.floatVertexTextures?(Xe.boneTexture===null&&Xe.computeBoneTexture(),ke.setValue(X,"boneTexture",Xe.boneTexture,Pt),ke.setValue(X,"boneTextureSize",Xe.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const Ma=Z.morphAttributes;if((Ma.position!==void 0||Ma.normal!==void 0||Ma.color!==void 0&&st.isWebGL2===!0)&&ut.update(tt,Z,wi),(Ys||Vt.receiveShadow!==tt.receiveShadow)&&(Vt.receiveShadow=tt.receiveShadow,ke.setValue(X,"receiveShadow",tt.receiveShadow)),H.isMeshGouraudMaterial&&H.envMap!==null&&(Si.envMap.value=Dt,Si.flipEnvMap.value=Dt.isCubeTexture&&Dt.isRenderTargetTexture===!1?-1:1),Ys&&(ke.setValue(X,"toneMappingExposure",p.toneMappingExposure),Vt.needsLights&&Bm(Si,ba),wt&&H.fog===!0&&Pe.refreshFogUniforms(Si,wt),Pe.refreshMaterialUniforms(Si,H,C,I,G),No.upload(X,Vt.uniformsList,Si,Pt)),H.isShaderMaterial&&H.uniformsNeedUpdate===!0&&(No.upload(X,Vt.uniformsList,Si,Pt),H.uniformsNeedUpdate=!1),H.isSpriteMaterial&&ke.setValue(X,"center",tt.center),ke.setValue(X,"modelViewMatrix",tt.modelViewMatrix),ke.setValue(X,"normalMatrix",tt.normalMatrix),ke.setValue(X,"modelMatrix",tt.matrixWorld),H.isShaderMaterial||H.isRawShaderMaterial){const Xe=H.uniformsGroups;for(let wa=0,Vm=Xe.length;wa<Vm;wa++)if(st.isWebGL2){const Hc=Xe[wa];_t.update(Hc,wi),_t.bind(Hc,wi)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return wi}function Bm(F,W){F.ambientLightColor.needsUpdate=W,F.lightProbe.needsUpdate=W,F.directionalLights.needsUpdate=W,F.directionalLightShadows.needsUpdate=W,F.pointLights.needsUpdate=W,F.pointLightShadows.needsUpdate=W,F.spotLights.needsUpdate=W,F.spotLightShadows.needsUpdate=W,F.rectAreaLights.needsUpdate=W,F.hemisphereLights.needsUpdate=W}function Um(F){return F.isMeshLambertMaterial||F.isMeshToonMaterial||F.isMeshPhongMaterial||F.isMeshStandardMaterial||F.isShadowMaterial||F.isShaderMaterial&&F.lights===!0}this.getActiveCubeFace=function(){return w},this.getActiveMipmapLevel=function(){return v},this.getRenderTarget=function(){return y},this.setRenderTargetTextures=function(F,W,Z){xt.get(F.texture).__webglTexture=W,xt.get(F.depthTexture).__webglTexture=Z;const H=xt.get(F);H.__hasExternalTextures=!0,H.__hasExternalTextures&&(H.__autoAllocateDepthBuffer=Z===void 0,H.__autoAllocateDepthBuffer||St.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),H.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(F,W){const Z=xt.get(F);Z.__webglFramebuffer=W,Z.__useDefaultFramebuffer=W===void 0},this.setRenderTarget=function(F,W=0,Z=0){y=F,w=W,v=Z;let H=!0,tt=null,wt=!1,At=!1;if(F){const Dt=xt.get(F);Dt.__useDefaultFramebuffer!==void 0?(Mt.bindFramebuffer(36160,null),H=!1):Dt.__webglFramebuffer===void 0?Pt.setupRenderTarget(F):Dt.__hasExternalTextures&&Pt.rebindTextures(F,xt.get(F.texture).__webglTexture,xt.get(F.depthTexture).__webglTexture);const Ot=F.texture;(Ot.isData3DTexture||Ot.isDataArrayTexture||Ot.isCompressedArrayTexture)&&(At=!0);const zt=xt.get(F).__webglFramebuffer;F.isWebGLCubeRenderTarget?(tt=zt[W],wt=!0):st.isWebGL2&&F.samples>0&&Pt.useMultisampledRTT(F)===!1?tt=xt.get(F).__webglMultisampledFramebuffer:tt=zt,A.copy(F.viewport),b.copy(F.scissor),M=F.scissorTest}else A.copy(O).multiplyScalar(C).floor(),b.copy(V).multiplyScalar(C).floor(),M=B;if(Mt.bindFramebuffer(36160,tt)&&st.drawBuffers&&H&&Mt.drawBuffers(F,tt),Mt.viewport(A),Mt.scissor(b),Mt.setScissorTest(M),wt){const Dt=xt.get(F.texture);X.framebufferTexture2D(36160,36064,34069+W,Dt.__webglTexture,Z)}else if(At){const Dt=xt.get(F.texture),Ot=W||0;X.framebufferTextureLayer(36160,36064,Dt.__webglTexture,Z||0,Ot)}S=-1},this.readRenderTargetPixels=function(F,W,Z,H,tt,wt,At){if(!(F&&F.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Ct=xt.get(F).__webglFramebuffer;if(F.isWebGLCubeRenderTarget&&At!==void 0&&(Ct=Ct[At]),Ct){Mt.bindFramebuffer(36160,Ct);try{const Dt=F.texture,Ot=Dt.format,zt=Dt.type;if(Ot!==_n&&Y.convert(Ot)!==X.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const kt=zt===Pr&&(St.has("EXT_color_buffer_half_float")||st.isWebGL2&&St.has("EXT_color_buffer_float"));if(zt!==$i&&Y.convert(zt)!==X.getParameter(35738)&&!(zt===Hi&&(st.isWebGL2||St.has("OES_texture_float")||St.has("WEBGL_color_buffer_float")))&&!kt){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}W>=0&&W<=F.width-H&&Z>=0&&Z<=F.height-tt&&X.readPixels(W,Z,H,tt,Y.convert(Ot),Y.convert(zt),wt)}finally{const Dt=y!==null?xt.get(y).__webglFramebuffer:null;Mt.bindFramebuffer(36160,Dt)}}},this.copyFramebufferToTexture=function(F,W,Z=0){const H=Math.pow(2,-Z),tt=Math.floor(W.image.width*H),wt=Math.floor(W.image.height*H);Pt.setTexture2D(W,0),X.copyTexSubImage2D(3553,Z,0,0,F.x,F.y,tt,wt),Mt.unbindTexture()},this.copyTextureToTexture=function(F,W,Z,H=0){const tt=W.image.width,wt=W.image.height,At=Y.convert(Z.format),Ct=Y.convert(Z.type);Pt.setTexture2D(Z,0),X.pixelStorei(37440,Z.flipY),X.pixelStorei(37441,Z.premultiplyAlpha),X.pixelStorei(3317,Z.unpackAlignment),W.isDataTexture?X.texSubImage2D(3553,H,F.x,F.y,tt,wt,At,Ct,W.image.data):W.isCompressedTexture?X.compressedTexSubImage2D(3553,H,F.x,F.y,W.mipmaps[0].width,W.mipmaps[0].height,At,W.mipmaps[0].data):X.texSubImage2D(3553,H,F.x,F.y,At,Ct,W.image),H===0&&Z.generateMipmaps&&X.generateMipmap(3553),Mt.unbindTexture()},this.copyTextureToTexture3D=function(F,W,Z,H,tt=0){if(p.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const wt=F.max.x-F.min.x+1,At=F.max.y-F.min.y+1,Ct=F.max.z-F.min.z+1,Dt=Y.convert(H.format),Ot=Y.convert(H.type);let zt;if(H.isData3DTexture)Pt.setTexture3D(H,0),zt=32879;else if(H.isDataArrayTexture)Pt.setTexture2DArray(H,0),zt=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}X.pixelStorei(37440,H.flipY),X.pixelStorei(37441,H.premultiplyAlpha),X.pixelStorei(3317,H.unpackAlignment);const kt=X.getParameter(3314),Xt=X.getParameter(32878),ze=X.getParameter(3316),cn=X.getParameter(3315),Mi=X.getParameter(32877),ge=Z.isCompressedTexture?Z.mipmaps[0]:Z.image;X.pixelStorei(3314,ge.width),X.pixelStorei(32878,ge.height),X.pixelStorei(3316,F.min.x),X.pixelStorei(3315,F.min.y),X.pixelStorei(32877,F.min.z),Z.isDataTexture||Z.isData3DTexture?X.texSubImage3D(zt,tt,W.x,W.y,W.z,wt,At,Ct,Dt,Ot,ge.data):Z.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),X.compressedTexSubImage3D(zt,tt,W.x,W.y,W.z,wt,At,Ct,Dt,ge.data)):X.texSubImage3D(zt,tt,W.x,W.y,W.z,wt,At,Ct,Dt,Ot,ge),X.pixelStorei(3314,kt),X.pixelStorei(32878,Xt),X.pixelStorei(3316,ze),X.pixelStorei(3315,cn),X.pixelStorei(32877,Mi),tt===0&&H.generateMipmaps&&X.generateMipmap(zt),Mt.unbindTexture()},this.initTexture=function(F){F.isCubeTexture?Pt.setTextureCube(F,0):F.isData3DTexture?Pt.setTexture3D(F,0):F.isDataArrayTexture||F.isCompressedArrayTexture?Pt.setTexture2DArray(F,0):Pt.setTexture2D(F,0),Mt.unbindTexture()},this.resetState=function(){w=0,v=0,y=null,Mt.reset(),dt.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get physicallyCorrectLights(){return console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights}set physicallyCorrectLights(t){console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!t}}class Hy extends Vf{}Hy.prototype.isWebGL1Renderer=!0;class Wy extends Ce{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return this.fog!==null&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(e.object.backgroundIntensity=this.backgroundIntensity),e}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(t){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=t}}class Hf extends zn{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Nt(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const su=new U,ru=new U,ou=new ve,tl=new Tf,xo=new ua;class Gy extends Ce{constructor(t=new ln,e=new Hf){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[0];for(let i=1,r=e.count;i<r;i++)su.fromBufferAttribute(e,i-1),ru.fromBufferAttribute(e,i),n[i]=n[i-1],n[i]+=su.distanceTo(ru);t.setAttribute("lineDistance",new je(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),xo.copy(n.boundingSphere),xo.applyMatrix4(i),xo.radius+=r,t.ray.intersectsSphere(xo)===!1)return;ou.copy(i).invert(),tl.copy(t.ray).applyMatrix4(ou);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=new U,h=new U,u=new U,d=new U,f=this.isLineSegments?2:1,g=n.index,m=n.attributes.position;if(g!==null){const p=Math.max(0,o.start),x=Math.min(g.count,o.start+o.count);for(let w=p,v=x-1;w<v;w+=f){const y=g.getX(w),S=g.getX(w+1);if(c.fromBufferAttribute(m,y),h.fromBufferAttribute(m,S),tl.distanceSqToSegment(c,h,d,u)>l)continue;d.applyMatrix4(this.matrixWorld);const A=t.ray.origin.distanceTo(d);A<t.near||A>t.far||e.push({distance:A,point:u.clone().applyMatrix4(this.matrixWorld),index:w,face:null,faceIndex:null,object:this})}}else{const p=Math.max(0,o.start),x=Math.min(m.count,o.start+o.count);for(let w=p,v=x-1;w<v;w+=f){if(c.fromBufferAttribute(m,w),h.fromBufferAttribute(m,w+1),tl.distanceSqToSegment(c,h,d,u)>l)continue;d.applyMatrix4(this.matrixWorld);const S=t.ray.origin.distanceTo(d);S<t.near||S>t.far||e.push({distance:S,point:u.clone().applyMatrix4(this.matrixWorld),index:w,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}class $o extends ln{constructor(t=1,e=1,n=1,i=32,r=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:i,heightSegments:r,openEnded:o,thetaStart:a,thetaLength:l};const c=this;i=Math.floor(i),r=Math.floor(r);const h=[],u=[],d=[],f=[];let g=0;const _=[],m=n/2;let p=0;x(),o===!1&&(t>0&&w(!0),e>0&&w(!1)),this.setIndex(h),this.setAttribute("position",new je(u,3)),this.setAttribute("normal",new je(d,3)),this.setAttribute("uv",new je(f,2));function x(){const v=new U,y=new U;let S=0;const T=(e-t)/n;for(let A=0;A<=r;A++){const b=[],M=A/r,L=M*(e-t)+t;for(let I=0;I<=i;I++){const C=I/i,D=C*l+a,P=Math.sin(D),O=Math.cos(D);y.x=L*P,y.y=-M*n+m,y.z=L*O,u.push(y.x,y.y,y.z),v.set(P,T,O).normalize(),d.push(v.x,v.y,v.z),f.push(C,1-M),b.push(g++)}_.push(b)}for(let A=0;A<i;A++)for(let b=0;b<r;b++){const M=_[b][A],L=_[b+1][A],I=_[b+1][A+1],C=_[b][A+1];h.push(M,L,C),h.push(L,I,C),S+=6}c.addGroup(p,S,0),p+=S}function w(v){const y=g,S=new Lt,T=new U;let A=0;const b=v===!0?t:e,M=v===!0?1:-1;for(let I=1;I<=i;I++)u.push(0,m*M,0),d.push(0,M,0),f.push(.5,.5),g++;const L=g;for(let I=0;I<=i;I++){const D=I/i*l+a,P=Math.cos(D),O=Math.sin(D);T.x=b*O,T.y=m*M,T.z=b*P,u.push(T.x,T.y,T.z),d.push(0,M,0),S.x=P*.5+.5,S.y=O*.5*M+.5,f.push(S.x,S.y),g++}for(let I=0;I<i;I++){const C=y+I,D=L+I;v===!0?h.push(D,D+1,C):h.push(D+1,D,C),A+=3}c.addGroup(p,A,v===!0?1:2),p+=A}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new $o(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class hc extends ln{constructor(t=1,e=32,n=16,i=0,r=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:i,phiLength:r,thetaStart:o,thetaLength:a},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const l=Math.min(o+a,Math.PI);let c=0;const h=[],u=new U,d=new U,f=[],g=[],_=[],m=[];for(let p=0;p<=n;p++){const x=[],w=p/n;let v=0;p===0&&o===0?v=.5/e:p===n&&l===Math.PI&&(v=-.5/e);for(let y=0;y<=e;y++){const S=y/e;u.x=-t*Math.cos(i+S*r)*Math.sin(o+w*a),u.y=t*Math.cos(o+w*a),u.z=t*Math.sin(i+S*r)*Math.sin(o+w*a),g.push(u.x,u.y,u.z),d.copy(u).normalize(),_.push(d.x,d.y,d.z),m.push(S+v,1-w),x.push(c++)}h.push(x)}for(let p=0;p<n;p++)for(let x=0;x<e;x++){const w=h[p][x+1],v=h[p][x],y=h[p+1][x],S=h[p+1][x+1];(p!==0||o>0)&&f.push(w,v,S),(p!==n-1||l<Math.PI)&&f.push(v,y,S)}this.setIndex(f),this.setAttribute("position",new je(g,3)),this.setAttribute("normal",new je(_,3)),this.setAttribute("uv",new je(m,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new hc(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class qy extends zn{constructor(t){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Nt(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Nt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ha,this.normalScale=new Lt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class au extends zn{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Nt(16777215),this.specular=new Nt(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Nt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ha,this.normalScale=new Lt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=la,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class vr extends zn{constructor(t){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Nt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Nt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ha,this.normalScale=new Lt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=la,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}const lu={enabled:!1,files:{},add:function(s,t){this.enabled!==!1&&(this.files[s]=t)},get:function(s){if(this.enabled!==!1)return this.files[s]},remove:function(s){delete this.files[s]},clear:function(){this.files={}}};class jy{constructor(t,e,n){const i=this;let r=!1,o=0,a=0,l;const c=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(h){a++,r===!1&&i.onStart!==void 0&&i.onStart(h,o,a),r=!0},this.itemEnd=function(h){o++,i.onProgress!==void 0&&i.onProgress(h,o,a),o===a&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(h){i.onError!==void 0&&i.onError(h)},this.resolveURL=function(h){return l?l(h):h},this.setURLModifier=function(h){return l=h,this},this.addHandler=function(h,u){return c.push(h,u),this},this.removeHandler=function(h){const u=c.indexOf(h);return u!==-1&&c.splice(u,2),this},this.getHandler=function(h){for(let u=0,d=c.length;u<d;u+=2){const f=c[u],g=c[u+1];if(f.global&&(f.lastIndex=0),f.test(h))return g}return null}}}const Xy=new jy;class Wf{constructor(t){this.manager=t!==void 0?t:Xy,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise(function(i,r){n.load(t,i,e,r)})}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}class Yy extends Wf{constructor(t){super(t)}load(t,e,n,i){this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,o=lu.get(t);if(o!==void 0)return r.manager.itemStart(t),setTimeout(function(){e&&e(o),r.manager.itemEnd(t)},0),o;const a=Rr("img");function l(){h(),lu.add(t,this),e&&e(this),r.manager.itemEnd(t)}function c(u){h(),i&&i(u),r.manager.itemError(t),r.manager.itemEnd(t)}function h(){a.removeEventListener("load",l,!1),a.removeEventListener("error",c,!1)}return a.addEventListener("load",l,!1),a.addEventListener("error",c,!1),t.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),r.manager.itemStart(t),a.src=t,a}}class $y extends Wf{constructor(t){super(t)}load(t,e,n,i){const r=new qe,o=new Yy(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(t,function(a){r.image=a,r.needsUpdate=!0,e!==void 0&&e(r)},n,i),r}}class Gf extends Ce{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new Nt(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),e}}const el=new ve,cu=new U,hu=new U;class Ky{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Lt(512,512),this.map=null,this.mapPass=null,this.matrix=new ve,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new ac,this._frameExtents=new Lt(1,1),this._viewportCount=1,this._viewports=[new Ae(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;cu.setFromMatrixPosition(t.matrixWorld),e.position.copy(cu),hu.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(hu),e.updateMatrixWorld(),el.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(el),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(el)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const t={};return this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class Zy extends Ky{constructor(){super(new zf(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class nl extends Gf{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Ce.DEFAULT_UP),this.updateMatrix(),this.target=new Ce,this.shadow=new Zy}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class Jy extends Gf{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}class uu{constructor(t=1,e=0,n=0){return this.radius=t,this.phi=e,this.theta=n,this}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(Ue(e/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:rc}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=rc);class vn{constructor(t){t===void 0&&(t=[0,0,0,0,0,0,0,0,0]),this.elements=t}identity(){const t=this.elements;t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1}setZero(){const t=this.elements;t[0]=0,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=0,t[6]=0,t[7]=0,t[8]=0}setTrace(t){const e=this.elements;e[0]=t.x,e[4]=t.y,e[8]=t.z}getTrace(t){t===void 0&&(t=new E);const e=this.elements;return t.x=e[0],t.y=e[4],t.z=e[8],t}vmult(t,e){e===void 0&&(e=new E);const n=this.elements,i=t.x,r=t.y,o=t.z;return e.x=n[0]*i+n[1]*r+n[2]*o,e.y=n[3]*i+n[4]*r+n[5]*o,e.z=n[6]*i+n[7]*r+n[8]*o,e}smult(t){for(let e=0;e<this.elements.length;e++)this.elements[e]*=t}mmult(t,e){e===void 0&&(e=new vn);const n=this.elements,i=t.elements,r=e.elements,o=n[0],a=n[1],l=n[2],c=n[3],h=n[4],u=n[5],d=n[6],f=n[7],g=n[8],_=i[0],m=i[1],p=i[2],x=i[3],w=i[4],v=i[5],y=i[6],S=i[7],T=i[8];return r[0]=o*_+a*x+l*y,r[1]=o*m+a*w+l*S,r[2]=o*p+a*v+l*T,r[3]=c*_+h*x+u*y,r[4]=c*m+h*w+u*S,r[5]=c*p+h*v+u*T,r[6]=d*_+f*x+g*y,r[7]=d*m+f*w+g*S,r[8]=d*p+f*v+g*T,e}scale(t,e){e===void 0&&(e=new vn);const n=this.elements,i=e.elements;for(let r=0;r!==3;r++)i[3*r+0]=t.x*n[3*r+0],i[3*r+1]=t.y*n[3*r+1],i[3*r+2]=t.z*n[3*r+2];return e}solve(t,e){e===void 0&&(e=new E);const n=3,i=4,r=[];let o,a;for(o=0;o<n*i;o++)r.push(0);for(o=0;o<3;o++)for(a=0;a<3;a++)r[o+i*a]=this.elements[o+3*a];r[3+4*0]=t.x,r[3+4*1]=t.y,r[3+4*2]=t.z;let l=3;const c=l;let h;const u=4;let d;do{if(o=c-l,r[o+i*o]===0){for(a=o+1;a<c;a++)if(r[o+i*a]!==0){h=u;do d=u-h,r[d+i*o]+=r[d+i*a];while(--h);break}}if(r[o+i*o]!==0)for(a=o+1;a<c;a++){const f=r[o+i*a]/r[o+i*o];h=u;do d=u-h,r[d+i*a]=d<=o?0:r[d+i*a]-r[d+i*o]*f;while(--h)}}while(--l);if(e.z=r[2*i+3]/r[2*i+2],e.y=(r[1*i+3]-r[1*i+2]*e.z)/r[1*i+1],e.x=(r[0*i+3]-r[0*i+2]*e.z-r[0*i+1]*e.y)/r[0*i+0],isNaN(e.x)||isNaN(e.y)||isNaN(e.z)||e.x===1/0||e.y===1/0||e.z===1/0)throw`Could not solve equation! Got x=[${e.toString()}], b=[${t.toString()}], A=[${this.toString()}]`;return e}e(t,e,n){if(n===void 0)return this.elements[e+3*t];this.elements[e+3*t]=n}copy(t){for(let e=0;e<t.elements.length;e++)this.elements[e]=t.elements[e];return this}toString(){let t="";const e=",";for(let n=0;n<9;n++)t+=this.elements[n]+e;return t}reverse(t){t===void 0&&(t=new vn);const e=3,n=6,i=Qy;let r,o;for(r=0;r<3;r++)for(o=0;o<3;o++)i[r+n*o]=this.elements[r+3*o];i[3+6*0]=1,i[3+6*1]=0,i[3+6*2]=0,i[4+6*0]=0,i[4+6*1]=1,i[4+6*2]=0,i[5+6*0]=0,i[5+6*1]=0,i[5+6*2]=1;let a=3;const l=a;let c;const h=n;let u;do{if(r=l-a,i[r+n*r]===0){for(o=r+1;o<l;o++)if(i[r+n*o]!==0){c=h;do u=h-c,i[u+n*r]+=i[u+n*o];while(--c);break}}if(i[r+n*r]!==0)for(o=r+1;o<l;o++){const d=i[r+n*o]/i[r+n*r];c=h;do u=h-c,i[u+n*o]=u<=r?0:i[u+n*o]-i[u+n*r]*d;while(--c)}}while(--a);r=2;do{o=r-1;do{const d=i[r+n*o]/i[r+n*r];c=n;do u=n-c,i[u+n*o]=i[u+n*o]-i[u+n*r]*d;while(--c)}while(o--)}while(--r);r=2;do{const d=1/i[r+n*r];c=n;do u=n-c,i[u+n*r]=i[u+n*r]*d;while(--c)}while(r--);r=2;do{o=2;do{if(u=i[e+o+n*r],isNaN(u)||u===1/0)throw`Could not reverse! A=[${this.toString()}]`;t.e(r,o,u)}while(o--)}while(r--);return t}setRotationFromQuaternion(t){const e=t.x,n=t.y,i=t.z,r=t.w,o=e+e,a=n+n,l=i+i,c=e*o,h=e*a,u=e*l,d=n*a,f=n*l,g=i*l,_=r*o,m=r*a,p=r*l,x=this.elements;return x[3*0+0]=1-(d+g),x[3*0+1]=h-p,x[3*0+2]=u+m,x[3*1+0]=h+p,x[3*1+1]=1-(c+g),x[3*1+2]=f-_,x[3*2+0]=u-m,x[3*2+1]=f+_,x[3*2+2]=1-(c+d),this}transpose(t){t===void 0&&(t=new vn);const e=this.elements,n=t.elements;let i;return n[0]=e[0],n[4]=e[4],n[8]=e[8],i=e[1],n[1]=e[3],n[3]=i,i=e[2],n[2]=e[6],n[6]=i,i=e[5],n[5]=e[7],n[7]=i,t}}const Qy=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];class E{constructor(t,e,n){t===void 0&&(t=0),e===void 0&&(e=0),n===void 0&&(n=0),this.x=t,this.y=e,this.z=n}cross(t,e){e===void 0&&(e=new E);const n=t.x,i=t.y,r=t.z,o=this.x,a=this.y,l=this.z;return e.x=a*r-l*i,e.y=l*n-o*r,e.z=o*i-a*n,e}set(t,e,n){return this.x=t,this.y=e,this.z=n,this}setZero(){this.x=this.y=this.z=0}vadd(t,e){if(e)e.x=t.x+this.x,e.y=t.y+this.y,e.z=t.z+this.z;else return new E(this.x+t.x,this.y+t.y,this.z+t.z)}vsub(t,e){if(e)e.x=this.x-t.x,e.y=this.y-t.y,e.z=this.z-t.z;else return new E(this.x-t.x,this.y-t.y,this.z-t.z)}crossmat(){return new vn([0,-this.z,this.y,this.z,0,-this.x,-this.y,this.x,0])}normalize(){const t=this.x,e=this.y,n=this.z,i=Math.sqrt(t*t+e*e+n*n);if(i>0){const r=1/i;this.x*=r,this.y*=r,this.z*=r}else this.x=0,this.y=0,this.z=0;return i}unit(t){t===void 0&&(t=new E);const e=this.x,n=this.y,i=this.z;let r=Math.sqrt(e*e+n*n+i*i);return r>0?(r=1/r,t.x=e*r,t.y=n*r,t.z=i*r):(t.x=1,t.y=0,t.z=0),t}length(){const t=this.x,e=this.y,n=this.z;return Math.sqrt(t*t+e*e+n*n)}lengthSquared(){return this.dot(this)}distanceTo(t){const e=this.x,n=this.y,i=this.z,r=t.x,o=t.y,a=t.z;return Math.sqrt((r-e)*(r-e)+(o-n)*(o-n)+(a-i)*(a-i))}distanceSquared(t){const e=this.x,n=this.y,i=this.z,r=t.x,o=t.y,a=t.z;return(r-e)*(r-e)+(o-n)*(o-n)+(a-i)*(a-i)}scale(t,e){e===void 0&&(e=new E);const n=this.x,i=this.y,r=this.z;return e.x=t*n,e.y=t*i,e.z=t*r,e}vmul(t,e){return e===void 0&&(e=new E),e.x=t.x*this.x,e.y=t.y*this.y,e.z=t.z*this.z,e}addScaledVector(t,e,n){return n===void 0&&(n=new E),n.x=this.x+t*e.x,n.y=this.y+t*e.y,n.z=this.z+t*e.z,n}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}isZero(){return this.x===0&&this.y===0&&this.z===0}negate(t){return t===void 0&&(t=new E),t.x=-this.x,t.y=-this.y,t.z=-this.z,t}tangents(t,e){const n=this.length();if(n>0){const i=tb,r=1/n;i.set(this.x*r,this.y*r,this.z*r);const o=eb;Math.abs(i.x)<.9?(o.set(1,0,0),i.cross(o,t)):(o.set(0,1,0),i.cross(o,t)),i.cross(t,e)}else t.set(1,0,0),e.set(0,1,0)}toString(){return`${this.x},${this.y},${this.z}`}toArray(){return[this.x,this.y,this.z]}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}lerp(t,e,n){const i=this.x,r=this.y,o=this.z;n.x=i+(t.x-i)*e,n.y=r+(t.y-r)*e,n.z=o+(t.z-o)*e}almostEquals(t,e){return e===void 0&&(e=1e-6),!(Math.abs(this.x-t.x)>e||Math.abs(this.y-t.y)>e||Math.abs(this.z-t.z)>e)}almostZero(t){return t===void 0&&(t=1e-6),!(Math.abs(this.x)>t||Math.abs(this.y)>t||Math.abs(this.z)>t)}isAntiparallelTo(t,e){return this.negate(du),du.almostEquals(t,e)}clone(){return new E(this.x,this.y,this.z)}}E.ZERO=new E(0,0,0);E.UNIT_X=new E(1,0,0);E.UNIT_Y=new E(0,1,0);E.UNIT_Z=new E(0,0,1);const tb=new E,eb=new E,du=new E;class en{constructor(t){t===void 0&&(t={}),this.lowerBound=new E,this.upperBound=new E,t.lowerBound&&this.lowerBound.copy(t.lowerBound),t.upperBound&&this.upperBound.copy(t.upperBound)}setFromPoints(t,e,n,i){const r=this.lowerBound,o=this.upperBound,a=n;r.copy(t[0]),a&&a.vmult(r,r),o.copy(r);for(let l=1;l<t.length;l++){let c=t[l];a&&(a.vmult(c,fu),c=fu),c.x>o.x&&(o.x=c.x),c.x<r.x&&(r.x=c.x),c.y>o.y&&(o.y=c.y),c.y<r.y&&(r.y=c.y),c.z>o.z&&(o.z=c.z),c.z<r.z&&(r.z=c.z)}return e&&(e.vadd(r,r),e.vadd(o,o)),i&&(r.x-=i,r.y-=i,r.z-=i,o.x+=i,o.y+=i,o.z+=i),this}copy(t){return this.lowerBound.copy(t.lowerBound),this.upperBound.copy(t.upperBound),this}clone(){return new en().copy(this)}extend(t){this.lowerBound.x=Math.min(this.lowerBound.x,t.lowerBound.x),this.upperBound.x=Math.max(this.upperBound.x,t.upperBound.x),this.lowerBound.y=Math.min(this.lowerBound.y,t.lowerBound.y),this.upperBound.y=Math.max(this.upperBound.y,t.upperBound.y),this.lowerBound.z=Math.min(this.lowerBound.z,t.lowerBound.z),this.upperBound.z=Math.max(this.upperBound.z,t.upperBound.z)}overlaps(t){const e=this.lowerBound,n=this.upperBound,i=t.lowerBound,r=t.upperBound,o=i.x<=n.x&&n.x<=r.x||e.x<=r.x&&r.x<=n.x,a=i.y<=n.y&&n.y<=r.y||e.y<=r.y&&r.y<=n.y,l=i.z<=n.z&&n.z<=r.z||e.z<=r.z&&r.z<=n.z;return o&&a&&l}volume(){const t=this.lowerBound,e=this.upperBound;return(e.x-t.x)*(e.y-t.y)*(e.z-t.z)}contains(t){const e=this.lowerBound,n=this.upperBound,i=t.lowerBound,r=t.upperBound;return e.x<=i.x&&n.x>=r.x&&e.y<=i.y&&n.y>=r.y&&e.z<=i.z&&n.z>=r.z}getCorners(t,e,n,i,r,o,a,l){const c=this.lowerBound,h=this.upperBound;t.copy(c),e.set(h.x,c.y,c.z),n.set(h.x,h.y,c.z),i.set(c.x,h.y,h.z),r.set(h.x,c.y,h.z),o.set(c.x,h.y,c.z),a.set(c.x,c.y,h.z),l.copy(h)}toLocalFrame(t,e){const n=pu,i=n[0],r=n[1],o=n[2],a=n[3],l=n[4],c=n[5],h=n[6],u=n[7];this.getCorners(i,r,o,a,l,c,h,u);for(let d=0;d!==8;d++){const f=n[d];t.pointToLocal(f,f)}return e.setFromPoints(n)}toWorldFrame(t,e){const n=pu,i=n[0],r=n[1],o=n[2],a=n[3],l=n[4],c=n[5],h=n[6],u=n[7];this.getCorners(i,r,o,a,l,c,h,u);for(let d=0;d!==8;d++){const f=n[d];t.pointToWorld(f,f)}return e.setFromPoints(n)}overlapsRay(t){const{direction:e,from:n}=t,i=1/e.x,r=1/e.y,o=1/e.z,a=(this.lowerBound.x-n.x)*i,l=(this.upperBound.x-n.x)*i,c=(this.lowerBound.y-n.y)*r,h=(this.upperBound.y-n.y)*r,u=(this.lowerBound.z-n.z)*o,d=(this.upperBound.z-n.z)*o,f=Math.max(Math.max(Math.min(a,l),Math.min(c,h)),Math.min(u,d)),g=Math.min(Math.min(Math.max(a,l),Math.max(c,h)),Math.max(u,d));return!(g<0||f>g)}}const fu=new E,pu=[new E,new E,new E,new E,new E,new E,new E,new E];class mu{constructor(){this.matrix=[]}get(t,e){let{index:n}=t,{index:i}=e;if(i>n){const r=i;i=n,n=r}return this.matrix[(n*(n+1)>>1)+i-1]}set(t,e,n){let{index:i}=t,{index:r}=e;if(r>i){const o=r;r=i,i=o}this.matrix[(i*(i+1)>>1)+r-1]=n?1:0}reset(){for(let t=0,e=this.matrix.length;t!==e;t++)this.matrix[t]=0}setNumObjects(t){this.matrix.length=t*(t-1)>>1}}class qf{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;return n[t]===void 0&&(n[t]=[]),n[t].includes(e)||n[t].push(e),this}hasEventListener(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return!!(n[t]!==void 0&&n[t].includes(e))}hasAnyEventListener(t){return this._listeners===void 0?!1:this._listeners[t]!==void 0}removeEventListener(t,e){if(this._listeners===void 0)return this;const n=this._listeners;if(n[t]===void 0)return this;const i=n[t].indexOf(e);return i!==-1&&n[t].splice(i,1),this}dispatchEvent(t){if(this._listeners===void 0)return this;const n=this._listeners[t.type];if(n!==void 0){t.target=this;for(let i=0,r=n.length;i<r;i++)n[i].call(this,t)}return this}}class le{constructor(t,e,n,i){t===void 0&&(t=0),e===void 0&&(e=0),n===void 0&&(n=0),i===void 0&&(i=1),this.x=t,this.y=e,this.z=n,this.w=i}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}toString(){return`${this.x},${this.y},${this.z},${this.w}`}toArray(){return[this.x,this.y,this.z,this.w]}setFromAxisAngle(t,e){const n=Math.sin(e*.5);return this.x=t.x*n,this.y=t.y*n,this.z=t.z*n,this.w=Math.cos(e*.5),this}toAxisAngle(t){t===void 0&&(t=new E),this.normalize();const e=2*Math.acos(this.w),n=Math.sqrt(1-this.w*this.w);return n<.001?(t.x=this.x,t.y=this.y,t.z=this.z):(t.x=this.x/n,t.y=this.y/n,t.z=this.z/n),[t,e]}setFromVectors(t,e){if(t.isAntiparallelTo(e)){const n=nb,i=ib;t.tangents(n,i),this.setFromAxisAngle(n,Math.PI)}else{const n=t.cross(e);this.x=n.x,this.y=n.y,this.z=n.z,this.w=Math.sqrt(t.length()**2*e.length()**2)+t.dot(e),this.normalize()}return this}mult(t,e){e===void 0&&(e=new le);const n=this.x,i=this.y,r=this.z,o=this.w,a=t.x,l=t.y,c=t.z,h=t.w;return e.x=n*h+o*a+i*c-r*l,e.y=i*h+o*l+r*a-n*c,e.z=r*h+o*c+n*l-i*a,e.w=o*h-n*a-i*l-r*c,e}inverse(t){t===void 0&&(t=new le);const e=this.x,n=this.y,i=this.z,r=this.w;this.conjugate(t);const o=1/(e*e+n*n+i*i+r*r);return t.x*=o,t.y*=o,t.z*=o,t.w*=o,t}conjugate(t){return t===void 0&&(t=new le),t.x=-this.x,t.y=-this.y,t.z=-this.z,t.w=this.w,t}normalize(){let t=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return t===0?(this.x=0,this.y=0,this.z=0,this.w=0):(t=1/t,this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}normalizeFast(){const t=(3-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2;return t===0?(this.x=0,this.y=0,this.z=0,this.w=0):(this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}vmult(t,e){e===void 0&&(e=new E);const n=t.x,i=t.y,r=t.z,o=this.x,a=this.y,l=this.z,c=this.w,h=c*n+a*r-l*i,u=c*i+l*n-o*r,d=c*r+o*i-a*n,f=-o*n-a*i-l*r;return e.x=h*c+f*-o+u*-l-d*-a,e.y=u*c+f*-a+d*-o-h*-l,e.z=d*c+f*-l+h*-a-u*-o,e}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this}toEuler(t,e){e===void 0&&(e="YZX");let n,i,r;const o=this.x,a=this.y,l=this.z,c=this.w;switch(e){case"YZX":const h=o*a+l*c;if(h>.499&&(n=2*Math.atan2(o,c),i=Math.PI/2,r=0),h<-.499&&(n=-2*Math.atan2(o,c),i=-Math.PI/2,r=0),n===void 0){const u=o*o,d=a*a,f=l*l;n=Math.atan2(2*a*c-2*o*l,1-2*d-2*f),i=Math.asin(2*h),r=Math.atan2(2*o*c-2*a*l,1-2*u-2*f)}break;default:throw new Error(`Euler order ${e} not supported yet.`)}t.y=n,t.z=i,t.x=r}setFromEuler(t,e,n,i){i===void 0&&(i="XYZ");const r=Math.cos(t/2),o=Math.cos(e/2),a=Math.cos(n/2),l=Math.sin(t/2),c=Math.sin(e/2),h=Math.sin(n/2);return i==="XYZ"?(this.x=l*o*a+r*c*h,this.y=r*c*a-l*o*h,this.z=r*o*h+l*c*a,this.w=r*o*a-l*c*h):i==="YXZ"?(this.x=l*o*a+r*c*h,this.y=r*c*a-l*o*h,this.z=r*o*h-l*c*a,this.w=r*o*a+l*c*h):i==="ZXY"?(this.x=l*o*a-r*c*h,this.y=r*c*a+l*o*h,this.z=r*o*h+l*c*a,this.w=r*o*a-l*c*h):i==="ZYX"?(this.x=l*o*a-r*c*h,this.y=r*c*a+l*o*h,this.z=r*o*h-l*c*a,this.w=r*o*a+l*c*h):i==="YZX"?(this.x=l*o*a+r*c*h,this.y=r*c*a+l*o*h,this.z=r*o*h-l*c*a,this.w=r*o*a-l*c*h):i==="XZY"&&(this.x=l*o*a-r*c*h,this.y=r*c*a-l*o*h,this.z=r*o*h+l*c*a,this.w=r*o*a+l*c*h),this}clone(){return new le(this.x,this.y,this.z,this.w)}slerp(t,e,n){n===void 0&&(n=new le);const i=this.x,r=this.y,o=this.z,a=this.w;let l=t.x,c=t.y,h=t.z,u=t.w,d,f,g,_,m;return f=i*l+r*c+o*h+a*u,f<0&&(f=-f,l=-l,c=-c,h=-h,u=-u),1-f>1e-6?(d=Math.acos(f),g=Math.sin(d),_=Math.sin((1-e)*d)/g,m=Math.sin(e*d)/g):(_=1-e,m=e),n.x=_*i+m*l,n.y=_*r+m*c,n.z=_*o+m*h,n.w=_*a+m*u,n}integrate(t,e,n,i){i===void 0&&(i=new le);const r=t.x*n.x,o=t.y*n.y,a=t.z*n.z,l=this.x,c=this.y,h=this.z,u=this.w,d=e*.5;return i.x+=d*(r*u+o*h-a*c),i.y+=d*(o*u+a*l-r*h),i.z+=d*(a*u+r*c-o*l),i.w+=d*(-r*l-o*c-a*h),i}}const nb=new E,ib=new E,sb={SPHERE:1,PLANE:2,BOX:4,COMPOUND:8,CONVEXPOLYHEDRON:16,HEIGHTFIELD:32,PARTICLE:64,CYLINDER:128,TRIMESH:256};class gt{constructor(t){t===void 0&&(t={}),this.id=gt.idCounter++,this.type=t.type||0,this.boundingSphereRadius=0,this.collisionResponse=t.collisionResponse?t.collisionResponse:!0,this.collisionFilterGroup=t.collisionFilterGroup!==void 0?t.collisionFilterGroup:1,this.collisionFilterMask=t.collisionFilterMask!==void 0?t.collisionFilterMask:-1,this.material=t.material?t.material:null,this.body=null}updateBoundingSphereRadius(){throw`computeBoundingSphereRadius() not implemented for shape type ${this.type}`}volume(){throw`volume() not implemented for shape type ${this.type}`}calculateLocalInertia(t,e){throw`calculateLocalInertia() not implemented for shape type ${this.type}`}calculateWorldAABB(t,e,n,i){throw`calculateWorldAABB() not implemented for shape type ${this.type}`}}gt.idCounter=0;gt.types=sb;class qt{constructor(t){t===void 0&&(t={}),this.position=new E,this.quaternion=new le,t.position&&this.position.copy(t.position),t.quaternion&&this.quaternion.copy(t.quaternion)}pointToLocal(t,e){return qt.pointToLocalFrame(this.position,this.quaternion,t,e)}pointToWorld(t,e){return qt.pointToWorldFrame(this.position,this.quaternion,t,e)}vectorToWorldFrame(t,e){return e===void 0&&(e=new E),this.quaternion.vmult(t,e),e}static pointToLocalFrame(t,e,n,i){return i===void 0&&(i=new E),n.vsub(t,i),e.conjugate(gu),gu.vmult(i,i),i}static pointToWorldFrame(t,e,n,i){return i===void 0&&(i=new E),e.vmult(n,i),i.vadd(t,i),i}static vectorToWorldFrame(t,e,n){return n===void 0&&(n=new E),t.vmult(e,n),n}static vectorToLocalFrame(t,e,n,i){return i===void 0&&(i=new E),e.w*=-1,e.vmult(n,i),e.w*=-1,i}}const gu=new le;class mi extends gt{constructor(t){t===void 0&&(t={});const{vertices:e=[],faces:n=[],normals:i=[],axes:r,boundingSphereRadius:o}=t;super({type:gt.types.CONVEXPOLYHEDRON}),this.vertices=e,this.faces=n,this.faceNormals=i,this.faceNormals.length===0&&this.computeNormals(),o?this.boundingSphereRadius=o:this.updateBoundingSphereRadius(),this.worldVertices=[],this.worldVerticesNeedsUpdate=!0,this.worldFaceNormals=[],this.worldFaceNormalsNeedsUpdate=!0,this.uniqueAxes=r?r.slice():null,this.uniqueEdges=[],this.computeEdges()}computeEdges(){const t=this.faces,e=this.vertices,n=this.uniqueEdges;n.length=0;const i=new E;for(let r=0;r!==t.length;r++){const o=t[r],a=o.length;for(let l=0;l!==a;l++){const c=(l+1)%a;e[o[l]].vsub(e[o[c]],i),i.normalize();let h=!1;for(let u=0;u!==n.length;u++)if(n[u].almostEquals(i)||n[u].almostEquals(i)){h=!0;break}h||n.push(i.clone())}}}computeNormals(){this.faceNormals.length=this.faces.length;for(let t=0;t<this.faces.length;t++){for(let i=0;i<this.faces[t].length;i++)if(!this.vertices[this.faces[t][i]])throw new Error(`Vertex ${this.faces[t][i]} not found!`);const e=this.faceNormals[t]||new E;this.getFaceNormal(t,e),e.negate(e),this.faceNormals[t]=e;const n=this.vertices[this.faces[t][0]];if(e.dot(n)<0){console.error(`.faceNormals[${t}] = Vec3(${e.toString()}) looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.`);for(let i=0;i<this.faces[t].length;i++)console.warn(`.vertices[${this.faces[t][i]}] = Vec3(${this.vertices[this.faces[t][i]].toString()})`)}}}getFaceNormal(t,e){const n=this.faces[t],i=this.vertices[n[0]],r=this.vertices[n[1]],o=this.vertices[n[2]];mi.computeNormal(i,r,o,e)}static computeNormal(t,e,n,i){const r=new E,o=new E;e.vsub(t,o),n.vsub(e,r),r.cross(o,i),i.isZero()||i.normalize()}clipAgainstHull(t,e,n,i,r,o,a,l,c){const h=new E;let u=-1,d=-Number.MAX_VALUE;for(let g=0;g<n.faces.length;g++){h.copy(n.faceNormals[g]),r.vmult(h,h);const _=h.dot(o);_>d&&(d=_,u=g)}const f=[];for(let g=0;g<n.faces[u].length;g++){const _=n.vertices[n.faces[u][g]],m=new E;m.copy(_),r.vmult(m,m),i.vadd(m,m),f.push(m)}u>=0&&this.clipFaceAgainstHull(o,t,e,f,a,l,c)}findSeparatingAxis(t,e,n,i,r,o,a,l){const c=new E,h=new E,u=new E,d=new E,f=new E,g=new E;let _=Number.MAX_VALUE;const m=this;if(m.uniqueAxes)for(let p=0;p!==m.uniqueAxes.length;p++){n.vmult(m.uniqueAxes[p],c);const x=m.testSepAxis(c,t,e,n,i,r);if(x===!1)return!1;x<_&&(_=x,o.copy(c))}else{const p=a?a.length:m.faces.length;for(let x=0;x<p;x++){const w=a?a[x]:x;c.copy(m.faceNormals[w]),n.vmult(c,c);const v=m.testSepAxis(c,t,e,n,i,r);if(v===!1)return!1;v<_&&(_=v,o.copy(c))}}if(t.uniqueAxes)for(let p=0;p!==t.uniqueAxes.length;p++){r.vmult(t.uniqueAxes[p],h);const x=m.testSepAxis(h,t,e,n,i,r);if(x===!1)return!1;x<_&&(_=x,o.copy(h))}else{const p=l?l.length:t.faces.length;for(let x=0;x<p;x++){const w=l?l[x]:x;h.copy(t.faceNormals[w]),r.vmult(h,h);const v=m.testSepAxis(h,t,e,n,i,r);if(v===!1)return!1;v<_&&(_=v,o.copy(h))}}for(let p=0;p!==m.uniqueEdges.length;p++){n.vmult(m.uniqueEdges[p],d);for(let x=0;x!==t.uniqueEdges.length;x++)if(r.vmult(t.uniqueEdges[x],f),d.cross(f,g),!g.almostZero()){g.normalize();const w=m.testSepAxis(g,t,e,n,i,r);if(w===!1)return!1;w<_&&(_=w,o.copy(g))}}return i.vsub(e,u),u.dot(o)>0&&o.negate(o),!0}testSepAxis(t,e,n,i,r,o){const a=this;mi.project(a,t,n,i,il),mi.project(e,t,r,o,sl);const l=il[0],c=il[1],h=sl[0],u=sl[1];if(l<u||h<c)return!1;const d=l-u,f=h-c;return d<f?d:f}calculateLocalInertia(t,e){const n=new E,i=new E;this.computeLocalAABB(i,n);const r=n.x-i.x,o=n.y-i.y,a=n.z-i.z;e.x=1/12*t*(2*o*2*o+2*a*2*a),e.y=1/12*t*(2*r*2*r+2*a*2*a),e.z=1/12*t*(2*o*2*o+2*r*2*r)}getPlaneConstantOfFace(t){const e=this.faces[t],n=this.faceNormals[t],i=this.vertices[e[0]];return-n.dot(i)}clipFaceAgainstHull(t,e,n,i,r,o,a){const l=new E,c=new E,h=new E,u=new E,d=new E,f=new E,g=new E,_=new E,m=this,p=[],x=i,w=p;let v=-1,y=Number.MAX_VALUE;for(let M=0;M<m.faces.length;M++){l.copy(m.faceNormals[M]),n.vmult(l,l);const L=l.dot(t);L<y&&(y=L,v=M)}if(v<0)return;const S=m.faces[v];S.connectedFaces=[];for(let M=0;M<m.faces.length;M++)for(let L=0;L<m.faces[M].length;L++)S.indexOf(m.faces[M][L])!==-1&&M!==v&&S.connectedFaces.indexOf(M)===-1&&S.connectedFaces.push(M);const T=S.length;for(let M=0;M<T;M++){const L=m.vertices[S[M]],I=m.vertices[S[(M+1)%T]];L.vsub(I,c),h.copy(c),n.vmult(h,h),e.vadd(h,h),u.copy(this.faceNormals[v]),n.vmult(u,u),e.vadd(u,u),h.cross(u,d),d.negate(d),f.copy(L),n.vmult(f,f),e.vadd(f,f);const C=S.connectedFaces[M];g.copy(this.faceNormals[C]);const D=this.getPlaneConstantOfFace(C);_.copy(g),n.vmult(_,_);const P=D-_.dot(e);for(this.clipFaceAgainstPlane(x,w,_,P);x.length;)x.shift();for(;w.length;)x.push(w.shift())}g.copy(this.faceNormals[v]);const A=this.getPlaneConstantOfFace(v);_.copy(g),n.vmult(_,_);const b=A-_.dot(e);for(let M=0;M<x.length;M++){let L=_.dot(x[M])+b;if(L<=r&&(console.log(`clamped: depth=${L} to minDist=${r}`),L=r),L<=o){const I=x[M];if(L<=1e-6){const C={point:I,normal:_,depth:L};a.push(C)}}}}clipFaceAgainstPlane(t,e,n,i){let r,o;const a=t.length;if(a<2)return e;let l=t[t.length-1],c=t[0];r=n.dot(l)+i;for(let h=0;h<a;h++){if(c=t[h],o=n.dot(c)+i,r<0)if(o<0){const u=new E;u.copy(c),e.push(u)}else{const u=new E;l.lerp(c,r/(r-o),u),e.push(u)}else if(o<0){const u=new E;l.lerp(c,r/(r-o),u),e.push(u),e.push(c)}l=c,r=o}return e}computeWorldVertices(t,e){for(;this.worldVertices.length<this.vertices.length;)this.worldVertices.push(new E);const n=this.vertices,i=this.worldVertices;for(let r=0;r!==this.vertices.length;r++)e.vmult(n[r],i[r]),t.vadd(i[r],i[r]);this.worldVerticesNeedsUpdate=!1}computeLocalAABB(t,e){const n=this.vertices;t.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),e.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(let i=0;i<this.vertices.length;i++){const r=n[i];r.x<t.x?t.x=r.x:r.x>e.x&&(e.x=r.x),r.y<t.y?t.y=r.y:r.y>e.y&&(e.y=r.y),r.z<t.z?t.z=r.z:r.z>e.z&&(e.z=r.z)}}computeWorldFaceNormals(t){const e=this.faceNormals.length;for(;this.worldFaceNormals.length<e;)this.worldFaceNormals.push(new E);const n=this.faceNormals,i=this.worldFaceNormals;for(let r=0;r!==e;r++)t.vmult(n[r],i[r]);this.worldFaceNormalsNeedsUpdate=!1}updateBoundingSphereRadius(){let t=0;const e=this.vertices;for(let n=0;n!==e.length;n++){const i=e[n].lengthSquared();i>t&&(t=i)}this.boundingSphereRadius=Math.sqrt(t)}calculateWorldAABB(t,e,n,i){const r=this.vertices;let o,a,l,c,h,u,d=new E;for(let f=0;f<r.length;f++){d.copy(r[f]),e.vmult(d,d),t.vadd(d,d);const g=d;(o===void 0||g.x<o)&&(o=g.x),(c===void 0||g.x>c)&&(c=g.x),(a===void 0||g.y<a)&&(a=g.y),(h===void 0||g.y>h)&&(h=g.y),(l===void 0||g.z<l)&&(l=g.z),(u===void 0||g.z>u)&&(u=g.z)}n.set(o,a,l),i.set(c,h,u)}volume(){return 4*Math.PI*this.boundingSphereRadius/3}getAveragePointLocal(t){t===void 0&&(t=new E);const e=this.vertices;for(let n=0;n<e.length;n++)t.vadd(e[n],t);return t.scale(1/e.length,t),t}transformAllPoints(t,e){const n=this.vertices.length,i=this.vertices;if(e){for(let r=0;r<n;r++){const o=i[r];e.vmult(o,o)}for(let r=0;r<this.faceNormals.length;r++){const o=this.faceNormals[r];e.vmult(o,o)}}if(t)for(let r=0;r<n;r++){const o=i[r];o.vadd(t,o)}}pointIsInside(t){const e=this.vertices,n=this.faces,i=this.faceNormals,r=null,o=new E;this.getAveragePointLocal(o);for(let a=0;a<this.faces.length;a++){let l=i[a];const c=e[n[a][0]],h=new E;t.vsub(c,h);const u=l.dot(h),d=new E;o.vsub(c,d);const f=l.dot(d);if(u<0&&f>0||u>0&&f<0)return!1}return r?1:-1}static project(t,e,n,i,r){const o=t.vertices.length,a=rb;let l=0,c=0;const h=ob,u=t.vertices;h.setZero(),qt.vectorToLocalFrame(n,i,e,a),qt.pointToLocalFrame(n,i,h,h);const d=h.dot(a);c=l=u[0].dot(a);for(let f=1;f<o;f++){const g=u[f].dot(a);g>l&&(l=g),g<c&&(c=g)}if(c-=d,l-=d,c>l){const f=c;c=l,l=f}r[0]=l,r[1]=c}}const il=[],sl=[];new E;const rb=new E,ob=new E;class Us extends gt{constructor(t){super({type:gt.types.BOX}),this.halfExtents=t,this.convexPolyhedronRepresentation=null,this.updateConvexPolyhedronRepresentation(),this.updateBoundingSphereRadius()}updateConvexPolyhedronRepresentation(){const t=this.halfExtents.x,e=this.halfExtents.y,n=this.halfExtents.z,i=E,r=[new i(-t,-e,-n),new i(t,-e,-n),new i(t,e,-n),new i(-t,e,-n),new i(-t,-e,n),new i(t,-e,n),new i(t,e,n),new i(-t,e,n)],o=[[3,2,1,0],[4,5,6,7],[5,4,0,1],[2,3,7,6],[0,4,7,3],[1,2,6,5]],a=[new i(0,0,1),new i(0,1,0),new i(1,0,0)],l=new mi({vertices:r,faces:o,axes:a});this.convexPolyhedronRepresentation=l,l.material=this.material}calculateLocalInertia(t,e){return e===void 0&&(e=new E),Us.calculateInertia(this.halfExtents,t,e),e}static calculateInertia(t,e,n){const i=t;n.x=1/12*e*(2*i.y*2*i.y+2*i.z*2*i.z),n.y=1/12*e*(2*i.x*2*i.x+2*i.z*2*i.z),n.z=1/12*e*(2*i.y*2*i.y+2*i.x*2*i.x)}getSideNormals(t,e){const n=t,i=this.halfExtents;if(n[0].set(i.x,0,0),n[1].set(0,i.y,0),n[2].set(0,0,i.z),n[3].set(-i.x,0,0),n[4].set(0,-i.y,0),n[5].set(0,0,-i.z),e!==void 0)for(let r=0;r!==n.length;r++)e.vmult(n[r],n[r]);return n}volume(){return 8*this.halfExtents.x*this.halfExtents.y*this.halfExtents.z}updateBoundingSphereRadius(){this.boundingSphereRadius=this.halfExtents.length()}forEachWorldCorner(t,e,n){const i=this.halfExtents,r=[[i.x,i.y,i.z],[-i.x,i.y,i.z],[-i.x,-i.y,i.z],[-i.x,-i.y,-i.z],[i.x,-i.y,-i.z],[i.x,i.y,-i.z],[-i.x,i.y,-i.z],[i.x,-i.y,i.z]];for(let o=0;o<r.length;o++)ci.set(r[o][0],r[o][1],r[o][2]),e.vmult(ci,ci),t.vadd(ci,ci),n(ci.x,ci.y,ci.z)}calculateWorldAABB(t,e,n,i){const r=this.halfExtents;An[0].set(r.x,r.y,r.z),An[1].set(-r.x,r.y,r.z),An[2].set(-r.x,-r.y,r.z),An[3].set(-r.x,-r.y,-r.z),An[4].set(r.x,-r.y,-r.z),An[5].set(r.x,r.y,-r.z),An[6].set(-r.x,r.y,-r.z),An[7].set(r.x,-r.y,r.z);const o=An[0];e.vmult(o,o),t.vadd(o,o),i.copy(o),n.copy(o);for(let a=1;a<8;a++){const l=An[a];e.vmult(l,l),t.vadd(l,l);const c=l.x,h=l.y,u=l.z;c>i.x&&(i.x=c),h>i.y&&(i.y=h),u>i.z&&(i.z=u),c<n.x&&(n.x=c),h<n.y&&(n.y=h),u<n.z&&(n.z=u)}}}const ci=new E,An=[new E,new E,new E,new E,new E,new E,new E,new E],uc={DYNAMIC:1,STATIC:2,KINEMATIC:4},dc={AWAKE:0,SLEEPY:1,SLEEPING:2};class ft extends qf{constructor(t){t===void 0&&(t={}),super(),this.id=ft.idCounter++,this.index=-1,this.world=null,this.vlambda=new E,this.collisionFilterGroup=typeof t.collisionFilterGroup=="number"?t.collisionFilterGroup:1,this.collisionFilterMask=typeof t.collisionFilterMask=="number"?t.collisionFilterMask:-1,this.collisionResponse=typeof t.collisionResponse=="boolean"?t.collisionResponse:!0,this.position=new E,this.previousPosition=new E,this.interpolatedPosition=new E,this.initPosition=new E,t.position&&(this.position.copy(t.position),this.previousPosition.copy(t.position),this.interpolatedPosition.copy(t.position),this.initPosition.copy(t.position)),this.velocity=new E,t.velocity&&this.velocity.copy(t.velocity),this.initVelocity=new E,this.force=new E;const e=typeof t.mass=="number"?t.mass:0;this.mass=e,this.invMass=e>0?1/e:0,this.material=t.material||null,this.linearDamping=typeof t.linearDamping=="number"?t.linearDamping:.01,this.type=e<=0?ft.STATIC:ft.DYNAMIC,typeof t.type==typeof ft.STATIC&&(this.type=t.type),this.allowSleep=typeof t.allowSleep<"u"?t.allowSleep:!0,this.sleepState=ft.AWAKE,this.sleepSpeedLimit=typeof t.sleepSpeedLimit<"u"?t.sleepSpeedLimit:.1,this.sleepTimeLimit=typeof t.sleepTimeLimit<"u"?t.sleepTimeLimit:1,this.timeLastSleepy=0,this.wakeUpAfterNarrowphase=!1,this.torque=new E,this.quaternion=new le,this.initQuaternion=new le,this.previousQuaternion=new le,this.interpolatedQuaternion=new le,t.quaternion&&(this.quaternion.copy(t.quaternion),this.initQuaternion.copy(t.quaternion),this.previousQuaternion.copy(t.quaternion),this.interpolatedQuaternion.copy(t.quaternion)),this.angularVelocity=new E,t.angularVelocity&&this.angularVelocity.copy(t.angularVelocity),this.initAngularVelocity=new E,this.shapes=[],this.shapeOffsets=[],this.shapeOrientations=[],this.inertia=new E,this.invInertia=new E,this.invInertiaWorld=new vn,this.invMassSolve=0,this.invInertiaSolve=new E,this.invInertiaWorldSolve=new vn,this.fixedRotation=typeof t.fixedRotation<"u"?t.fixedRotation:!1,this.angularDamping=typeof t.angularDamping<"u"?t.angularDamping:.01,this.linearFactor=new E(1,1,1),t.linearFactor&&this.linearFactor.copy(t.linearFactor),this.angularFactor=new E(1,1,1),t.angularFactor&&this.angularFactor.copy(t.angularFactor),this.aabb=new en,this.aabbNeedsUpdate=!0,this.boundingRadius=0,this.wlambda=new E,this.isTrigger=!!t.isTrigger,t.shape&&this.addShape(t.shape),this.updateMassProperties()}wakeUp(){const t=this.sleepState;this.sleepState=ft.AWAKE,this.wakeUpAfterNarrowphase=!1,t===ft.SLEEPING&&this.dispatchEvent(ft.wakeupEvent)}sleep(){this.sleepState=ft.SLEEPING,this.velocity.set(0,0,0),this.angularVelocity.set(0,0,0),this.wakeUpAfterNarrowphase=!1}sleepTick(t){if(this.allowSleep){const e=this.sleepState,n=this.velocity.lengthSquared()+this.angularVelocity.lengthSquared(),i=this.sleepSpeedLimit**2;e===ft.AWAKE&&n<i?(this.sleepState=ft.SLEEPY,this.timeLastSleepy=t,this.dispatchEvent(ft.sleepyEvent)):e===ft.SLEEPY&&n>i?this.wakeUp():e===ft.SLEEPY&&t-this.timeLastSleepy>this.sleepTimeLimit&&(this.sleep(),this.dispatchEvent(ft.sleepEvent))}}updateSolveMassProperties(){this.sleepState===ft.SLEEPING||this.type===ft.KINEMATIC?(this.invMassSolve=0,this.invInertiaSolve.setZero(),this.invInertiaWorldSolve.setZero()):(this.invMassSolve=this.invMass,this.invInertiaSolve.copy(this.invInertia),this.invInertiaWorldSolve.copy(this.invInertiaWorld))}pointToLocalFrame(t,e){return e===void 0&&(e=new E),t.vsub(this.position,e),this.quaternion.conjugate().vmult(e,e),e}vectorToLocalFrame(t,e){return e===void 0&&(e=new E),this.quaternion.conjugate().vmult(t,e),e}pointToWorldFrame(t,e){return e===void 0&&(e=new E),this.quaternion.vmult(t,e),e.vadd(this.position,e),e}vectorToWorldFrame(t,e){return e===void 0&&(e=new E),this.quaternion.vmult(t,e),e}addShape(t,e,n){const i=new E,r=new le;return e&&i.copy(e),n&&r.copy(n),this.shapes.push(t),this.shapeOffsets.push(i),this.shapeOrientations.push(r),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=this,this}removeShape(t){const e=this.shapes.indexOf(t);return e===-1?(console.warn("Shape does not belong to the body"),this):(this.shapes.splice(e,1),this.shapeOffsets.splice(e,1),this.shapeOrientations.splice(e,1),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=null,this)}updateBoundingRadius(){const t=this.shapes,e=this.shapeOffsets,n=t.length;let i=0;for(let r=0;r!==n;r++){const o=t[r];o.updateBoundingSphereRadius();const a=e[r].length(),l=o.boundingSphereRadius;a+l>i&&(i=a+l)}this.boundingRadius=i}updateAABB(){const t=this.shapes,e=this.shapeOffsets,n=this.shapeOrientations,i=t.length,r=ab,o=lb,a=this.quaternion,l=this.aabb,c=cb;for(let h=0;h!==i;h++){const u=t[h];a.vmult(e[h],r),r.vadd(this.position,r),a.mult(n[h],o),u.calculateWorldAABB(r,o,c.lowerBound,c.upperBound),h===0?l.copy(c):l.extend(c)}this.aabbNeedsUpdate=!1}updateInertiaWorld(t){const e=this.invInertia;if(!(e.x===e.y&&e.y===e.z&&!t)){const n=hb,i=ub;n.setRotationFromQuaternion(this.quaternion),n.transpose(i),n.scale(e,n),n.mmult(i,this.invInertiaWorld)}}applyForce(t,e){if(e===void 0&&(e=new E),this.type!==ft.DYNAMIC)return;this.sleepState===ft.SLEEPING&&this.wakeUp();const n=fb;e.cross(t,n),this.force.vadd(t,this.force),this.torque.vadd(n,this.torque)}applyLocalForce(t,e){if(e===void 0&&(e=new E),this.type!==ft.DYNAMIC)return;const n=pb,i=mb;this.vectorToWorldFrame(t,n),this.vectorToWorldFrame(e,i),this.applyForce(n,i)}applyTorque(t){this.type===ft.DYNAMIC&&(this.sleepState===ft.SLEEPING&&this.wakeUp(),this.torque.vadd(t,this.torque))}applyImpulse(t,e){if(e===void 0&&(e=new E),this.type!==ft.DYNAMIC)return;this.sleepState===ft.SLEEPING&&this.wakeUp();const n=e,i=gb;i.copy(t),i.scale(this.invMass,i),this.velocity.vadd(i,this.velocity);const r=_b;n.cross(t,r),this.invInertiaWorld.vmult(r,r),this.angularVelocity.vadd(r,this.angularVelocity)}applyLocalImpulse(t,e){if(e===void 0&&(e=new E),this.type!==ft.DYNAMIC)return;const n=xb,i=vb;this.vectorToWorldFrame(t,n),this.vectorToWorldFrame(e,i),this.applyImpulse(n,i)}updateMassProperties(){const t=yb;this.invMass=this.mass>0?1/this.mass:0;const e=this.inertia,n=this.fixedRotation;this.updateAABB(),t.set((this.aabb.upperBound.x-this.aabb.lowerBound.x)/2,(this.aabb.upperBound.y-this.aabb.lowerBound.y)/2,(this.aabb.upperBound.z-this.aabb.lowerBound.z)/2),Us.calculateInertia(t,this.mass,e),this.invInertia.set(e.x>0&&!n?1/e.x:0,e.y>0&&!n?1/e.y:0,e.z>0&&!n?1/e.z:0),this.updateInertiaWorld(!0)}getVelocityAtWorldPoint(t,e){const n=new E;return t.vsub(this.position,n),this.angularVelocity.cross(n,e),this.velocity.vadd(e,e),e}integrate(t,e,n){if(this.previousPosition.copy(this.position),this.previousQuaternion.copy(this.quaternion),!(this.type===ft.DYNAMIC||this.type===ft.KINEMATIC)||this.sleepState===ft.SLEEPING)return;const i=this.velocity,r=this.angularVelocity,o=this.position,a=this.force,l=this.torque,c=this.quaternion,h=this.invMass,u=this.invInertiaWorld,d=this.linearFactor,f=h*t;i.x+=a.x*f*d.x,i.y+=a.y*f*d.y,i.z+=a.z*f*d.z;const g=u.elements,_=this.angularFactor,m=l.x*_.x,p=l.y*_.y,x=l.z*_.z;r.x+=t*(g[0]*m+g[1]*p+g[2]*x),r.y+=t*(g[3]*m+g[4]*p+g[5]*x),r.z+=t*(g[6]*m+g[7]*p+g[8]*x),o.x+=i.x*t,o.y+=i.y*t,o.z+=i.z*t,c.integrate(this.angularVelocity,t,this.angularFactor,c),e&&(n?c.normalizeFast():c.normalize()),this.aabbNeedsUpdate=!0,this.updateInertiaWorld()}}ft.idCounter=0;ft.COLLIDE_EVENT_NAME="collide";ft.DYNAMIC=uc.DYNAMIC;ft.STATIC=uc.STATIC;ft.KINEMATIC=uc.KINEMATIC;ft.AWAKE=dc.AWAKE;ft.SLEEPY=dc.SLEEPY;ft.SLEEPING=dc.SLEEPING;ft.wakeupEvent={type:"wakeup"};ft.sleepyEvent={type:"sleepy"};ft.sleepEvent={type:"sleep"};const ab=new E,lb=new le,cb=new en,hb=new vn,ub=new vn,db=new vn,fb=new E,pb=new E,mb=new E,gb=new E,_b=new E,xb=new E,vb=new E,yb=new E;class jf{constructor(){this.world=null,this.useBoundingBoxes=!1,this.dirty=!0}collisionPairs(t,e,n){throw new Error("collisionPairs not implemented for this BroadPhase class!")}needBroadphaseCollision(t,e){return!(!(t.collisionFilterGroup&e.collisionFilterMask)||!(e.collisionFilterGroup&t.collisionFilterMask)||(t.type&ft.STATIC||t.sleepState===ft.SLEEPING)&&(e.type&ft.STATIC||e.sleepState===ft.SLEEPING))}intersectionTest(t,e,n,i){this.useBoundingBoxes?this.doBoundingBoxBroadphase(t,e,n,i):this.doBoundingSphereBroadphase(t,e,n,i)}doBoundingSphereBroadphase(t,e,n,i){const r=bb;e.position.vsub(t.position,r);const o=(t.boundingRadius+e.boundingRadius)**2;r.lengthSquared()<o&&(n.push(t),i.push(e))}doBoundingBoxBroadphase(t,e,n,i){t.aabbNeedsUpdate&&t.updateAABB(),e.aabbNeedsUpdate&&e.updateAABB(),t.aabb.overlaps(e.aabb)&&(n.push(t),i.push(e))}makePairsUnique(t,e){const n=Mb,i=wb,r=Sb,o=t.length;for(let a=0;a!==o;a++)i[a]=t[a],r[a]=e[a];t.length=0,e.length=0;for(let a=0;a!==o;a++){const l=i[a].id,c=r[a].id,h=l<c?`${l},${c}`:`${c},${l}`;n[h]=a,n.keys.push(h)}for(let a=0;a!==n.keys.length;a++){const l=n.keys.pop(),c=n[l];t.push(i[c]),e.push(r[c]),delete n[l]}}setWorld(t){}static boundingSphereCheck(t,e){const n=new E;t.position.vsub(e.position,n);const i=t.shapes[0],r=e.shapes[0];return Math.pow(i.boundingSphereRadius+r.boundingSphereRadius,2)>n.lengthSquared()}aabbQuery(t,e,n){return console.warn(".aabbQuery is not implemented in this Broadphase subclass."),[]}}const bb=new E;new E;new le;new E;const Mb={keys:[]},wb=[],Sb=[];new E;new E;new E;class Eb extends jf{constructor(){super()}collisionPairs(t,e,n){const i=t.bodies,r=i.length;let o,a;for(let l=0;l!==r;l++)for(let c=0;c!==l;c++)o=i[l],a=i[c],this.needBroadphaseCollision(o,a)&&this.intersectionTest(o,a,e,n)}aabbQuery(t,e,n){n===void 0&&(n=[]);for(let i=0;i<t.bodies.length;i++){const r=t.bodies[i];r.aabbNeedsUpdate&&r.updateAABB(),r.aabb.overlaps(e)&&n.push(r)}return n}}class Ko{constructor(){this.rayFromWorld=new E,this.rayToWorld=new E,this.hitNormalWorld=new E,this.hitPointWorld=new E,this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}reset(){this.rayFromWorld.setZero(),this.rayToWorld.setZero(),this.hitNormalWorld.setZero(),this.hitPointWorld.setZero(),this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}abort(){this.shouldStop=!0}set(t,e,n,i,r,o,a){this.rayFromWorld.copy(t),this.rayToWorld.copy(e),this.hitNormalWorld.copy(n),this.hitPointWorld.copy(i),this.shape=r,this.body=o,this.distance=a}}let Xf,Yf,$f,Kf,Zf,Jf,Qf;const fc={CLOSEST:1,ANY:2,ALL:4};Xf=gt.types.SPHERE;Yf=gt.types.PLANE;$f=gt.types.BOX;Kf=gt.types.CYLINDER;Zf=gt.types.CONVEXPOLYHEDRON;Jf=gt.types.HEIGHTFIELD;Qf=gt.types.TRIMESH;class xe{get[Xf](){return this._intersectSphere}get[Yf](){return this._intersectPlane}get[$f](){return this._intersectBox}get[Kf](){return this._intersectConvex}get[Zf](){return this._intersectConvex}get[Jf](){return this._intersectHeightfield}get[Qf](){return this._intersectTrimesh}constructor(t,e){t===void 0&&(t=new E),e===void 0&&(e=new E),this.from=t.clone(),this.to=e.clone(),this.direction=new E,this.precision=1e-4,this.checkCollisionResponse=!0,this.skipBackfaces=!1,this.collisionFilterMask=-1,this.collisionFilterGroup=-1,this.mode=xe.ANY,this.result=new Ko,this.hasHit=!1,this.callback=n=>{}}intersectWorld(t,e){return this.mode=e.mode||xe.ANY,this.result=e.result||new Ko,this.skipBackfaces=!!e.skipBackfaces,this.collisionFilterMask=typeof e.collisionFilterMask<"u"?e.collisionFilterMask:-1,this.collisionFilterGroup=typeof e.collisionFilterGroup<"u"?e.collisionFilterGroup:-1,this.checkCollisionResponse=typeof e.checkCollisionResponse<"u"?e.checkCollisionResponse:!0,e.from&&this.from.copy(e.from),e.to&&this.to.copy(e.to),this.callback=e.callback||(()=>{}),this.hasHit=!1,this.result.reset(),this.updateDirection(),this.getAABB(_u),rl.length=0,t.broadphase.aabbQuery(t,_u,rl),this.intersectBodies(rl),this.hasHit}intersectBody(t,e){e&&(this.result=e,this.updateDirection());const n=this.checkCollisionResponse;if(n&&!t.collisionResponse||!(this.collisionFilterGroup&t.collisionFilterMask)||!(t.collisionFilterGroup&this.collisionFilterMask))return;const i=Ab,r=Tb;for(let o=0,a=t.shapes.length;o<a;o++){const l=t.shapes[o];if(!(n&&!l.collisionResponse)&&(t.quaternion.mult(t.shapeOrientations[o],r),t.quaternion.vmult(t.shapeOffsets[o],i),i.vadd(t.position,i),this.intersectShape(l,r,i,t),this.result.shouldStop))break}}intersectBodies(t,e){e&&(this.result=e,this.updateDirection());for(let n=0,i=t.length;!this.result.shouldStop&&n<i;n++)this.intersectBody(t[n])}updateDirection(){this.to.vsub(this.from,this.direction),this.direction.normalize()}intersectShape(t,e,n,i){const r=this.from;if(Vb(r,this.direction,n)>t.boundingSphereRadius)return;const a=this[t.type];a&&a.call(this,t,e,n,i,t)}_intersectBox(t,e,n,i,r){return this._intersectConvex(t.convexPolyhedronRepresentation,e,n,i,r)}_intersectPlane(t,e,n,i,r){const o=this.from,a=this.to,l=this.direction,c=new E(0,0,1);e.vmult(c,c);const h=new E;o.vsub(n,h);const u=h.dot(c);a.vsub(n,h);const d=h.dot(c);if(u*d>0||o.distanceTo(a)<u)return;const f=c.dot(l);if(Math.abs(f)<this.precision)return;const g=new E,_=new E,m=new E;o.vsub(n,g);const p=-c.dot(g)/f;l.scale(p,_),o.vadd(_,m),this.reportIntersection(c,m,r,i,-1)}getAABB(t){const{lowerBound:e,upperBound:n}=t,i=this.to,r=this.from;e.x=Math.min(i.x,r.x),e.y=Math.min(i.y,r.y),e.z=Math.min(i.z,r.z),n.x=Math.max(i.x,r.x),n.y=Math.max(i.y,r.y),n.z=Math.max(i.z,r.z)}_intersectHeightfield(t,e,n,i,r){t.data,t.elementSize;const o=Cb;o.from.copy(this.from),o.to.copy(this.to),qt.pointToLocalFrame(n,e,o.from,o.from),qt.pointToLocalFrame(n,e,o.to,o.to),o.updateDirection();const a=Pb;let l,c,h,u;l=c=0,h=u=t.data.length-1;const d=new en;o.getAABB(d),t.getIndexOfPosition(d.lowerBound.x,d.lowerBound.y,a,!0),l=Math.max(l,a[0]),c=Math.max(c,a[1]),t.getIndexOfPosition(d.upperBound.x,d.upperBound.y,a,!0),h=Math.min(h,a[0]+1),u=Math.min(u,a[1]+1);for(let f=l;f<h;f++)for(let g=c;g<u;g++){if(this.result.shouldStop)return;if(t.getAabbAtIndex(f,g,d),!!d.overlapsRay(o)){if(t.getConvexTrianglePillar(f,g,!1),qt.pointToWorldFrame(n,e,t.pillarOffset,vo),this._intersectConvex(t.pillarConvex,e,vo,i,r,xu),this.result.shouldStop)return;t.getConvexTrianglePillar(f,g,!0),qt.pointToWorldFrame(n,e,t.pillarOffset,vo),this._intersectConvex(t.pillarConvex,e,vo,i,r,xu)}}}_intersectSphere(t,e,n,i,r){const o=this.from,a=this.to,l=t.radius,c=(a.x-o.x)**2+(a.y-o.y)**2+(a.z-o.z)**2,h=2*((a.x-o.x)*(o.x-n.x)+(a.y-o.y)*(o.y-n.y)+(a.z-o.z)*(o.z-n.z)),u=(o.x-n.x)**2+(o.y-n.y)**2+(o.z-n.z)**2-l**2,d=h**2-4*c*u,f=Lb,g=Rb;if(!(d<0))if(d===0)o.lerp(a,d,f),f.vsub(n,g),g.normalize(),this.reportIntersection(g,f,r,i,-1);else{const _=(-h-Math.sqrt(d))/(2*c),m=(-h+Math.sqrt(d))/(2*c);if(_>=0&&_<=1&&(o.lerp(a,_,f),f.vsub(n,g),g.normalize(),this.reportIntersection(g,f,r,i,-1)),this.result.shouldStop)return;m>=0&&m<=1&&(o.lerp(a,m,f),f.vsub(n,g),g.normalize(),this.reportIntersection(g,f,r,i,-1))}}_intersectConvex(t,e,n,i,r,o){const a=Db,l=vu,c=o&&o.faceList||null,h=t.faces,u=t.vertices,d=t.faceNormals,f=this.direction,g=this.from,_=this.to,m=g.distanceTo(_),p=c?c.length:h.length,x=this.result;for(let w=0;!x.shouldStop&&w<p;w++){const v=c?c[w]:w,y=h[v],S=d[v],T=e,A=n;l.copy(u[y[0]]),T.vmult(l,l),l.vadd(A,l),l.vsub(g,l),T.vmult(S,a);const b=f.dot(a);if(Math.abs(b)<this.precision)continue;const M=a.dot(l)/b;if(!(M<0)){f.scale(M,Ve),Ve.vadd(g,Ve),fn.copy(u[y[0]]),T.vmult(fn,fn),A.vadd(fn,fn);for(let L=1;!x.shouldStop&&L<y.length-1;L++){Tn.copy(u[y[L]]),Cn.copy(u[y[L+1]]),T.vmult(Tn,Tn),T.vmult(Cn,Cn),A.vadd(Tn,Tn),A.vadd(Cn,Cn);const I=Ve.distanceTo(g);!(xe.pointInTriangle(Ve,fn,Tn,Cn)||xe.pointInTriangle(Ve,Tn,fn,Cn))||I>m||this.reportIntersection(a,Ve,r,i,v)}}}}_intersectTrimesh(t,e,n,i,r,o){const a=Ib,l=Bb,c=Ub,h=vu,u=Fb,d=Ob,f=zb,g=Nb,_=kb,m=t.indices;t.vertices;const p=this.from,x=this.to,w=this.direction;c.position.copy(n),c.quaternion.copy(e),qt.vectorToLocalFrame(n,e,w,u),qt.pointToLocalFrame(n,e,p,d),qt.pointToLocalFrame(n,e,x,f),f.x*=t.scale.x,f.y*=t.scale.y,f.z*=t.scale.z,d.x*=t.scale.x,d.y*=t.scale.y,d.z*=t.scale.z,f.vsub(d,u),u.normalize();const v=d.distanceSquared(f);t.tree.rayQuery(this,c,l);for(let y=0,S=l.length;!this.result.shouldStop&&y!==S;y++){const T=l[y];t.getNormal(T,a),t.getVertex(m[T*3],fn),fn.vsub(d,h);const A=u.dot(a),b=a.dot(h)/A;if(b<0)continue;u.scale(b,Ve),Ve.vadd(d,Ve),t.getVertex(m[T*3+1],Tn),t.getVertex(m[T*3+2],Cn);const M=Ve.distanceSquared(d);!(xe.pointInTriangle(Ve,Tn,fn,Cn)||xe.pointInTriangle(Ve,fn,Tn,Cn))||M>v||(qt.vectorToWorldFrame(e,a,_),qt.pointToWorldFrame(n,e,Ve,g),this.reportIntersection(_,g,r,i,T))}l.length=0}reportIntersection(t,e,n,i,r){const o=this.from,a=this.to,l=o.distanceTo(e),c=this.result;if(!(this.skipBackfaces&&t.dot(this.direction)>0))switch(c.hitFaceIndex=typeof r<"u"?r:-1,this.mode){case xe.ALL:this.hasHit=!0,c.set(o,a,t,e,n,i,l),c.hasHit=!0,this.callback(c);break;case xe.CLOSEST:(l<c.distance||!c.hasHit)&&(this.hasHit=!0,c.hasHit=!0,c.set(o,a,t,e,n,i,l));break;case xe.ANY:this.hasHit=!0,c.hasHit=!0,c.set(o,a,t,e,n,i,l),c.shouldStop=!0;break}}static pointInTriangle(t,e,n,i){i.vsub(e,Ui),n.vsub(e,Qs),t.vsub(e,ol);const r=Ui.dot(Ui),o=Ui.dot(Qs),a=Ui.dot(ol),l=Qs.dot(Qs),c=Qs.dot(ol);let h,u;return(h=l*a-o*c)>=0&&(u=r*c-o*a)>=0&&h+u<r*l-o*o}}xe.CLOSEST=fc.CLOSEST;xe.ANY=fc.ANY;xe.ALL=fc.ALL;const _u=new en,rl=[],Qs=new E,ol=new E,Ab=new E,Tb=new le,Ve=new E,fn=new E,Tn=new E,Cn=new E;new E;new Ko;const xu={faceList:[0]},vo=new E,Cb=new xe,Pb=[],Lb=new E,Rb=new E,Db=new E;new E;new E;const vu=new E,Ib=new E,Fb=new E,Ob=new E,zb=new E,kb=new E,Nb=new E;new en;const Bb=[],Ub=new qt,Ui=new E,yo=new E;function Vb(s,t,e){e.vsub(s,Ui);const n=Ui.dot(t);return t.scale(n,yo),yo.vadd(s,yo),e.distanceTo(yo)}class Rs extends jf{static checkBounds(t,e,n){let i,r;n===0?(i=t.position.x,r=e.position.x):n===1?(i=t.position.y,r=e.position.y):n===2&&(i=t.position.z,r=e.position.z);const o=t.boundingRadius,a=e.boundingRadius,l=i+o;return r-a<l}static insertionSortX(t){for(let e=1,n=t.length;e<n;e++){const i=t[e];let r;for(r=e-1;r>=0&&!(t[r].aabb.lowerBound.x<=i.aabb.lowerBound.x);r--)t[r+1]=t[r];t[r+1]=i}return t}static insertionSortY(t){for(let e=1,n=t.length;e<n;e++){const i=t[e];let r;for(r=e-1;r>=0&&!(t[r].aabb.lowerBound.y<=i.aabb.lowerBound.y);r--)t[r+1]=t[r];t[r+1]=i}return t}static insertionSortZ(t){for(let e=1,n=t.length;e<n;e++){const i=t[e];let r;for(r=e-1;r>=0&&!(t[r].aabb.lowerBound.z<=i.aabb.lowerBound.z);r--)t[r+1]=t[r];t[r+1]=i}return t}constructor(t){super(),this.axisList=[],this.world=null,this.axisIndex=0;const e=this.axisList;this._addBodyHandler=n=>{e.push(n.body)},this._removeBodyHandler=n=>{const i=e.indexOf(n.body);i!==-1&&e.splice(i,1)},t&&this.setWorld(t)}setWorld(t){this.axisList.length=0;for(let e=0;e<t.bodies.length;e++)this.axisList.push(t.bodies[e]);t.removeEventListener("addBody",this._addBodyHandler),t.removeEventListener("removeBody",this._removeBodyHandler),t.addEventListener("addBody",this._addBodyHandler),t.addEventListener("removeBody",this._removeBodyHandler),this.world=t,this.dirty=!0}collisionPairs(t,e,n){const i=this.axisList,r=i.length,o=this.axisIndex;let a,l;for(this.dirty&&(this.sortList(),this.dirty=!1),a=0;a!==r;a++){const c=i[a];for(l=a+1;l<r;l++){const h=i[l];if(this.needBroadphaseCollision(c,h)){if(!Rs.checkBounds(c,h,o))break;this.intersectionTest(c,h,e,n)}}}}sortList(){const t=this.axisList,e=this.axisIndex,n=t.length;for(let i=0;i!==n;i++){const r=t[i];r.aabbNeedsUpdate&&r.updateAABB()}e===0?Rs.insertionSortX(t):e===1?Rs.insertionSortY(t):e===2&&Rs.insertionSortZ(t)}autoDetectAxis(){let t=0,e=0,n=0,i=0,r=0,o=0;const a=this.axisList,l=a.length,c=1/l;for(let f=0;f!==l;f++){const g=a[f],_=g.position.x;t+=_,e+=_*_;const m=g.position.y;n+=m,i+=m*m;const p=g.position.z;r+=p,o+=p*p}const h=e-t*t*c,u=i-n*n*c,d=o-r*r*c;h>u?h>d?this.axisIndex=0:this.axisIndex=2:u>d?this.axisIndex=1:this.axisIndex=2}aabbQuery(t,e,n){n===void 0&&(n=[]),this.dirty&&(this.sortList(),this.dirty=!1);const i=this.axisIndex;let r="x";i===1&&(r="y"),i===2&&(r="z");const o=this.axisList;e.lowerBound[r],e.upperBound[r];for(let a=0;a<o.length;a++){const l=o[a];l.aabbNeedsUpdate&&l.updateAABB(),l.aabb.overlaps(e)&&n.push(l)}return n}}class tp{static defaults(t,e){t===void 0&&(t={});for(let n in e)n in t||(t[n]=e[n]);return t}}class pa{constructor(t,e,n){n===void 0&&(n={}),n=tp.defaults(n,{collideConnected:!0,wakeUpBodies:!0}),this.equations=[],this.bodyA=t,this.bodyB=e,this.id=pa.idCounter++,this.collideConnected=n.collideConnected,n.wakeUpBodies&&(t&&t.wakeUp(),e&&e.wakeUp())}update(){throw new Error("method update() not implmemented in this Constraint subclass!")}enable(){const t=this.equations;for(let e=0;e<t.length;e++)t[e].enabled=!0}disable(){const t=this.equations;for(let e=0;e<t.length;e++)t[e].enabled=!1}}pa.idCounter=0;class yu{constructor(){this.spatial=new E,this.rotational=new E}multiplyElement(t){return t.spatial.dot(this.spatial)+t.rotational.dot(this.rotational)}multiplyVectors(t,e){return t.dot(this.spatial)+e.dot(this.rotational)}}class is{constructor(t,e,n,i){n===void 0&&(n=-1e6),i===void 0&&(i=1e6),this.id=is.idCounter++,this.minForce=n,this.maxForce=i,this.bi=t,this.bj=e,this.a=0,this.b=0,this.eps=0,this.jacobianElementA=new yu,this.jacobianElementB=new yu,this.enabled=!0,this.multiplier=0,this.setSpookParams(1e7,4,1/60)}setSpookParams(t,e,n){const i=e,r=t,o=n;this.a=4/(o*(1+4*i)),this.b=4*i/(1+4*i),this.eps=4/(o*o*r*(1+4*i))}computeB(t,e,n){const i=this.computeGW(),r=this.computeGq(),o=this.computeGiMf();return-r*t-i*e-o*n}computeGq(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,i=this.bj,r=n.position,o=i.position;return t.spatial.dot(r)+e.spatial.dot(o)}computeGW(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,i=this.bj,r=n.velocity,o=i.velocity,a=n.angularVelocity,l=i.angularVelocity;return t.multiplyVectors(r,a)+e.multiplyVectors(o,l)}computeGWlambda(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,i=this.bj,r=n.vlambda,o=i.vlambda,a=n.wlambda,l=i.wlambda;return t.multiplyVectors(r,a)+e.multiplyVectors(o,l)}computeGiMf(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,i=this.bj,r=n.force,o=n.torque,a=i.force,l=i.torque,c=n.invMassSolve,h=i.invMassSolve;return r.scale(c,bu),a.scale(h,Mu),n.invInertiaWorldSolve.vmult(o,wu),i.invInertiaWorldSolve.vmult(l,Su),t.multiplyVectors(bu,wu)+e.multiplyVectors(Mu,Su)}computeGiMGt(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,i=this.bj,r=n.invMassSolve,o=i.invMassSolve,a=n.invInertiaWorldSolve,l=i.invInertiaWorldSolve;let c=r+o;return a.vmult(t.rotational,bo),c+=bo.dot(t.rotational),l.vmult(e.rotational,bo),c+=bo.dot(e.rotational),c}addToWlambda(t){const e=this.jacobianElementA,n=this.jacobianElementB,i=this.bi,r=this.bj,o=Hb;i.vlambda.addScaledVector(i.invMassSolve*t,e.spatial,i.vlambda),r.vlambda.addScaledVector(r.invMassSolve*t,n.spatial,r.vlambda),i.invInertiaWorldSolve.vmult(e.rotational,o),i.wlambda.addScaledVector(t,o,i.wlambda),r.invInertiaWorldSolve.vmult(n.rotational,o),r.wlambda.addScaledVector(t,o,r.wlambda)}computeC(){return this.computeGiMGt()+this.eps}}is.idCounter=0;const bu=new E,Mu=new E,wu=new E,Su=new E,bo=new E,Hb=new E;class Bo extends is{constructor(t,e,n){n===void 0&&(n=1e6),super(t,e,0,n),this.restitution=0,this.ri=new E,this.rj=new E,this.ni=new E}computeB(t){const e=this.a,n=this.b,i=this.bi,r=this.bj,o=this.ri,a=this.rj,l=Wb,c=Gb,h=i.velocity,u=i.angularVelocity;i.force,i.torque;const d=r.velocity,f=r.angularVelocity;r.force,r.torque;const g=qb,_=this.jacobianElementA,m=this.jacobianElementB,p=this.ni;o.cross(p,l),a.cross(p,c),p.negate(_.spatial),l.negate(_.rotational),m.spatial.copy(p),m.rotational.copy(c),g.copy(r.position),g.vadd(a,g),g.vsub(i.position,g),g.vsub(o,g);const x=p.dot(g),w=this.restitution+1,v=w*d.dot(p)-w*h.dot(p)+f.dot(c)-u.dot(l),y=this.computeGiMf();return-x*e-v*n-t*y}getImpactVelocityAlongNormal(){const t=jb,e=Xb,n=Yb,i=$b,r=Kb;return this.bi.position.vadd(this.ri,n),this.bj.position.vadd(this.rj,i),this.bi.getVelocityAtWorldPoint(n,t),this.bj.getVelocityAtWorldPoint(i,e),t.vsub(e,r),this.ni.dot(r)}}const Wb=new E,Gb=new E,qb=new E,jb=new E,Xb=new E,Yb=new E,$b=new E,Kb=new E;class Zb extends pa{constructor(t,e,n,i,r){e===void 0&&(e=new E),i===void 0&&(i=new E),r===void 0&&(r=1e6),super(t,n),this.pivotA=e.clone(),this.pivotB=i.clone();const o=this.equationX=new Bo(t,n),a=this.equationY=new Bo(t,n),l=this.equationZ=new Bo(t,n);this.equations.push(o,a,l),o.minForce=a.minForce=l.minForce=-r,o.maxForce=a.maxForce=l.maxForce=r,o.ni.set(1,0,0),a.ni.set(0,1,0),l.ni.set(0,0,1)}update(){const t=this.bodyA,e=this.bodyB,n=this.equationX,i=this.equationY,r=this.equationZ;t.quaternion.vmult(this.pivotA,n.ri),e.quaternion.vmult(this.pivotB,n.rj),i.ri.copy(n.ri),i.rj.copy(n.rj),r.ri.copy(n.ri),r.rj.copy(n.rj)}}new E;new E;class Eu extends is{constructor(t,e,n){n===void 0&&(n={});const i=typeof n.maxForce<"u"?n.maxForce:1e6;super(t,e,-i,i),this.axisA=n.axisA?n.axisA.clone():new E(1,0,0),this.axisB=n.axisB?n.axisB.clone():new E(0,1,0),this.maxAngle=Math.PI/2}computeB(t){const e=this.a,n=this.b,i=this.axisA,r=this.axisB,o=Jb,a=Qb,l=this.jacobianElementA,c=this.jacobianElementB;i.cross(r,o),r.cross(i,a),l.rotational.copy(a),c.rotational.copy(o);const h=Math.cos(this.maxAngle)-i.dot(r),u=this.computeGW(),d=this.computeGiMf();return-h*e-u*n-t*d}}const Jb=new E,Qb=new E;new E;new E;new E;new E;class tM extends is{constructor(t,e,n){n===void 0&&(n=1e6),super(t,e,-n,n),this.axisA=new E,this.axisB=new E,this.targetVelocity=0}computeB(t){this.a;const e=this.b;this.bi,this.bj;const n=this.axisA,i=this.axisB,r=this.jacobianElementA,o=this.jacobianElementB;r.rotational.copy(n),i.negate(o.rotational);const a=this.computeGW()-this.targetVelocity,l=this.computeGiMf();return-a*e-t*l}}class eM extends Zb{constructor(t,e,n){n===void 0&&(n={});const i=typeof n.maxForce<"u"?n.maxForce:1e6,r=n.pivotA?n.pivotA.clone():new E,o=n.pivotB?n.pivotB.clone():new E;super(t,r,e,o,i),(this.axisA=n.axisA?n.axisA.clone():new E(1,0,0)).normalize(),(this.axisB=n.axisB?n.axisB.clone():new E(1,0,0)).normalize(),this.collideConnected=!!n.collideConnected;const c=this.rotationalEquation1=new Eu(t,e,n),h=this.rotationalEquation2=new Eu(t,e,n),u=this.motorEquation=new tM(t,e,i);u.enabled=!1,this.equations.push(c,h,u)}enableMotor(){this.motorEquation.enabled=!0}disableMotor(){this.motorEquation.enabled=!1}setMotorSpeed(t){this.motorEquation.targetVelocity=t}setMotorMaxForce(t){this.motorEquation.maxForce=t,this.motorEquation.minForce=-t}update(){const t=this.bodyA,e=this.bodyB,n=this.motorEquation,i=this.rotationalEquation1,r=this.rotationalEquation2,o=nM,a=iM,l=this.axisA,c=this.axisB;super.update(),t.quaternion.vmult(l,o),e.quaternion.vmult(c,a),o.tangents(i.axisA,r.axisA),i.axisB.copy(a),r.axisB.copy(a),this.motorEquation.enabled&&(t.quaternion.vmult(this.axisA,n.axisA),e.quaternion.vmult(this.axisB,n.axisB))}}const nM=new E,iM=new E;class Au extends is{constructor(t,e,n){super(t,e,-n,n),this.ri=new E,this.rj=new E,this.t=new E}computeB(t){this.a;const e=this.b;this.bi,this.bj;const n=this.ri,i=this.rj,r=sM,o=rM,a=this.t;n.cross(a,r),i.cross(a,o);const l=this.jacobianElementA,c=this.jacobianElementB;a.negate(l.spatial),r.negate(l.rotational),c.spatial.copy(a),c.rotational.copy(o);const h=this.computeGW(),u=this.computeGiMf();return-h*e-t*u}}const sM=new E,rM=new E;class Vs{constructor(t,e,n){n=tp.defaults(n,{friction:.3,restitution:.3,contactEquationStiffness:1e7,contactEquationRelaxation:3,frictionEquationStiffness:1e7,frictionEquationRelaxation:3}),this.id=Vs.idCounter++,this.materials=[t,e],this.friction=n.friction,this.restitution=n.restitution,this.contactEquationStiffness=n.contactEquationStiffness,this.contactEquationRelaxation=n.contactEquationRelaxation,this.frictionEquationStiffness=n.frictionEquationStiffness,this.frictionEquationRelaxation=n.frictionEquationRelaxation}}Vs.idCounter=0;class ji{constructor(t){t===void 0&&(t={});let e="";typeof t=="string"&&(e=t,t={}),this.name=e,this.id=ji.idCounter++,this.friction=typeof t.friction<"u"?t.friction:-1,this.restitution=typeof t.restitution<"u"?t.restitution:-1}}ji.idCounter=0;new E;new E;new E;new E;new E;new E;new E;new E;new E;new E;new E;new E;new E;new E;new E;new E;new E;new E;new E;new xe;new E;new E;new E;new E(1,0,0),new E(0,1,0),new E(0,0,1);new E;new E;new E;new E;new E;new E;new E;new E;new E;new E;new E;class ep extends gt{constructor(t){if(super({type:gt.types.SPHERE}),this.radius=t!==void 0?t:1,this.radius<0)throw new Error("The sphere radius cannot be negative.");this.updateBoundingSphereRadius()}calculateLocalInertia(t,e){e===void 0&&(e=new E);const n=2*t*this.radius*this.radius/5;return e.x=n,e.y=n,e.z=n,e}volume(){return 4*Math.PI*Math.pow(this.radius,3)/3}updateBoundingSphereRadius(){this.boundingSphereRadius=this.radius}calculateWorldAABB(t,e,n,i){const r=this.radius,o=["x","y","z"];for(let a=0;a<o.length;a++){const l=o[a];n[l]=t[l]-r,i[l]=t[l]+r}}}class oM{constructor(t){t===void 0&&(t={}),this.wheelBodies=[],this.coordinateSystem=typeof t.coordinateSystem<"u"?t.coordinateSystem.clone():new E(1,2,3),t.chassisBody?this.chassisBody=t.chassisBody:this.chassisBody=new ft({mass:1,shape:new Us(new E(5,.5,2))}),this.constraints=[],this.wheelAxes=[],this.wheelForces=[]}addWheel(t){t===void 0&&(t={});let e;t.body?e=t.body:e=new ft({mass:1,shape:new ep(1.2)}),this.wheelBodies.push(e),this.wheelForces.push(0);const n=typeof t.position<"u"?t.position.clone():new E,i=new E;this.chassisBody.pointToWorldFrame(n,i),e.position.set(i.x,i.y,i.z);const r=typeof t.axis<"u"?t.axis.clone():new E(0,0,1);this.wheelAxes.push(r);const o=new eM(this.chassisBody,e,{pivotA:n,axisA:r,pivotB:E.ZERO,axisB:r,collideConnected:!1});return this.constraints.push(o),this.wheelBodies.length-1}setSteeringValue(t,e){const n=this.wheelAxes[e],i=Math.cos(t),r=Math.sin(t),o=n.x,a=n.z;this.constraints[e].axisA.set(-i*o+r*a,0,r*o+i*a)}setMotorSpeed(t,e){const n=this.constraints[e];n.enableMotor(),n.motorTargetVelocity=t}disableMotor(t){this.constraints[t].disableMotor()}setWheelForce(t,e){this.wheelForces[e]=t}applyWheelForce(t,e){const n=this.wheelAxes[e],i=this.wheelBodies[e],r=i.torque;n.scale(t,Mo),i.vectorToWorldFrame(Mo,Mo),r.vadd(Mo,r)}addToWorld(t){const e=this.constraints,n=this.wheelBodies.concat([this.chassisBody]);for(let i=0;i<n.length;i++)t.addBody(n[i]);for(let i=0;i<e.length;i++)t.addConstraint(e[i]);t.addEventListener("preStep",this._update.bind(this))}_update(){const t=this.wheelForces;for(let e=0;e<t.length;e++)this.applyWheelForce(t[e],e)}removeFromWorld(t){const e=this.constraints,n=this.wheelBodies.concat([this.chassisBody]);for(let i=0;i<n.length;i++)t.removeBody(n[i]);for(let i=0;i<e.length;i++)t.removeConstraint(e[i])}getWheelSpeed(t){const e=this.wheelAxes[t],i=this.wheelBodies[t].angularVelocity;return this.chassisBody.vectorToWorldFrame(e,Tu),i.dot(Tu)}}const Mo=new E,Tu=new E;new E;new E;new E;new E;new E;new E;new E;class aM extends mi{constructor(t,e,n,i){if(t===void 0&&(t=1),e===void 0&&(e=1),n===void 0&&(n=1),i===void 0&&(i=8),t<0)throw new Error("The cylinder radiusTop cannot be negative.");if(e<0)throw new Error("The cylinder radiusBottom cannot be negative.");const r=i,o=[],a=[],l=[],c=[],h=[],u=Math.cos,d=Math.sin;o.push(new E(-e*d(0),-n*.5,e*u(0))),c.push(0),o.push(new E(-t*d(0),n*.5,t*u(0))),h.push(1);for(let g=0;g<r;g++){const _=2*Math.PI/r*(g+1),m=2*Math.PI/r*(g+.5);g<r-1?(o.push(new E(-e*d(_),-n*.5,e*u(_))),c.push(2*g+2),o.push(new E(-t*d(_),n*.5,t*u(_))),h.push(2*g+3),l.push([2*g,2*g+1,2*g+3,2*g+2])):l.push([2*g,2*g+1,1,0]),(r%2===1||g<r/2)&&a.push(new E(-d(m),0,u(m)))}l.push(c),a.push(new E(0,1,0));const f=[];for(let g=0;g<h.length;g++)f.push(h[h.length-g-1]);l.push(f),super({vertices:o,faces:l,axes:a}),this.type=gt.types.CYLINDER,this.radiusTop=t,this.radiusBottom=e,this.height=n,this.numSegments=i}}new E;new E;new E;new E;new E;new E;new E;new E;new E;new E;new E;new en;new E;new en;new E;new E;new E;new E;new E;new E;new E;new en;new E;new qt;new en;class lM{constructor(){this.equations=[]}solve(t,e){return 0}addEquation(t){t.enabled&&!t.bi.isTrigger&&!t.bj.isTrigger&&this.equations.push(t)}removeEquation(t){const e=this.equations,n=e.indexOf(t);n!==-1&&e.splice(n,1)}removeAllEquations(){this.equations.length=0}}class cM extends lM{constructor(){super(),this.iterations=10,this.tolerance=1e-7}solve(t,e){let n=0;const i=this.iterations,r=this.tolerance*this.tolerance,o=this.equations,a=o.length,l=e.bodies,c=l.length,h=t;let u,d,f,g,_,m;if(a!==0)for(let v=0;v!==c;v++)l[v].updateSolveMassProperties();const p=uM,x=dM,w=hM;p.length=a,x.length=a,w.length=a;for(let v=0;v!==a;v++){const y=o[v];w[v]=0,x[v]=y.computeB(h),p[v]=1/y.computeC()}if(a!==0){for(let S=0;S!==c;S++){const T=l[S],A=T.vlambda,b=T.wlambda;A.set(0,0,0),b.set(0,0,0)}for(n=0;n!==i;n++){g=0;for(let S=0;S!==a;S++){const T=o[S];u=x[S],d=p[S],m=w[S],_=T.computeGWlambda(),f=d*(u-_-T.eps*m),m+f<T.minForce?f=T.minForce-m:m+f>T.maxForce&&(f=T.maxForce-m),w[S]+=f,g+=f>0?f:-f,T.addToWlambda(f)}if(g*g<r)break}for(let S=0;S!==c;S++){const T=l[S],A=T.velocity,b=T.angularVelocity;T.vlambda.vmul(T.linearFactor,T.vlambda),A.vadd(T.vlambda,A),T.wlambda.vmul(T.angularFactor,T.wlambda),b.vadd(T.wlambda,b)}let v=o.length;const y=1/h;for(;v--;)o[v].multiplier=w[v]*y}return n}}const hM=[],uM=[],dM=[];ft.STATIC;class fM{constructor(){this.objects=[],this.type=Object}release(){const t=arguments.length;for(let e=0;e!==t;e++)this.objects.push(e<0||arguments.length<=e?void 0:arguments[e]);return this}get(){return this.objects.length===0?this.constructObject():this.objects.pop()}constructObject(){throw new Error("constructObject() not implemented in this Pool subclass yet!")}resize(t){const e=this.objects;for(;e.length>t;)e.pop();for(;e.length<t;)e.push(this.constructObject());return this}}class pM extends fM{constructor(){super(...arguments),this.type=E}constructObject(){return new E}}const te={sphereSphere:gt.types.SPHERE,spherePlane:gt.types.SPHERE|gt.types.PLANE,boxBox:gt.types.BOX|gt.types.BOX,sphereBox:gt.types.SPHERE|gt.types.BOX,planeBox:gt.types.PLANE|gt.types.BOX,convexConvex:gt.types.CONVEXPOLYHEDRON,sphereConvex:gt.types.SPHERE|gt.types.CONVEXPOLYHEDRON,planeConvex:gt.types.PLANE|gt.types.CONVEXPOLYHEDRON,boxConvex:gt.types.BOX|gt.types.CONVEXPOLYHEDRON,sphereHeightfield:gt.types.SPHERE|gt.types.HEIGHTFIELD,boxHeightfield:gt.types.BOX|gt.types.HEIGHTFIELD,convexHeightfield:gt.types.CONVEXPOLYHEDRON|gt.types.HEIGHTFIELD,sphereParticle:gt.types.PARTICLE|gt.types.SPHERE,planeParticle:gt.types.PLANE|gt.types.PARTICLE,boxParticle:gt.types.BOX|gt.types.PARTICLE,convexParticle:gt.types.PARTICLE|gt.types.CONVEXPOLYHEDRON,cylinderCylinder:gt.types.CYLINDER,sphereCylinder:gt.types.SPHERE|gt.types.CYLINDER,planeCylinder:gt.types.PLANE|gt.types.CYLINDER,boxCylinder:gt.types.BOX|gt.types.CYLINDER,convexCylinder:gt.types.CONVEXPOLYHEDRON|gt.types.CYLINDER,heightfieldCylinder:gt.types.HEIGHTFIELD|gt.types.CYLINDER,particleCylinder:gt.types.PARTICLE|gt.types.CYLINDER,sphereTrimesh:gt.types.SPHERE|gt.types.TRIMESH,planeTrimesh:gt.types.PLANE|gt.types.TRIMESH};class mM{get[te.sphereSphere](){return this.sphereSphere}get[te.spherePlane](){return this.spherePlane}get[te.boxBox](){return this.boxBox}get[te.sphereBox](){return this.sphereBox}get[te.planeBox](){return this.planeBox}get[te.convexConvex](){return this.convexConvex}get[te.sphereConvex](){return this.sphereConvex}get[te.planeConvex](){return this.planeConvex}get[te.boxConvex](){return this.boxConvex}get[te.sphereHeightfield](){return this.sphereHeightfield}get[te.boxHeightfield](){return this.boxHeightfield}get[te.convexHeightfield](){return this.convexHeightfield}get[te.sphereParticle](){return this.sphereParticle}get[te.planeParticle](){return this.planeParticle}get[te.boxParticle](){return this.boxParticle}get[te.convexParticle](){return this.convexParticle}get[te.cylinderCylinder](){return this.convexConvex}get[te.sphereCylinder](){return this.sphereConvex}get[te.planeCylinder](){return this.planeConvex}get[te.boxCylinder](){return this.boxConvex}get[te.convexCylinder](){return this.convexConvex}get[te.heightfieldCylinder](){return this.heightfieldCylinder}get[te.particleCylinder](){return this.particleCylinder}get[te.sphereTrimesh](){return this.sphereTrimesh}get[te.planeTrimesh](){return this.planeTrimesh}constructor(t){this.contactPointPool=[],this.frictionEquationPool=[],this.result=[],this.frictionResult=[],this.v3pool=new pM,this.world=t,this.currentContactMaterial=t.defaultContactMaterial,this.enableFrictionReduction=!1}createContactEquation(t,e,n,i,r,o){let a;this.contactPointPool.length?(a=this.contactPointPool.pop(),a.bi=t,a.bj=e):a=new Bo(t,e),a.enabled=t.collisionResponse&&e.collisionResponse&&n.collisionResponse&&i.collisionResponse;const l=this.currentContactMaterial;a.restitution=l.restitution,a.setSpookParams(l.contactEquationStiffness,l.contactEquationRelaxation,this.world.dt);const c=n.material||t.material,h=i.material||e.material;return c&&h&&c.restitution>=0&&h.restitution>=0&&(a.restitution=c.restitution*h.restitution),a.si=r||n,a.sj=o||i,a}createFrictionEquationsFromContact(t,e){const n=t.bi,i=t.bj,r=t.si,o=t.sj,a=this.world,l=this.currentContactMaterial;let c=l.friction;const h=r.material||n.material,u=o.material||i.material;if(h&&u&&h.friction>=0&&u.friction>=0&&(c=h.friction*u.friction),c>0){const d=c*(a.frictionGravity||a.gravity).length();let f=n.invMass+i.invMass;f>0&&(f=1/f);const g=this.frictionEquationPool,_=g.length?g.pop():new Au(n,i,d*f),m=g.length?g.pop():new Au(n,i,d*f);return _.bi=m.bi=n,_.bj=m.bj=i,_.minForce=m.minForce=-d*f,_.maxForce=m.maxForce=d*f,_.ri.copy(t.ri),_.rj.copy(t.rj),m.ri.copy(t.ri),m.rj.copy(t.rj),t.ni.tangents(_.t,m.t),_.setSpookParams(l.frictionEquationStiffness,l.frictionEquationRelaxation,a.dt),m.setSpookParams(l.frictionEquationStiffness,l.frictionEquationRelaxation,a.dt),_.enabled=m.enabled=t.enabled,e.push(_,m),!0}return!1}createFrictionFromAverage(t){let e=this.result[this.result.length-1];if(!this.createFrictionEquationsFromContact(e,this.frictionResult)||t===1)return;const n=this.frictionResult[this.frictionResult.length-2],i=this.frictionResult[this.frictionResult.length-1];Ci.setZero(),ws.setZero(),Ss.setZero();const r=e.bi;e.bj;for(let a=0;a!==t;a++)e=this.result[this.result.length-1-a],e.bi!==r?(Ci.vadd(e.ni,Ci),ws.vadd(e.ri,ws),Ss.vadd(e.rj,Ss)):(Ci.vsub(e.ni,Ci),ws.vadd(e.rj,ws),Ss.vadd(e.ri,Ss));const o=1/t;ws.scale(o,n.ri),Ss.scale(o,n.rj),i.ri.copy(n.ri),i.rj.copy(n.rj),Ci.normalize(),Ci.tangents(n.t,i.t)}getContacts(t,e,n,i,r,o,a){this.contactPointPool=r,this.frictionEquationPool=a,this.result=i,this.frictionResult=o;const l=xM,c=vM,h=gM,u=_M;for(let d=0,f=t.length;d!==f;d++){const g=t[d],_=e[d];let m=null;g.material&&_.material&&(m=n.getContactMaterial(g.material,_.material)||null);const p=g.type&ft.KINEMATIC&&_.type&ft.STATIC||g.type&ft.STATIC&&_.type&ft.KINEMATIC||g.type&ft.KINEMATIC&&_.type&ft.KINEMATIC;for(let x=0;x<g.shapes.length;x++){g.quaternion.mult(g.shapeOrientations[x],l),g.quaternion.vmult(g.shapeOffsets[x],h),h.vadd(g.position,h);const w=g.shapes[x];for(let v=0;v<_.shapes.length;v++){_.quaternion.mult(_.shapeOrientations[v],c),_.quaternion.vmult(_.shapeOffsets[v],u),u.vadd(_.position,u);const y=_.shapes[v];if(!(w.collisionFilterMask&y.collisionFilterGroup&&y.collisionFilterMask&w.collisionFilterGroup)||h.distanceTo(u)>w.boundingSphereRadius+y.boundingSphereRadius)continue;let S=null;w.material&&y.material&&(S=n.getContactMaterial(w.material,y.material)||null),this.currentContactMaterial=S||m||n.defaultContactMaterial;const T=w.type|y.type,A=this[T];if(A){let b=!1;w.type<y.type?b=A.call(this,w,y,h,u,l,c,g,_,w,y,p):b=A.call(this,y,w,u,h,c,l,_,g,w,y,p),b&&p&&(n.shapeOverlapKeeper.set(w.id,y.id),n.bodyOverlapKeeper.set(g.id,_.id))}}}}}sphereSphere(t,e,n,i,r,o,a,l,c,h,u){if(u)return n.distanceSquared(i)<(t.radius+e.radius)**2;const d=this.createContactEquation(a,l,t,e,c,h);i.vsub(n,d.ni),d.ni.normalize(),d.ri.copy(d.ni),d.rj.copy(d.ni),d.ri.scale(t.radius,d.ri),d.rj.scale(-e.radius,d.rj),d.ri.vadd(n,d.ri),d.ri.vsub(a.position,d.ri),d.rj.vadd(i,d.rj),d.rj.vsub(l.position,d.rj),this.result.push(d),this.createFrictionEquationsFromContact(d,this.frictionResult)}spherePlane(t,e,n,i,r,o,a,l,c,h,u){const d=this.createContactEquation(a,l,t,e,c,h);if(d.ni.set(0,0,1),o.vmult(d.ni,d.ni),d.ni.negate(d.ni),d.ni.normalize(),d.ni.scale(t.radius,d.ri),n.vsub(i,wo),d.ni.scale(d.ni.dot(wo),Cu),wo.vsub(Cu,d.rj),-wo.dot(d.ni)<=t.radius){if(u)return!0;const f=d.ri,g=d.rj;f.vadd(n,f),f.vsub(a.position,f),g.vadd(i,g),g.vsub(l.position,g),this.result.push(d),this.createFrictionEquationsFromContact(d,this.frictionResult)}}boxBox(t,e,n,i,r,o,a,l,c,h,u){return t.convexPolyhedronRepresentation.material=t.material,e.convexPolyhedronRepresentation.material=e.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e.convexPolyhedronRepresentation,n,i,r,o,a,l,t,e,u)}sphereBox(t,e,n,i,r,o,a,l,c,h,u){const d=this.v3pool,f=qM;n.vsub(i,So),e.getSideNormals(f,o);const g=t.radius;let _=!1;const m=XM,p=YM,x=$M;let w=null,v=0,y=0,S=0,T=null;for(let O=0,V=f.length;O!==V&&_===!1;O++){const B=HM;B.copy(f[O]);const j=B.length();B.normalize();const $=So.dot(B);if($<j+g&&$>0){const ct=WM,G=GM;ct.copy(f[(O+1)%3]),G.copy(f[(O+2)%3]);const q=ct.length(),J=G.length();ct.normalize(),G.normalize();const ot=So.dot(ct),at=So.dot(G);if(ot<q&&ot>-q&&at<J&&at>-J){const X=Math.abs($-j-g);if((T===null||X<T)&&(T=X,y=ot,S=at,w=j,m.copy(B),p.copy(ct),x.copy(G),v++,u))return!0}}}if(v){_=!0;const O=this.createContactEquation(a,l,t,e,c,h);m.scale(-g,O.ri),O.ni.copy(m),O.ni.negate(O.ni),m.scale(w,m),p.scale(y,p),m.vadd(p,m),x.scale(S,x),m.vadd(x,O.rj),O.ri.vadd(n,O.ri),O.ri.vsub(a.position,O.ri),O.rj.vadd(i,O.rj),O.rj.vsub(l.position,O.rj),this.result.push(O),this.createFrictionEquationsFromContact(O,this.frictionResult)}let A=d.get();const b=jM;for(let O=0;O!==2&&!_;O++)for(let V=0;V!==2&&!_;V++)for(let B=0;B!==2&&!_;B++)if(A.set(0,0,0),O?A.vadd(f[0],A):A.vsub(f[0],A),V?A.vadd(f[1],A):A.vsub(f[1],A),B?A.vadd(f[2],A):A.vsub(f[2],A),i.vadd(A,b),b.vsub(n,b),b.lengthSquared()<g*g){if(u)return!0;_=!0;const j=this.createContactEquation(a,l,t,e,c,h);j.ri.copy(b),j.ri.normalize(),j.ni.copy(j.ri),j.ri.scale(g,j.ri),j.rj.copy(A),j.ri.vadd(n,j.ri),j.ri.vsub(a.position,j.ri),j.rj.vadd(i,j.rj),j.rj.vsub(l.position,j.rj),this.result.push(j),this.createFrictionEquationsFromContact(j,this.frictionResult)}d.release(A),A=null;const M=d.get(),L=d.get(),I=d.get(),C=d.get(),D=d.get(),P=f.length;for(let O=0;O!==P&&!_;O++)for(let V=0;V!==P&&!_;V++)if(O%3!==V%3){f[V].cross(f[O],M),M.normalize(),f[O].vadd(f[V],L),I.copy(n),I.vsub(L,I),I.vsub(i,I);const B=I.dot(M);M.scale(B,C);let j=0;for(;j===O%3||j===V%3;)j++;D.copy(n),D.vsub(C,D),D.vsub(L,D),D.vsub(i,D);const $=Math.abs(B),ct=D.length();if($<f[j].length()&&ct<g){if(u)return!0;_=!0;const G=this.createContactEquation(a,l,t,e,c,h);L.vadd(C,G.rj),G.rj.copy(G.rj),D.negate(G.ni),G.ni.normalize(),G.ri.copy(G.rj),G.ri.vadd(i,G.ri),G.ri.vsub(n,G.ri),G.ri.normalize(),G.ri.scale(g,G.ri),G.ri.vadd(n,G.ri),G.ri.vsub(a.position,G.ri),G.rj.vadd(i,G.rj),G.rj.vsub(l.position,G.rj),this.result.push(G),this.createFrictionEquationsFromContact(G,this.frictionResult)}}d.release(M,L,I,C,D)}planeBox(t,e,n,i,r,o,a,l,c,h,u){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,e.convexPolyhedronRepresentation.id=e.id,this.planeConvex(t,e.convexPolyhedronRepresentation,n,i,r,o,a,l,t,e,u)}convexConvex(t,e,n,i,r,o,a,l,c,h,u,d,f){const g=hw;if(!(n.distanceTo(i)>t.boundingSphereRadius+e.boundingSphereRadius)&&t.findSeparatingAxis(e,n,r,i,o,g,d,f)){const _=[],m=uw;t.clipAgainstHull(n,r,e,i,o,g,-100,100,_);let p=0;for(let x=0;x!==_.length;x++){if(u)return!0;const w=this.createContactEquation(a,l,t,e,c,h),v=w.ri,y=w.rj;g.negate(w.ni),_[x].normal.negate(m),m.scale(_[x].depth,m),_[x].point.vadd(m,v),y.copy(_[x].point),v.vsub(n,v),y.vsub(i,y),v.vadd(n,v),v.vsub(a.position,v),y.vadd(i,y),y.vsub(l.position,y),this.result.push(w),p++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(w,this.frictionResult)}this.enableFrictionReduction&&p&&this.createFrictionFromAverage(p)}}sphereConvex(t,e,n,i,r,o,a,l,c,h,u){const d=this.v3pool;n.vsub(i,KM);const f=e.faceNormals,g=e.faces,_=e.vertices,m=t.radius;let p=!1;for(let x=0;x!==_.length;x++){const w=_[x],v=tw;o.vmult(w,v),i.vadd(v,v);const y=QM;if(v.vsub(n,y),y.lengthSquared()<m*m){if(u)return!0;p=!0;const S=this.createContactEquation(a,l,t,e,c,h);S.ri.copy(y),S.ri.normalize(),S.ni.copy(S.ri),S.ri.scale(m,S.ri),v.vsub(i,S.rj),S.ri.vadd(n,S.ri),S.ri.vsub(a.position,S.ri),S.rj.vadd(i,S.rj),S.rj.vsub(l.position,S.rj),this.result.push(S),this.createFrictionEquationsFromContact(S,this.frictionResult);return}}for(let x=0,w=g.length;x!==w&&p===!1;x++){const v=f[x],y=g[x],S=ew;o.vmult(v,S);const T=nw;o.vmult(_[y[0]],T),T.vadd(i,T);const A=iw;S.scale(-m,A),n.vadd(A,A);const b=sw;A.vsub(T,b);const M=b.dot(S),L=rw;if(n.vsub(T,L),M<0&&L.dot(S)>0){const I=[];for(let C=0,D=y.length;C!==D;C++){const P=d.get();o.vmult(_[y[C]],P),i.vadd(P,P),I.push(P)}if(VM(I,S,n)){if(u)return!0;p=!0;const C=this.createContactEquation(a,l,t,e,c,h);S.scale(-m,C.ri),S.negate(C.ni);const D=d.get();S.scale(-M,D);const P=d.get();S.scale(-m,P),n.vsub(i,C.rj),C.rj.vadd(P,C.rj),C.rj.vadd(D,C.rj),C.rj.vadd(i,C.rj),C.rj.vsub(l.position,C.rj),C.ri.vadd(n,C.ri),C.ri.vsub(a.position,C.ri),d.release(D),d.release(P),this.result.push(C),this.createFrictionEquationsFromContact(C,this.frictionResult);for(let O=0,V=I.length;O!==V;O++)d.release(I[O]);return}else for(let C=0;C!==y.length;C++){const D=d.get(),P=d.get();o.vmult(_[y[(C+1)%y.length]],D),o.vmult(_[y[(C+2)%y.length]],P),i.vadd(D,D),i.vadd(P,P);const O=ZM;P.vsub(D,O);const V=JM;O.unit(V);const B=d.get(),j=d.get();n.vsub(D,j);const $=j.dot(V);V.scale($,B),B.vadd(D,B);const ct=d.get();if(B.vsub(n,ct),$>0&&$*$<O.lengthSquared()&&ct.lengthSquared()<m*m){if(u)return!0;const G=this.createContactEquation(a,l,t,e,c,h);B.vsub(i,G.rj),B.vsub(n,G.ni),G.ni.normalize(),G.ni.scale(m,G.ri),G.rj.vadd(i,G.rj),G.rj.vsub(l.position,G.rj),G.ri.vadd(n,G.ri),G.ri.vsub(a.position,G.ri),this.result.push(G),this.createFrictionEquationsFromContact(G,this.frictionResult);for(let q=0,J=I.length;q!==J;q++)d.release(I[q]);d.release(D),d.release(P),d.release(B),d.release(ct),d.release(j);return}d.release(D),d.release(P),d.release(B),d.release(ct),d.release(j)}for(let C=0,D=I.length;C!==D;C++)d.release(I[C])}}}planeConvex(t,e,n,i,r,o,a,l,c,h,u){const d=ow,f=aw;f.set(0,0,1),r.vmult(f,f);let g=0;const _=lw;for(let m=0;m!==e.vertices.length;m++)if(d.copy(e.vertices[m]),o.vmult(d,d),i.vadd(d,d),d.vsub(n,_),f.dot(_)<=0){if(u)return!0;const x=this.createContactEquation(a,l,t,e,c,h),w=cw;f.scale(f.dot(_),w),d.vsub(w,w),w.vsub(n,x.ri),x.ni.copy(f),d.vsub(i,x.rj),x.ri.vadd(n,x.ri),x.ri.vsub(a.position,x.ri),x.rj.vadd(i,x.rj),x.rj.vsub(l.position,x.rj),this.result.push(x),g++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(x,this.frictionResult)}this.enableFrictionReduction&&g&&this.createFrictionFromAverage(g)}boxConvex(t,e,n,i,r,o,a,l,c,h,u){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e,n,i,r,o,a,l,t,e,u)}sphereHeightfield(t,e,n,i,r,o,a,l,c,h,u){const d=e.data,f=t.radius,g=e.elementSize,_=ww,m=Mw;qt.pointToLocalFrame(i,o,n,m);let p=Math.floor((m.x-f)/g)-1,x=Math.ceil((m.x+f)/g)+1,w=Math.floor((m.y-f)/g)-1,v=Math.ceil((m.y+f)/g)+1;if(x<0||v<0||p>d.length||w>d[0].length)return;p<0&&(p=0),x<0&&(x=0),w<0&&(w=0),v<0&&(v=0),p>=d.length&&(p=d.length-1),x>=d.length&&(x=d.length-1),v>=d[0].length&&(v=d[0].length-1),w>=d[0].length&&(w=d[0].length-1);const y=[];e.getRectMinMax(p,w,x,v,y);const S=y[0],T=y[1];if(m.z-f>T||m.z+f<S)return;const A=this.result;for(let b=p;b<x;b++)for(let M=w;M<v;M++){const L=A.length;let I=!1;if(e.getConvexTrianglePillar(b,M,!1),qt.pointToWorldFrame(i,o,e.pillarOffset,_),n.distanceTo(_)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(I=this.sphereConvex(t,e.pillarConvex,n,_,r,o,a,l,t,e,u)),u&&I||(e.getConvexTrianglePillar(b,M,!0),qt.pointToWorldFrame(i,o,e.pillarOffset,_),n.distanceTo(_)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(I=this.sphereConvex(t,e.pillarConvex,n,_,r,o,a,l,t,e,u)),u&&I))return!0;if(A.length-L>2)return}}boxHeightfield(t,e,n,i,r,o,a,l,c,h,u){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexHeightfield(t.convexPolyhedronRepresentation,e,n,i,r,o,a,l,t,e,u)}convexHeightfield(t,e,n,i,r,o,a,l,c,h,u){const d=e.data,f=e.elementSize,g=t.boundingSphereRadius,_=yw,m=bw,p=vw;qt.pointToLocalFrame(i,o,n,p);let x=Math.floor((p.x-g)/f)-1,w=Math.ceil((p.x+g)/f)+1,v=Math.floor((p.y-g)/f)-1,y=Math.ceil((p.y+g)/f)+1;if(w<0||y<0||x>d.length||v>d[0].length)return;x<0&&(x=0),w<0&&(w=0),v<0&&(v=0),y<0&&(y=0),x>=d.length&&(x=d.length-1),w>=d.length&&(w=d.length-1),y>=d[0].length&&(y=d[0].length-1),v>=d[0].length&&(v=d[0].length-1);const S=[];e.getRectMinMax(x,v,w,y,S);const T=S[0],A=S[1];if(!(p.z-g>A||p.z+g<T))for(let b=x;b<w;b++)for(let M=v;M<y;M++){let L=!1;if(e.getConvexTrianglePillar(b,M,!1),qt.pointToWorldFrame(i,o,e.pillarOffset,_),n.distanceTo(_)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(L=this.convexConvex(t,e.pillarConvex,n,_,r,o,a,l,null,null,u,m,null)),u&&L||(e.getConvexTrianglePillar(b,M,!0),qt.pointToWorldFrame(i,o,e.pillarOffset,_),n.distanceTo(_)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(L=this.convexConvex(t,e.pillarConvex,n,_,r,o,a,l,null,null,u,m,null)),u&&L))return!0}}sphereParticle(t,e,n,i,r,o,a,l,c,h,u){const d=mw;if(d.set(0,0,1),i.vsub(n,d),d.lengthSquared()<=t.radius*t.radius){if(u)return!0;const g=this.createContactEquation(l,a,e,t,c,h);d.normalize(),g.rj.copy(d),g.rj.scale(t.radius,g.rj),g.ni.copy(d),g.ni.negate(g.ni),g.ri.set(0,0,0),this.result.push(g),this.createFrictionEquationsFromContact(g,this.frictionResult)}}planeParticle(t,e,n,i,r,o,a,l,c,h,u){const d=dw;d.set(0,0,1),a.quaternion.vmult(d,d);const f=fw;if(i.vsub(a.position,f),d.dot(f)<=0){if(u)return!0;const _=this.createContactEquation(l,a,e,t,c,h);_.ni.copy(d),_.ni.negate(_.ni),_.ri.set(0,0,0);const m=pw;d.scale(d.dot(i),m),i.vsub(m,m),_.rj.copy(m),this.result.push(_),this.createFrictionEquationsFromContact(_,this.frictionResult)}}boxParticle(t,e,n,i,r,o,a,l,c,h,u){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexParticle(t.convexPolyhedronRepresentation,e,n,i,r,o,a,l,t,e,u)}convexParticle(t,e,n,i,r,o,a,l,c,h,u){let d=-1;const f=_w,g=xw;let _=null;const m=gw;if(m.copy(i),m.vsub(n,m),r.conjugate(Pu),Pu.vmult(m,m),t.pointIsInside(m)){t.worldVerticesNeedsUpdate&&t.computeWorldVertices(n,r),t.worldFaceNormalsNeedsUpdate&&t.computeWorldFaceNormals(r);for(let p=0,x=t.faces.length;p!==x;p++){const w=[t.worldVertices[t.faces[p][0]]],v=t.worldFaceNormals[p];i.vsub(w[0],Lu);const y=-v.dot(Lu);if(_===null||Math.abs(y)<Math.abs(_)){if(u)return!0;_=y,d=p,f.copy(v)}}if(d!==-1){const p=this.createContactEquation(l,a,e,t,c,h);f.scale(_,g),g.vadd(i,g),g.vsub(n,g),p.rj.copy(g),f.negate(p.ni),p.ri.set(0,0,0);const x=p.ri,w=p.rj;x.vadd(i,x),x.vsub(l.position,x),w.vadd(n,w),w.vsub(a.position,w),this.result.push(p),this.createFrictionEquationsFromContact(p,this.frictionResult)}else console.warn("Point found inside convex, but did not find penetrating face!")}}heightfieldCylinder(t,e,n,i,r,o,a,l,c,h,u){return this.convexHeightfield(e,t,i,n,o,r,l,a,c,h,u)}particleCylinder(t,e,n,i,r,o,a,l,c,h,u){return this.convexParticle(e,t,i,n,o,r,l,a,c,h,u)}sphereTrimesh(t,e,n,i,r,o,a,l,c,h,u){const d=TM,f=CM,g=PM,_=LM,m=RM,p=DM,x=zM,w=AM,v=SM,y=kM;qt.pointToLocalFrame(i,o,n,m);const S=t.radius;x.lowerBound.set(m.x-S,m.y-S,m.z-S),x.upperBound.set(m.x+S,m.y+S,m.z+S),e.getTrianglesInAABB(x,y);const T=EM,A=t.radius*t.radius;for(let C=0;C<y.length;C++)for(let D=0;D<3;D++)if(e.getVertex(e.indices[y[C]*3+D],T),T.vsub(m,v),v.lengthSquared()<=A){if(w.copy(T),qt.pointToWorldFrame(i,o,w,T),T.vsub(n,v),u)return!0;let P=this.createContactEquation(a,l,t,e,c,h);P.ni.copy(v),P.ni.normalize(),P.ri.copy(P.ni),P.ri.scale(t.radius,P.ri),P.ri.vadd(n,P.ri),P.ri.vsub(a.position,P.ri),P.rj.copy(T),P.rj.vsub(l.position,P.rj),this.result.push(P),this.createFrictionEquationsFromContact(P,this.frictionResult)}for(let C=0;C<y.length;C++)for(let D=0;D<3;D++){e.getVertex(e.indices[y[C]*3+D],d),e.getVertex(e.indices[y[C]*3+(D+1)%3],f),f.vsub(d,g),m.vsub(f,p);const P=p.dot(g);m.vsub(d,p);let O=p.dot(g);if(O>0&&P<0&&(m.vsub(d,p),_.copy(g),_.normalize(),O=p.dot(_),_.scale(O,p),p.vadd(d,p),p.distanceTo(m)<t.radius)){if(u)return!0;const B=this.createContactEquation(a,l,t,e,c,h);p.vsub(m,B.ni),B.ni.normalize(),B.ni.scale(t.radius,B.ri),B.ri.vadd(n,B.ri),B.ri.vsub(a.position,B.ri),qt.pointToWorldFrame(i,o,p,p),p.vsub(l.position,B.rj),qt.vectorToWorldFrame(o,B.ni,B.ni),qt.vectorToWorldFrame(o,B.ri,B.ri),this.result.push(B),this.createFrictionEquationsFromContact(B,this.frictionResult)}}const b=IM,M=FM,L=OM,I=wM;for(let C=0,D=y.length;C!==D;C++){e.getTriangleVertices(y[C],b,M,L),e.getNormal(y[C],I),m.vsub(b,p);let P=p.dot(I);if(I.scale(P,p),m.vsub(p,p),P=p.distanceTo(m),xe.pointInTriangle(p,b,M,L)&&P<t.radius){if(u)return!0;let O=this.createContactEquation(a,l,t,e,c,h);p.vsub(m,O.ni),O.ni.normalize(),O.ni.scale(t.radius,O.ri),O.ri.vadd(n,O.ri),O.ri.vsub(a.position,O.ri),qt.pointToWorldFrame(i,o,p,p),p.vsub(l.position,O.rj),qt.vectorToWorldFrame(o,O.ni,O.ni),qt.vectorToWorldFrame(o,O.ri,O.ri),this.result.push(O),this.createFrictionEquationsFromContact(O,this.frictionResult)}}y.length=0}planeTrimesh(t,e,n,i,r,o,a,l,c,h,u){const d=new E,f=yM;f.set(0,0,1),r.vmult(f,f);for(let g=0;g<e.vertices.length/3;g++){e.getVertex(g,d);const _=new E;_.copy(d),qt.pointToWorldFrame(i,o,_,d);const m=bM;if(d.vsub(n,m),f.dot(m)<=0){if(u)return!0;const x=this.createContactEquation(a,l,t,e,c,h);x.ni.copy(f);const w=MM;f.scale(m.dot(f),w),d.vsub(w,w),x.ri.copy(w),x.ri.vsub(a.position,x.ri),x.rj.copy(d),x.rj.vsub(l.position,x.rj),this.result.push(x),this.createFrictionEquationsFromContact(x,this.frictionResult)}}}}const Ci=new E,ws=new E,Ss=new E,gM=new E,_M=new E,xM=new le,vM=new le,yM=new E,bM=new E,MM=new E,wM=new E,SM=new E;new E;const EM=new E,AM=new E,TM=new E,CM=new E,PM=new E,LM=new E,RM=new E,DM=new E,IM=new E,FM=new E,OM=new E,zM=new en,kM=[],wo=new E,Cu=new E,NM=new E,BM=new E,UM=new E;function VM(s,t,e){let n=null;const i=s.length;for(let r=0;r!==i;r++){const o=s[r],a=NM;s[(r+1)%i].vsub(o,a);const l=BM;a.cross(t,l);const c=UM;e.vsub(o,c);const h=l.dot(c);if(n===null||h>0&&n===!0||h<=0&&n===!1){n===null&&(n=h>0);continue}else return!1}return!0}const So=new E,HM=new E,WM=new E,GM=new E,qM=[new E,new E,new E,new E,new E,new E],jM=new E,XM=new E,YM=new E,$M=new E,KM=new E,ZM=new E,JM=new E,QM=new E,tw=new E,ew=new E,nw=new E,iw=new E,sw=new E,rw=new E;new E;new E;const ow=new E,aw=new E,lw=new E,cw=new E,hw=new E,uw=new E,dw=new E,fw=new E,pw=new E,mw=new E,Pu=new le,gw=new E;new E;const _w=new E,Lu=new E,xw=new E,vw=new E,yw=new E,bw=[0],Mw=new E,ww=new E;class Ru{constructor(){this.current=[],this.previous=[]}getKey(t,e){if(e<t){const n=e;e=t,t=n}return t<<16|e}set(t,e){const n=this.getKey(t,e),i=this.current;let r=0;for(;n>i[r];)r++;if(n!==i[r]){for(let o=i.length-1;o>=r;o--)i[o+1]=i[o];i[r]=n}}tick(){const t=this.current;this.current=this.previous,this.previous=t,this.current.length=0}getDiff(t,e){const n=this.current,i=this.previous,r=n.length,o=i.length;let a=0;for(let l=0;l<r;l++){let c=!1;const h=n[l];for(;h>i[a];)a++;c=h===i[a],c||Du(t,h)}a=0;for(let l=0;l<o;l++){let c=!1;const h=i[l];for(;h>n[a];)a++;c=n[a]===h,c||Du(e,h)}}}function Du(s,t){s.push((t&4294901760)>>16,t&65535)}const al=(s,t)=>s<t?`${s}-${t}`:`${t}-${s}`;class Sw{constructor(){this.data={keys:[]}}get(t,e){const n=al(t,e);return this.data[n]}set(t,e,n){const i=al(t,e);this.get(t,e)||this.data.keys.push(i),this.data[i]=n}delete(t,e){const n=al(t,e),i=this.data.keys.indexOf(n);i!==-1&&this.data.keys.splice(i,1),delete this.data[n]}reset(){const t=this.data,e=t.keys;for(;e.length>0;){const n=e.pop();delete t[n]}}}class Ew extends qf{constructor(t){t===void 0&&(t={}),super(),this.dt=-1,this.allowSleep=!!t.allowSleep,this.contacts=[],this.frictionEquations=[],this.quatNormalizeSkip=t.quatNormalizeSkip!==void 0?t.quatNormalizeSkip:0,this.quatNormalizeFast=t.quatNormalizeFast!==void 0?t.quatNormalizeFast:!1,this.time=0,this.stepnumber=0,this.default_dt=1/60,this.nextId=0,this.gravity=new E,t.gravity&&this.gravity.copy(t.gravity),t.frictionGravity&&(this.frictionGravity=new E,this.frictionGravity.copy(t.frictionGravity)),this.broadphase=t.broadphase!==void 0?t.broadphase:new Eb,this.bodies=[],this.hasActiveBodies=!1,this.solver=t.solver!==void 0?t.solver:new cM,this.constraints=[],this.narrowphase=new mM(this),this.collisionMatrix=new mu,this.collisionMatrixPrevious=new mu,this.bodyOverlapKeeper=new Ru,this.shapeOverlapKeeper=new Ru,this.contactmaterials=[],this.contactMaterialTable=new Sw,this.defaultMaterial=new ji("default"),this.defaultContactMaterial=new Vs(this.defaultMaterial,this.defaultMaterial,{friction:.3,restitution:0}),this.doProfiling=!1,this.profile={solve:0,makeContactConstraints:0,broadphase:0,integrate:0,narrowphase:0},this.accumulator=0,this.subsystems=[],this.addBodyEvent={type:"addBody",body:null},this.removeBodyEvent={type:"removeBody",body:null},this.idToBodyMap={},this.broadphase.setWorld(this)}getContactMaterial(t,e){return this.contactMaterialTable.get(t.id,e.id)}collisionMatrixTick(){const t=this.collisionMatrixPrevious;this.collisionMatrixPrevious=this.collisionMatrix,this.collisionMatrix=t,this.collisionMatrix.reset(),this.bodyOverlapKeeper.tick(),this.shapeOverlapKeeper.tick()}addConstraint(t){this.constraints.push(t)}removeConstraint(t){const e=this.constraints.indexOf(t);e!==-1&&this.constraints.splice(e,1)}rayTest(t,e,n){n instanceof Ko?this.raycastClosest(t,e,{skipBackfaces:!0},n):this.raycastAll(t,e,{skipBackfaces:!0},n)}raycastAll(t,e,n,i){return n===void 0&&(n={}),n.mode=xe.ALL,n.from=t,n.to=e,n.callback=i,ll.intersectWorld(this,n)}raycastAny(t,e,n,i){return n===void 0&&(n={}),n.mode=xe.ANY,n.from=t,n.to=e,n.result=i,ll.intersectWorld(this,n)}raycastClosest(t,e,n,i){return n===void 0&&(n={}),n.mode=xe.CLOSEST,n.from=t,n.to=e,n.result=i,ll.intersectWorld(this,n)}addBody(t){this.bodies.includes(t)||(t.index=this.bodies.length,this.bodies.push(t),t.world=this,t.initPosition.copy(t.position),t.initVelocity.copy(t.velocity),t.timeLastSleepy=this.time,t instanceof ft&&(t.initAngularVelocity.copy(t.angularVelocity),t.initQuaternion.copy(t.quaternion)),this.collisionMatrix.setNumObjects(this.bodies.length),this.addBodyEvent.body=t,this.idToBodyMap[t.id]=t,this.dispatchEvent(this.addBodyEvent))}removeBody(t){t.world=null;const e=this.bodies.length-1,n=this.bodies,i=n.indexOf(t);if(i!==-1){n.splice(i,1);for(let r=0;r!==n.length;r++)n[r].index=r;this.collisionMatrix.setNumObjects(e),this.removeBodyEvent.body=t,delete this.idToBodyMap[t.id],this.dispatchEvent(this.removeBodyEvent)}}getBodyById(t){return this.idToBodyMap[t]}getShapeById(t){const e=this.bodies;for(let n=0;n<e.length;n++){const i=e[n].shapes;for(let r=0;r<i.length;r++){const o=i[r];if(o.id===t)return o}}return null}addContactMaterial(t){this.contactmaterials.push(t),this.contactMaterialTable.set(t.materials[0].id,t.materials[1].id,t)}removeContactMaterial(t){const e=this.contactmaterials.indexOf(t);e!==-1&&(this.contactmaterials.splice(e,1),this.contactMaterialTable.delete(t.materials[0].id,t.materials[1].id))}fixedStep(t,e){t===void 0&&(t=1/60),e===void 0&&(e=10);const n=ye.now()/1e3;if(!this.lastCallTime)this.step(t,void 0,e);else{const i=n-this.lastCallTime;this.step(t,i,e)}this.lastCallTime=n}step(t,e,n){if(n===void 0&&(n=10),e===void 0)this.internalStep(t),this.time+=t;else{this.accumulator+=e;const i=ye.now();let r=0;for(;this.accumulator>=t&&r<n&&(this.internalStep(t),this.accumulator-=t,r++,!(ye.now()-i>t*1e3)););this.accumulator=this.accumulator%t;const o=this.accumulator/t;for(let a=0;a!==this.bodies.length;a++){const l=this.bodies[a];l.previousPosition.lerp(l.position,o,l.interpolatedPosition),l.previousQuaternion.slerp(l.quaternion,o,l.interpolatedQuaternion),l.previousQuaternion.normalize()}this.time+=e}}internalStep(t){this.dt=t;const e=this.contacts,n=Lw,i=Rw,r=this.bodies.length,o=this.bodies,a=this.solver,l=this.gravity,c=this.doProfiling,h=this.profile,u=ft.DYNAMIC;let d=-1/0;const f=this.constraints,g=Pw;l.length();const _=l.x,m=l.y,p=l.z;let x=0;for(c&&(d=ye.now()),x=0;x!==r;x++){const C=o[x];if(C.type===u){const D=C.force,P=C.mass;D.x+=P*_,D.y+=P*m,D.z+=P*p}}for(let C=0,D=this.subsystems.length;C!==D;C++)this.subsystems[C].update();c&&(d=ye.now()),n.length=0,i.length=0,this.broadphase.collisionPairs(this,n,i),c&&(h.broadphase=ye.now()-d);let w=f.length;for(x=0;x!==w;x++){const C=f[x];if(!C.collideConnected)for(let D=n.length-1;D>=0;D-=1)(C.bodyA===n[D]&&C.bodyB===i[D]||C.bodyB===n[D]&&C.bodyA===i[D])&&(n.splice(D,1),i.splice(D,1))}this.collisionMatrixTick(),c&&(d=ye.now());const v=Cw,y=e.length;for(x=0;x!==y;x++)v.push(e[x]);e.length=0;const S=this.frictionEquations.length;for(x=0;x!==S;x++)g.push(this.frictionEquations[x]);for(this.frictionEquations.length=0,this.narrowphase.getContacts(n,i,this,e,v,this.frictionEquations,g),c&&(h.narrowphase=ye.now()-d),c&&(d=ye.now()),x=0;x<this.frictionEquations.length;x++)a.addEquation(this.frictionEquations[x]);const T=e.length;for(let C=0;C!==T;C++){const D=e[C],P=D.bi,O=D.bj,V=D.si,B=D.sj;let j;if(P.material&&O.material?j=this.getContactMaterial(P.material,O.material)||this.defaultContactMaterial:j=this.defaultContactMaterial,j.friction,P.material&&O.material&&(P.material.friction>=0&&O.material.friction>=0&&P.material.friction*O.material.friction,P.material.restitution>=0&&O.material.restitution>=0&&(D.restitution=P.material.restitution*O.material.restitution)),a.addEquation(D),P.allowSleep&&P.type===ft.DYNAMIC&&P.sleepState===ft.SLEEPING&&O.sleepState===ft.AWAKE&&O.type!==ft.STATIC){const $=O.velocity.lengthSquared()+O.angularVelocity.lengthSquared(),ct=O.sleepSpeedLimit**2;$>=ct*2&&(P.wakeUpAfterNarrowphase=!0)}if(O.allowSleep&&O.type===ft.DYNAMIC&&O.sleepState===ft.SLEEPING&&P.sleepState===ft.AWAKE&&P.type!==ft.STATIC){const $=P.velocity.lengthSquared()+P.angularVelocity.lengthSquared(),ct=P.sleepSpeedLimit**2;$>=ct*2&&(O.wakeUpAfterNarrowphase=!0)}this.collisionMatrix.set(P,O,!0),this.collisionMatrixPrevious.get(P,O)||(tr.body=O,tr.contact=D,P.dispatchEvent(tr),tr.body=P,O.dispatchEvent(tr)),this.bodyOverlapKeeper.set(P.id,O.id),this.shapeOverlapKeeper.set(V.id,B.id)}for(this.emitContactEvents(),c&&(h.makeContactConstraints=ye.now()-d,d=ye.now()),x=0;x!==r;x++){const C=o[x];C.wakeUpAfterNarrowphase&&(C.wakeUp(),C.wakeUpAfterNarrowphase=!1)}for(w=f.length,x=0;x!==w;x++){const C=f[x];C.update();for(let D=0,P=C.equations.length;D!==P;D++){const O=C.equations[D];a.addEquation(O)}}a.solve(t,this),c&&(h.solve=ye.now()-d),a.removeAllEquations();const A=Math.pow;for(x=0;x!==r;x++){const C=o[x];if(C.type&u){const D=A(1-C.linearDamping,t),P=C.velocity;P.scale(D,P);const O=C.angularVelocity;if(O){const V=A(1-C.angularDamping,t);O.scale(V,O)}}}this.dispatchEvent(Tw),c&&(d=ye.now());const M=this.stepnumber%(this.quatNormalizeSkip+1)===0,L=this.quatNormalizeFast;for(x=0;x!==r;x++)o[x].integrate(t,M,L);this.clearForces(),this.broadphase.dirty=!0,c&&(h.integrate=ye.now()-d),this.stepnumber+=1,this.dispatchEvent(Aw);let I=!0;if(this.allowSleep)for(I=!1,x=0;x!==r;x++){const C=o[x];C.sleepTick(this.time),C.sleepState!==ft.SLEEPING&&(I=!0)}this.hasActiveBodies=I}emitContactEvents(){const t=this.hasAnyEventListener("beginContact"),e=this.hasAnyEventListener("endContact");if((t||e)&&this.bodyOverlapKeeper.getDiff(Wn,Gn),t){for(let r=0,o=Wn.length;r<o;r+=2)er.bodyA=this.getBodyById(Wn[r]),er.bodyB=this.getBodyById(Wn[r+1]),this.dispatchEvent(er);er.bodyA=er.bodyB=null}if(e){for(let r=0,o=Gn.length;r<o;r+=2)nr.bodyA=this.getBodyById(Gn[r]),nr.bodyB=this.getBodyById(Gn[r+1]),this.dispatchEvent(nr);nr.bodyA=nr.bodyB=null}Wn.length=Gn.length=0;const n=this.hasAnyEventListener("beginShapeContact"),i=this.hasAnyEventListener("endShapeContact");if((n||i)&&this.shapeOverlapKeeper.getDiff(Wn,Gn),n){for(let r=0,o=Wn.length;r<o;r+=2){const a=this.getShapeById(Wn[r]),l=this.getShapeById(Wn[r+1]);qn.shapeA=a,qn.shapeB=l,a&&(qn.bodyA=a.body),l&&(qn.bodyB=l.body),this.dispatchEvent(qn)}qn.bodyA=qn.bodyB=qn.shapeA=qn.shapeB=null}if(i){for(let r=0,o=Gn.length;r<o;r+=2){const a=this.getShapeById(Gn[r]),l=this.getShapeById(Gn[r+1]);jn.shapeA=a,jn.shapeB=l,a&&(jn.bodyA=a.body),l&&(jn.bodyB=l.body),this.dispatchEvent(jn)}jn.bodyA=jn.bodyB=jn.shapeA=jn.shapeB=null}}clearForces(){const t=this.bodies,e=t.length;for(let n=0;n!==e;n++){const i=t[n];i.force,i.torque,i.force.set(0,0,0),i.torque.set(0,0,0)}}}new en;const ll=new xe,ye=globalThis.performance||{};if(!ye.now){let s=Date.now();ye.timing&&ye.timing.navigationStart&&(s=ye.timing.navigationStart),ye.now=()=>Date.now()-s}new E;const Aw={type:"postStep"},Tw={type:"preStep"},tr={type:ft.COLLIDE_EVENT_NAME,body:null,contact:null},Cw=[],Pw=[],Lw=[],Rw=[],Wn=[],Gn=[],er={type:"beginContact",bodyA:null,bodyB:null},nr={type:"endContact",bodyA:null,bodyB:null},qn={type:"beginShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},jn={type:"endShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},Iu={type:"change"},cl={type:"start"},Fu={type:"end"};class Dw extends ns{constructor(t,e){super(),this.object=t,this.domElement=e,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new U,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:rs.ROTATE,MIDDLE:rs.DOLLY,RIGHT:rs.PAN},this.touches={ONE:os.ROTATE,TWO:os.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return a.phi},this.getAzimuthalAngle=function(){return a.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(k){k.addEventListener("keydown",Yt),this._domElementKeyEvents=k},this.stopListenToKeyEvents=function(){this._domElementKeyEvents.removeEventListener("keydown",Yt),this._domElementKeyEvents=null},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(Iu),n.update(),r=i.NONE},this.update=function(){const k=new U,et=new Ji().setFromUnitVectors(t.up,new U(0,1,0)),Y=et.clone().invert(),dt=new U,_t=new Ji,yt=2*Math.PI;return function(){const vt=n.object.position;k.copy(vt).sub(n.target),k.applyQuaternion(et),a.setFromVector3(k),n.autoRotate&&r===i.NONE&&b(T()),n.enableDamping?(a.theta+=l.theta*n.dampingFactor,a.phi+=l.phi*n.dampingFactor):(a.theta+=l.theta,a.phi+=l.phi);let Tt=n.minAzimuthAngle,Ft=n.maxAzimuthAngle;return isFinite(Tt)&&isFinite(Ft)&&(Tt<-Math.PI?Tt+=yt:Tt>Math.PI&&(Tt-=yt),Ft<-Math.PI?Ft+=yt:Ft>Math.PI&&(Ft-=yt),Tt<=Ft?a.theta=Math.max(Tt,Math.min(Ft,a.theta)):a.theta=a.theta>(Tt+Ft)/2?Math.max(Tt,a.theta):Math.min(Ft,a.theta)),a.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,a.phi)),a.makeSafe(),a.radius*=c,a.radius=Math.max(n.minDistance,Math.min(n.maxDistance,a.radius)),n.enableDamping===!0?n.target.addScaledVector(h,n.dampingFactor):n.target.add(h),k.setFromSpherical(a),k.applyQuaternion(Y),vt.copy(n.target).add(k),n.object.lookAt(n.target),n.enableDamping===!0?(l.theta*=1-n.dampingFactor,l.phi*=1-n.dampingFactor,h.multiplyScalar(1-n.dampingFactor)):(l.set(0,0,0),h.set(0,0,0)),c=1,u||dt.distanceToSquared(n.object.position)>o||8*(1-_t.dot(n.object.quaternion))>o?(n.dispatchEvent(Iu),dt.copy(n.object.position),_t.copy(n.object.quaternion),u=!1,!0):!1}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",R),n.domElement.removeEventListener("pointerdown",Pt),n.domElement.removeEventListener("pointercancel",re),n.domElement.removeEventListener("wheel",Gt),n.domElement.removeEventListener("pointermove",Jt),n.domElement.removeEventListener("pointerup",re),n._domElementKeyEvents!==null&&(n._domElementKeyEvents.removeEventListener("keydown",Yt),n._domElementKeyEvents=null)};const n=this,i={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let r=i.NONE;const o=1e-6,a=new uu,l=new uu;let c=1;const h=new U;let u=!1;const d=new Lt,f=new Lt,g=new Lt,_=new Lt,m=new Lt,p=new Lt,x=new Lt,w=new Lt,v=new Lt,y=[],S={};function T(){return 2*Math.PI/60/60*n.autoRotateSpeed}function A(){return Math.pow(.95,n.zoomSpeed)}function b(k){l.theta-=k}function M(k){l.phi-=k}const L=function(){const k=new U;return function(Y,dt){k.setFromMatrixColumn(dt,0),k.multiplyScalar(-Y),h.add(k)}}(),I=function(){const k=new U;return function(Y,dt){n.screenSpacePanning===!0?k.setFromMatrixColumn(dt,1):(k.setFromMatrixColumn(dt,0),k.crossVectors(n.object.up,k)),k.multiplyScalar(Y),h.add(k)}}(),C=function(){const k=new U;return function(Y,dt){const _t=n.domElement;if(n.object.isPerspectiveCamera){const yt=n.object.position;k.copy(yt).sub(n.target);let pt=k.length();pt*=Math.tan(n.object.fov/2*Math.PI/180),L(2*Y*pt/_t.clientHeight,n.object.matrix),I(2*dt*pt/_t.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(L(Y*(n.object.right-n.object.left)/n.object.zoom/_t.clientWidth,n.object.matrix),I(dt*(n.object.top-n.object.bottom)/n.object.zoom/_t.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function D(k){n.object.isPerspectiveCamera?c/=k:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*k)),n.object.updateProjectionMatrix(),u=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function P(k){n.object.isPerspectiveCamera?c*=k:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/k)),n.object.updateProjectionMatrix(),u=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function O(k){d.set(k.clientX,k.clientY)}function V(k){x.set(k.clientX,k.clientY)}function B(k){_.set(k.clientX,k.clientY)}function j(k){f.set(k.clientX,k.clientY),g.subVectors(f,d).multiplyScalar(n.rotateSpeed);const et=n.domElement;b(2*Math.PI*g.x/et.clientHeight),M(2*Math.PI*g.y/et.clientHeight),d.copy(f),n.update()}function $(k){w.set(k.clientX,k.clientY),v.subVectors(w,x),v.y>0?D(A()):v.y<0&&P(A()),x.copy(w),n.update()}function ct(k){m.set(k.clientX,k.clientY),p.subVectors(m,_).multiplyScalar(n.panSpeed),C(p.x,p.y),_.copy(m),n.update()}function G(k){k.deltaY<0?P(A()):k.deltaY>0&&D(A()),n.update()}function q(k){let et=!1;switch(k.code){case n.keys.UP:k.ctrlKey||k.metaKey||k.shiftKey?M(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):C(0,n.keyPanSpeed),et=!0;break;case n.keys.BOTTOM:k.ctrlKey||k.metaKey||k.shiftKey?M(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):C(0,-n.keyPanSpeed),et=!0;break;case n.keys.LEFT:k.ctrlKey||k.metaKey||k.shiftKey?b(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):C(n.keyPanSpeed,0),et=!0;break;case n.keys.RIGHT:k.ctrlKey||k.metaKey||k.shiftKey?b(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):C(-n.keyPanSpeed,0),et=!0;break}et&&(k.preventDefault(),n.update())}function J(){if(y.length===1)d.set(y[0].pageX,y[0].pageY);else{const k=.5*(y[0].pageX+y[1].pageX),et=.5*(y[0].pageY+y[1].pageY);d.set(k,et)}}function ot(){if(y.length===1)_.set(y[0].pageX,y[0].pageY);else{const k=.5*(y[0].pageX+y[1].pageX),et=.5*(y[0].pageY+y[1].pageY);_.set(k,et)}}function at(){const k=y[0].pageX-y[1].pageX,et=y[0].pageY-y[1].pageY,Y=Math.sqrt(k*k+et*et);x.set(0,Y)}function X(){n.enableZoom&&at(),n.enablePan&&ot()}function Et(){n.enableZoom&&at(),n.enableRotate&&J()}function St(k){if(y.length==1)f.set(k.pageX,k.pageY);else{const Y=ut(k),dt=.5*(k.pageX+Y.x),_t=.5*(k.pageY+Y.y);f.set(dt,_t)}g.subVectors(f,d).multiplyScalar(n.rotateSpeed);const et=n.domElement;b(2*Math.PI*g.x/et.clientHeight),M(2*Math.PI*g.y/et.clientHeight),d.copy(f)}function st(k){if(y.length===1)m.set(k.pageX,k.pageY);else{const et=ut(k),Y=.5*(k.pageX+et.x),dt=.5*(k.pageY+et.y);m.set(Y,dt)}p.subVectors(m,_).multiplyScalar(n.panSpeed),C(p.x,p.y),_.copy(m)}function Mt(k){const et=ut(k),Y=k.pageX-et.x,dt=k.pageY-et.y,_t=Math.sqrt(Y*Y+dt*dt);w.set(0,_t),v.set(0,Math.pow(w.y/x.y,n.zoomSpeed)),D(v.y),x.copy(w)}function Ht(k){n.enableZoom&&Mt(k),n.enablePan&&st(k)}function xt(k){n.enableZoom&&Mt(k),n.enableRotate&&St(k)}function Pt(k){n.enabled!==!1&&(y.length===0&&(n.domElement.setPointerCapture(k.pointerId),n.domElement.addEventListener("pointermove",Jt),n.domElement.addEventListener("pointerup",re)),K(k),k.pointerType==="touch"?Pe(k):me(k))}function Jt(k){n.enabled!==!1&&(k.pointerType==="touch"?z(k):de(k))}function re(k){nt(k),y.length===0&&(n.domElement.releasePointerCapture(k.pointerId),n.domElement.removeEventListener("pointermove",Jt),n.domElement.removeEventListener("pointerup",re)),n.dispatchEvent(Fu),r=i.NONE}function me(k){let et;switch(k.button){case 0:et=n.mouseButtons.LEFT;break;case 1:et=n.mouseButtons.MIDDLE;break;case 2:et=n.mouseButtons.RIGHT;break;default:et=-1}switch(et){case rs.DOLLY:if(n.enableZoom===!1)return;V(k),r=i.DOLLY;break;case rs.ROTATE:if(k.ctrlKey||k.metaKey||k.shiftKey){if(n.enablePan===!1)return;B(k),r=i.PAN}else{if(n.enableRotate===!1)return;O(k),r=i.ROTATE}break;case rs.PAN:if(k.ctrlKey||k.metaKey||k.shiftKey){if(n.enableRotate===!1)return;O(k),r=i.ROTATE}else{if(n.enablePan===!1)return;B(k),r=i.PAN}break;default:r=i.NONE}r!==i.NONE&&n.dispatchEvent(cl)}function de(k){switch(r){case i.ROTATE:if(n.enableRotate===!1)return;j(k);break;case i.DOLLY:if(n.enableZoom===!1)return;$(k);break;case i.PAN:if(n.enablePan===!1)return;ct(k);break}}function Gt(k){n.enabled===!1||n.enableZoom===!1||r!==i.NONE||(k.preventDefault(),n.dispatchEvent(cl),G(k),n.dispatchEvent(Fu))}function Yt(k){n.enabled===!1||n.enablePan===!1||q(k)}function Pe(k){switch(rt(k),y.length){case 1:switch(n.touches.ONE){case os.ROTATE:if(n.enableRotate===!1)return;J(),r=i.TOUCH_ROTATE;break;case os.PAN:if(n.enablePan===!1)return;ot(),r=i.TOUCH_PAN;break;default:r=i.NONE}break;case 2:switch(n.touches.TWO){case os.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;X(),r=i.TOUCH_DOLLY_PAN;break;case os.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;Et(),r=i.TOUCH_DOLLY_ROTATE;break;default:r=i.NONE}break;default:r=i.NONE}r!==i.NONE&&n.dispatchEvent(cl)}function z(k){switch(rt(k),r){case i.TOUCH_ROTATE:if(n.enableRotate===!1)return;St(k),n.update();break;case i.TOUCH_PAN:if(n.enablePan===!1)return;st(k),n.update();break;case i.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Ht(k),n.update();break;case i.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;xt(k),n.update();break;default:r=i.NONE}}function R(k){n.enabled!==!1&&k.preventDefault()}function K(k){y.push(k)}function nt(k){delete S[k.pointerId];for(let et=0;et<y.length;et++)if(y[et].pointerId==k.pointerId){y.splice(et,1);return}}function rt(k){let et=S[k.pointerId];et===void 0&&(et=new Lt,S[k.pointerId]=et),et.set(k.pageX,k.pageY)}function ut(k){const et=k.pointerId===y[0].pointerId?y[1]:y[0];return S[et.pointerId]}n.domElement.addEventListener("contextmenu",R),n.domElement.addEventListener("pointerdown",Pt),n.domElement.addEventListener("pointercancel",re),n.domElement.addEventListener("wheel",Gt,{passive:!1}),this.update()}}var yr=function(){var s=0,t=document.createElement("div");t.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",t.addEventListener("click",function(h){h.preventDefault(),n(++s%t.children.length)},!1);function e(h){return t.appendChild(h.dom),h}function n(h){for(var u=0;u<t.children.length;u++)t.children[u].style.display=u===h?"block":"none";s=h}var i=(performance||Date).now(),r=i,o=0,a=e(new yr.Panel("FPS","#0ff","#002")),l=e(new yr.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var c=e(new yr.Panel("MB","#f08","#201"));return n(0),{REVISION:16,dom:t,addPanel:e,showPanel:n,begin:function(){i=(performance||Date).now()},end:function(){o++;var h=(performance||Date).now();if(l.update(h-i,200),h>=r+1e3&&(a.update(o*1e3/(h-r),100),r=h,o=0,c)){var u=performance.memory;c.update(u.usedJSHeapSize/1048576,u.jsHeapSizeLimit/1048576)}return h},update:function(){i=this.end()},domElement:t,setMode:n}};yr.Panel=function(s,t,e){var n=1/0,i=0,r=Math.round,o=r(window.devicePixelRatio||1),a=80*o,l=48*o,c=3*o,h=2*o,u=3*o,d=15*o,f=74*o,g=30*o,_=document.createElement("canvas");_.width=a,_.height=l,_.style.cssText="width:80px;height:48px";var m=_.getContext("2d");return m.font="bold "+9*o+"px Helvetica,Arial,sans-serif",m.textBaseline="top",m.fillStyle=e,m.fillRect(0,0,a,l),m.fillStyle=t,m.fillText(s,c,h),m.fillRect(u,d,f,g),m.fillStyle=e,m.globalAlpha=.9,m.fillRect(u,d,f,g),{dom:_,update:function(p,x){n=Math.min(n,p),i=Math.max(i,p),m.fillStyle=e,m.globalAlpha=1,m.fillRect(0,0,a,d),m.fillStyle=t,m.fillText(r(p)+" "+s+" ("+r(n)+"-"+r(i)+")",c,h),m.drawImage(_,u+o,d,f-o,g,u,d,f-o,g),m.fillRect(u+f-o,d,o,g),m.fillStyle=e,m.globalAlpha=.9,m.fillRect(u+f-o,d,o,r((1-p/x)*g))}}};var mn=(s=>(s[s.GROUP1=1]="GROUP1",s[s.GROUP2=2]="GROUP2",s[s.GROUP3=4]="GROUP3",s[s.GROUP4=8]="GROUP4",s))(mn||{});function Iw(s){return s&&s.__esModule&&Object.prototype.hasOwnProperty.call(s,"default")?s.default:s}var np={},ip={},pc=Fw;function Fw(s,t,e){return s[0]=t[0]-e[0],s[1]=t[1]-e[1],s[2]=t[2]-e[2],s}var mc=Ow;function Ow(s,t,e){var n=t[0],i=t[1],r=t[2],o=e[0],a=e[1],l=e[2];return s[0]=i*l-r*a,s[1]=r*o-n*l,s[2]=n*a-i*o,s}var zw=kw;function kw(s){var t=s[0],e=s[1],n=s[2];return t*t+e*e+n*n}var Ou=pc,Nw=mc,zu=zw,hl=[],ku=[],Bw=[],Uw=function(s,t,e){Ou(hl,e,t),Ou(ku,s,t);var n=zu(Nw(Bw,ku,hl)),i=zu(hl);if(i===0)throw Error("a and b are the same point");return n/i},Vw=Uw,Hw=function(s,t,e){return Math.sqrt(Vw(s,t,e))},sp=Ww;function Ww(s,t){var e=t[0],n=t[1],i=t[2],r=e*e+n*n+i*i;return r>0&&(r=1/Math.sqrt(r),s[0]=t[0]*r,s[1]=t[1]*r,s[2]=t[2]*r),s}var Gw=sp,Nu=pc,qw=mc,Bu=[0,0,0],rp=jw;function jw(s,t,e,n){return Nu(s,t,e),Nu(Bu,e,n),qw(s,s,Bu),Gw(s,s)}var op=Xw;function Xw(s,t){return s[0]*t[0]+s[1]*t[1]+s[2]*t[2]}var ap={};(function(s){Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0;function t(r,o){if(!(r instanceof o))throw new TypeError("Cannot call a class as a function")}function e(r,o){for(var a=0;a<o.length;a++){var l=o[a];l.enumerable=l.enumerable||!1,l.configurable=!0,"value"in l&&(l.writable=!0),Object.defineProperty(r,l.key,l)}}function n(r,o,a){return o&&e(r.prototype,o),a&&e(r,a),Object.defineProperty(r,"prototype",{writable:!1}),r}var i=function(){function r(){t(this,r),this.head=null,this.tail=null}return n(r,[{key:"clear",value:function(){this.head=this.tail=null}},{key:"insertBefore",value:function(a,l){l.prev=a.prev,l.next=a,l.prev?l.prev.next=l:this.head=l,a.prev=l}},{key:"insertAfter",value:function(a,l){l.prev=a,l.next=a.next,l.next?l.next.prev=l:this.tail=l,a.next=l}},{key:"add",value:function(a){this.head?this.tail.next=a:this.head=a,a.prev=this.tail,a.next=null,this.tail=a}},{key:"addAll",value:function(a){for(this.head?this.tail.next=a:this.head=a,a.prev=this.tail;a.next;)a=a.next;this.tail=a}},{key:"remove",value:function(a){a.prev?a.prev.next=a.next:this.head=a.next,a.next?a.next.prev=a.prev:this.tail=a.prev}},{key:"removeChain",value:function(a,l){a.prev?a.prev.next=l.next:this.head=l.next,l.next?l.next.prev=a.prev:this.tail=a.prev}},{key:"first",value:function(){return this.head}},{key:"isEmpty",value:function(){return!this.head}}]),r}();s.default=i})(ap);var lp={};(function(s){Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0;function t(r,o){for(var a=0;a<o.length;a++){var l=o[a];l.enumerable=l.enumerable||!1,l.configurable=!0,"value"in l&&(l.writable=!0),Object.defineProperty(r,l.key,l)}}function e(r,o,a){return o&&t(r.prototype,o),a&&t(r,a),Object.defineProperty(r,"prototype",{writable:!1}),r}function n(r,o){if(!(r instanceof o))throw new TypeError("Cannot call a class as a function")}var i=e(function r(o,a){n(this,r),this.point=o,this.index=a,this.next=null,this.prev=null,this.face=null});s.default=i})(lp);var cp={},Yw=$w;function $w(s,t,e){return s[0]=t[0]+e[0],s[1]=t[1]+e[1],s[2]=t[2]+e[2],s}var Kw=Zw;function Zw(s,t){return s[0]=t[0],s[1]=t[1],s[2]=t[2],s}var Jw=Qw;function Qw(s){var t=s[0],e=s[1],n=s[2];return Math.sqrt(t*t+e*e+n*n)}var tS=eS;function eS(s,t,e){return s[0]=t[0]*e,s[1]=t[1]*e,s[2]=t[2]*e,s}var nS=iS;function iS(s,t,e,n){return s[0]=t[0]+e[0]*n,s[1]=t[1]+e[1]*n,s[2]=t[2]+e[2]*n,s}var hp={},sS=rS;function rS(s,t){var e=t[0]-s[0],n=t[1]-s[1],i=t[2]-s[2];return Math.sqrt(e*e+n*n+i*i)}var oS=aS;function aS(s,t){var e=t[0]-s[0],n=t[1]-s[1],i=t[2]-s[2];return e*e+n*n+i*i}var zl={exports:{}},ul,Uu;function lS(){if(Uu)return ul;Uu=1;var s=1e3,t=s*60,e=t*60,n=e*24,i=n*7,r=n*365.25;ul=function(h,u){u=u||{};var d=typeof h;if(d==="string"&&h.length>0)return o(h);if(d==="number"&&isFinite(h))return u.long?l(h):a(h);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(h))};function o(h){if(h=String(h),!(h.length>100)){var u=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(h);if(u){var d=parseFloat(u[1]),f=(u[2]||"ms").toLowerCase();switch(f){case"years":case"year":case"yrs":case"yr":case"y":return d*r;case"weeks":case"week":case"w":return d*i;case"days":case"day":case"d":return d*n;case"hours":case"hour":case"hrs":case"hr":case"h":return d*e;case"minutes":case"minute":case"mins":case"min":case"m":return d*t;case"seconds":case"second":case"secs":case"sec":case"s":return d*s;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return d;default:return}}}}function a(h){var u=Math.abs(h);return u>=n?Math.round(h/n)+"d":u>=e?Math.round(h/e)+"h":u>=t?Math.round(h/t)+"m":u>=s?Math.round(h/s)+"s":h+"ms"}function l(h){var u=Math.abs(h);return u>=n?c(h,u,n,"day"):u>=e?c(h,u,e,"hour"):u>=t?c(h,u,t,"minute"):u>=s?c(h,u,s,"second"):h+" ms"}function c(h,u,d,f){var g=u>=d*1.5;return Math.round(h/d)+" "+f+(g?"s":"")}return ul}function cS(s){e.debug=e,e.default=e,e.coerce=l,e.disable=r,e.enable=i,e.enabled=o,e.humanize=lS(),e.destroy=c,Object.keys(s).forEach(h=>{e[h]=s[h]}),e.names=[],e.skips=[],e.formatters={};function t(h){let u=0;for(let d=0;d<h.length;d++)u=(u<<5)-u+h.charCodeAt(d),u|=0;return e.colors[Math.abs(u)%e.colors.length]}e.selectColor=t;function e(h){let u,d=null,f,g;function _(...m){if(!_.enabled)return;const p=_,x=Number(new Date),w=x-(u||x);p.diff=w,p.prev=u,p.curr=x,u=x,m[0]=e.coerce(m[0]),typeof m[0]!="string"&&m.unshift("%O");let v=0;m[0]=m[0].replace(/%([a-zA-Z%])/g,(S,T)=>{if(S==="%%")return"%";v++;const A=e.formatters[T];if(typeof A=="function"){const b=m[v];S=A.call(p,b),m.splice(v,1),v--}return S}),e.formatArgs.call(p,m),(p.log||e.log).apply(p,m)}return _.namespace=h,_.useColors=e.useColors(),_.color=e.selectColor(h),_.extend=n,_.destroy=e.destroy,Object.defineProperty(_,"enabled",{enumerable:!0,configurable:!1,get:()=>d!==null?d:(f!==e.namespaces&&(f=e.namespaces,g=e.enabled(h)),g),set:m=>{d=m}}),typeof e.init=="function"&&e.init(_),_}function n(h,u){const d=e(this.namespace+(typeof u>"u"?":":u)+h);return d.log=this.log,d}function i(h){e.save(h),e.namespaces=h,e.names=[],e.skips=[];let u;const d=(typeof h=="string"?h:"").split(/[\s,]+/),f=d.length;for(u=0;u<f;u++)d[u]&&(h=d[u].replace(/\*/g,".*?"),h[0]==="-"?e.skips.push(new RegExp("^"+h.slice(1)+"$")):e.names.push(new RegExp("^"+h+"$")))}function r(){const h=[...e.names.map(a),...e.skips.map(a).map(u=>"-"+u)].join(",");return e.enable(""),h}function o(h){if(h[h.length-1]==="*")return!0;let u,d;for(u=0,d=e.skips.length;u<d;u++)if(e.skips[u].test(h))return!1;for(u=0,d=e.names.length;u<d;u++)if(e.names[u].test(h))return!0;return!1}function a(h){return h.toString().substring(2,h.toString().length-2).replace(/\.\*\?$/,"*")}function l(h){return h instanceof Error?h.stack||h.message:h}function c(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")}return e.enable(e.load()),e}var hS=cS;(function(s,t){var e={};t.formatArgs=i,t.save=r,t.load=o,t.useColors=n,t.storage=a(),t.destroy=(()=>{let c=!1;return()=>{c||(c=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})(),t.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"];function n(){return typeof window<"u"&&window.process&&(window.process.type==="renderer"||window.process.__nwjs)?!0:typeof navigator<"u"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)?!1:typeof document<"u"&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||typeof window<"u"&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||typeof navigator<"u"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||typeof navigator<"u"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)}function i(c){if(c[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+c[0]+(this.useColors?"%c ":" ")+"+"+s.exports.humanize(this.diff),!this.useColors)return;const h="color: "+this.color;c.splice(1,0,h,"color: inherit");let u=0,d=0;c[0].replace(/%[a-zA-Z%]/g,f=>{f!=="%%"&&(u++,f==="%c"&&(d=u))}),c.splice(d,0,h)}t.log=console.debug||console.log||(()=>{});function r(c){try{c?t.storage.setItem("debug",c):t.storage.removeItem("debug")}catch{}}function o(){let c;try{c=t.storage.getItem("debug")}catch{}return!c&&typeof process<"u"&&"env"in process&&(c=e.DEBUG),c}function a(){try{return localStorage}catch{}}s.exports=hS(t);const{formatters:l}=s.exports;l.j=function(c){try{return JSON.stringify(c)}catch(h){return"[UnexpectedJSONParseError]: "+h.message}}})(zl,zl.exports);var gc=zl.exports;(function(s){Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0;var t=n(sS),e=n(oS);function n(c){return c&&c.__esModule?c:{default:c}}function i(c,h){if(!(c instanceof h))throw new TypeError("Cannot call a class as a function")}function r(c,h){for(var u=0;u<h.length;u++){var d=h[u];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(c,d.key,d)}}function o(c,h,u){return h&&r(c.prototype,h),u&&r(c,u),Object.defineProperty(c,"prototype",{writable:!1}),c}var a=gc("halfedge"),l=function(){function c(h,u){i(this,c),this.vertex=h,this.face=u,this.next=null,this.prev=null,this.opposite=null}return o(c,[{key:"head",value:function(){return this.vertex}},{key:"tail",value:function(){return this.prev?this.prev.vertex:null}},{key:"length",value:function(){return this.tail()?(0,t.default)(this.tail().point,this.head().point):-1}},{key:"lengthSquared",value:function(){return this.tail()?(0,e.default)(this.tail().point,this.head().point):-1}},{key:"setOpposite",value:function(u){var d=this;a.enabled&&a("opposite ".concat(d.tail().index," <--> ").concat(d.head().index," between ").concat(d.face.collectIndices(),", ").concat(u.face.collectIndices())),this.opposite=u,u.opposite=this}}]),c}();s.default=l})(hp);(function(s){Object.defineProperty(s,"__esModule",{value:!0}),s.default=s.VISIBLE=s.NON_CONVEX=s.DELETED=void 0;var t=u(op),e=u(Yw),n=u(pc),i=u(mc),r=u(Kw),o=u(Jw),a=u(tS),l=u(nS),c=u(sp),h=u(hp);function u(v){return v&&v.__esModule?v:{default:v}}function d(v,y){if(!(v instanceof y))throw new TypeError("Cannot call a class as a function")}function f(v,y){for(var S=0;S<y.length;S++){var T=y[S];T.enumerable=T.enumerable||!1,T.configurable=!0,"value"in T&&(T.writable=!0),Object.defineProperty(v,T.key,T)}}function g(v,y,S){return y&&f(v.prototype,y),S&&f(v,S),Object.defineProperty(v,"prototype",{writable:!1}),v}var _=gc("face"),m=0;s.VISIBLE=m;var p=1;s.NON_CONVEX=p;var x=2;s.DELETED=x;var w=function(){function v(){d(this,v),this.normal=[],this.centroid=[],this.offset=0,this.outside=null,this.mark=m,this.edge=null,this.nVertices=0}return g(v,[{key:"getEdge",value:function(S){if(typeof S!="number")throw Error("requires a number");for(var T=this.edge;S>0;)T=T.next,S-=1;for(;S<0;)T=T.prev,S+=1;return T}},{key:"computeNormal",value:function(){var S=this.edge,T=S.next,A=T.next,b=(0,n.default)([],T.head().point,S.head().point),M=[],L=[];for(this.nVertices=2,this.normal=[0,0,0];A!==S;)(0,r.default)(L,b),(0,n.default)(b,A.head().point,S.head().point),(0,e.default)(this.normal,this.normal,(0,i.default)(M,L,b)),A=A.next,this.nVertices+=1;this.area=(0,o.default)(this.normal),this.normal=(0,a.default)(this.normal,this.normal,1/this.area)}},{key:"computeNormalMinArea",value:function(S){if(this.computeNormal(),this.area<S){var T,A=0,b=this.edge;do{var M=b.lengthSquared();M>A&&(T=b,A=M),b=b.next}while(b!==this.edge);var L=T.tail().point,I=T.head().point,C=(0,n.default)([],I,L),D=Math.sqrt(A);(0,a.default)(C,C,1/D);var P=(0,t.default)(this.normal,C);(0,l.default)(this.normal,this.normal,C,-P),(0,c.default)(this.normal,this.normal)}}},{key:"computeCentroid",value:function(){this.centroid=[0,0,0];var S=this.edge;do(0,e.default)(this.centroid,this.centroid,S.head().point),S=S.next;while(S!==this.edge);(0,a.default)(this.centroid,this.centroid,1/this.nVertices)}},{key:"computeNormalAndCentroid",value:function(S){typeof S<"u"?this.computeNormalMinArea(S):this.computeNormal(),this.computeCentroid(),this.offset=(0,t.default)(this.normal,this.centroid)}},{key:"distanceToPlane",value:function(S){return(0,t.default)(this.normal,S)-this.offset}},{key:"connectHalfEdges",value:function(S,T){var A;if(S.opposite.face===T.opposite.face){var b=T.opposite.face,M;S===this.edge&&(this.edge=T),b.nVertices===3?(M=T.opposite.prev.opposite,b.mark=x,A=b):(M=T.opposite.next,b.edge===M.prev&&(b.edge=M),M.prev=M.prev.prev,M.prev.next=M),T.prev=S.prev,T.prev.next=T,T.setOpposite(M),b.computeNormalAndCentroid()}else S.next=T,T.prev=S;return A}},{key:"mergeAdjacentFaces",value:function(S,T){var A=S.opposite,b=A.face;T.push(b),b.mark=x;for(var M=S.prev,L=S.next,I=A.prev,C=A.next;M.opposite.face===b;)M=M.prev,C=C.next;for(;L.opposite.face===b;)L=L.next,I=I.prev;var D;for(D=C;D!==I.next;D=D.next)D.face=this;this.edge=L;var P;return P=this.connectHalfEdges(I,L),P&&T.push(P),P=this.connectHalfEdges(M,C),P&&T.push(P),this.computeNormalAndCentroid(),T}},{key:"collectIndices",value:function(){var S=[],T=this.edge;do S.push(T.head().index),T=T.next;while(T!==this.edge);return S}}],[{key:"createTriangle",value:function(S,T,A){var b=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,M=new v,L=new h.default(S,M),I=new h.default(T,M),C=new h.default(A,M);return L.next=C.prev=I,I.next=L.prev=C,C.next=I.prev=L,M.edge=L,M.computeNormalAndCentroid(b),_.enabled&&_("face created %j",M.collectIndices()),M}}]),v}();s.default=w})(cp);(function(s){function t(A){"@babel/helpers - typeof";return t=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(b){return typeof b}:function(b){return b&&typeof Symbol=="function"&&b.constructor===Symbol&&b!==Symbol.prototype?"symbol":typeof b},t(A)}Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0;var e=h(Hw),n=h(rp),i=h(op),r=h(ap),o=h(lp),a=c(cp);function l(A){if(typeof WeakMap!="function")return null;var b=new WeakMap,M=new WeakMap;return(l=function(I){return I?M:b})(A)}function c(A,b){if(!b&&A&&A.__esModule)return A;if(A===null||t(A)!=="object"&&typeof A!="function")return{default:A};var M=l(b);if(M&&M.has(A))return M.get(A);var L={},I=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var C in A)if(C!=="default"&&Object.prototype.hasOwnProperty.call(A,C)){var D=I?Object.getOwnPropertyDescriptor(A,C):null;D&&(D.get||D.set)?Object.defineProperty(L,C,D):L[C]=A[C]}return L.default=A,M&&M.set(A,L),L}function h(A){return A&&A.__esModule?A:{default:A}}function u(A,b){return m(A)||_(A,b)||f(A,b)||d()}function d(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function f(A,b){if(A){if(typeof A=="string")return g(A,b);var M=Object.prototype.toString.call(A).slice(8,-1);if(M==="Object"&&A.constructor&&(M=A.constructor.name),M==="Map"||M==="Set")return Array.from(A);if(M==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(M))return g(A,b)}}function g(A,b){(b==null||b>A.length)&&(b=A.length);for(var M=0,L=new Array(b);M<b;M++)L[M]=A[M];return L}function _(A,b){var M=A==null?null:typeof Symbol<"u"&&A[Symbol.iterator]||A["@@iterator"];if(M!=null){var L=[],I=!0,C=!1,D,P;try{for(M=M.call(A);!(I=(D=M.next()).done)&&(L.push(D.value),!(b&&L.length===b));I=!0);}catch(O){C=!0,P=O}finally{try{!I&&M.return!=null&&M.return()}finally{if(C)throw P}}return L}}function m(A){if(Array.isArray(A))return A}function p(A,b){if(!(A instanceof b))throw new TypeError("Cannot call a class as a function")}function x(A,b){for(var M=0;M<b.length;M++){var L=b[M];L.enumerable=L.enumerable||!1,L.configurable=!0,"value"in L&&(L.writable=!0),Object.defineProperty(A,L.key,L)}}function w(A,b,M){return b&&x(A.prototype,b),M&&x(A,M),Object.defineProperty(A,"prototype",{writable:!1}),A}var v=gc("quickhull"),y=1,S=2,T=function(){function A(b){if(p(this,A),!Array.isArray(b))throw TypeError("input is not a valid array");if(b.length<4)throw Error("cannot build a simplex out of <4 points");this.tolerance=-1,this.nFaces=0,this.nPoints=b.length,this.faces=[],this.newFaces=[],this.claimed=new r.default,this.unclaimed=new r.default,this.vertices=[];for(var M=0;M<b.length;M+=1)this.vertices.push(new o.default(b[M],M));this.discardedFaces=[],this.vertexPointIndices=[]}return w(A,[{key:"addVertexToFace",value:function(M,L){M.face=L,L.outside?this.claimed.insertBefore(L.outside,M):this.claimed.add(M),L.outside=M}},{key:"removeVertexFromFace",value:function(M,L){M===L.outside&&(M.next&&M.next.face===L?L.outside=M.next:L.outside=null),this.claimed.remove(M)}},{key:"removeAllVerticesFromFace",value:function(M){if(M.outside){for(var L=M.outside;L.next&&L.next.face===M;)L=L.next;return this.claimed.removeChain(M.outside,L),L.next=null,M.outside}}},{key:"deleteFaceVertices",value:function(M,L){var I=this.removeAllVerticesFromFace(M);if(I)if(!L)this.unclaimed.addAll(I);else for(var C,D=I;D;D=C){C=D.next;var P=L.distanceToPlane(D.point);P>this.tolerance?this.addVertexToFace(D,L):this.unclaimed.add(D)}}},{key:"resolveUnclaimedPoints",value:function(M){for(var L=this.unclaimed.first(),I=L;I;I=L){L=I.next;for(var C=this.tolerance,D=void 0,P=0;P<M.length;P+=1){var O=M[P];if(O.mark===a.VISIBLE){var V=O.distanceToPlane(I.point);if(V>C&&(C=V,D=O),C>1e3*this.tolerance)break}}D&&this.addVertexToFace(I,D)}}},{key:"computeExtremes",value:function(){var M=this,L=[],I=[],C=[],D=[],P,O;for(P=0;P<3;P+=1)C[P]=D[P]=this.vertices[0];for(P=0;P<3;P+=1)L[P]=I[P]=this.vertices[0].point[P];for(P=1;P<this.vertices.length;P+=1){var V=this.vertices[P],B=V.point;for(O=0;O<3;O+=1)B[O]<L[O]&&(L[O]=B[O],C[O]=V);for(O=0;O<3;O+=1)B[O]>I[O]&&(I[O]=B[O],D[O]=V)}return this.tolerance=3*Number.EPSILON*(Math.max(Math.abs(L[0]),Math.abs(I[0]))+Math.max(Math.abs(L[1]),Math.abs(I[1]))+Math.max(Math.abs(L[2]),Math.abs(I[2]))),v.enabled&&v("tolerance %d",M.tolerance),[C,D]}},{key:"createInitialSimplex",value:function(){var M=this.vertices,L=this.computeExtremes(),I=u(L,2),C=I[0],D=I[1],P,O,V=0,B=0;for(P=0;P<3;P+=1){var j=D[P].point[P]-C[P].point[P];j>V&&(V=j,B=P)}var $=C[B],ct=D[B],G,q;for(V=0,P=0;P<this.vertices.length;P+=1){var J=this.vertices[P];if(J!==$&&J!==ct){var ot=(0,e.default)(J.point,$.point,ct.point);ot>V&&(V=ot,G=J)}}var at=(0,n.default)([],$.point,ct.point,G.point),X=(0,i.default)($.point,at);for(V=-1,P=0;P<this.vertices.length;P+=1){var Et=this.vertices[P];if(Et!==$&&Et!==ct&&Et!==G){var St=Math.abs((0,i.default)(at,Et.point)-X);St>V&&(V=St,q=Et)}}var st=[];if((0,i.default)(q.point,at)-X<0)for(st.push(a.default.createTriangle($,ct,G),a.default.createTriangle(q,ct,$),a.default.createTriangle(q,G,ct),a.default.createTriangle(q,$,G)),P=0;P<3;P+=1){var Mt=(P+1)%3;st[P+1].getEdge(2).setOpposite(st[0].getEdge(Mt)),st[P+1].getEdge(1).setOpposite(st[Mt+1].getEdge(0))}else for(st.push(a.default.createTriangle($,G,ct),a.default.createTriangle(q,$,ct),a.default.createTriangle(q,ct,G),a.default.createTriangle(q,G,$)),P=0;P<3;P+=1){var Ht=(P+1)%3;st[P+1].getEdge(2).setOpposite(st[0].getEdge((3-P)%3)),st[P+1].getEdge(0).setOpposite(st[Ht+1].getEdge(1))}for(P=0;P<4;P+=1)this.faces.push(st[P]);for(P=0;P<M.length;P+=1){var xt=M[P];if(xt!==$&&xt!==ct&&xt!==G&&xt!==q){V=this.tolerance;var Pt=void 0;for(O=0;O<4;O+=1){var Jt=st[O].distanceToPlane(xt.point);Jt>V&&(V=Jt,Pt=st[O])}Pt&&this.addVertexToFace(xt,Pt)}}}},{key:"reindexFaceAndVertices",value:function(){for(var M=[],L=0;L<this.faces.length;L+=1){var I=this.faces[L];I.mark===a.VISIBLE&&M.push(I)}this.faces=M}},{key:"collectFaces",value:function(M){for(var L=[],I=0;I<this.faces.length;I+=1){if(this.faces[I].mark!==a.VISIBLE)throw Error("attempt to include a destroyed face in the hull");var C=this.faces[I].collectIndices();if(M)L.push(C);else for(var D=0;D<C.length-2;D+=1)L.push([C[0],C[D+1],C[D+2]])}return L}},{key:"nextVertexToAdd",value:function(){if(!this.claimed.isEmpty()){var M,L,I=0,C=this.claimed.first().face;for(L=C.outside;L&&L.face===C;L=L.next){var D=C.distanceToPlane(L.point);D>I&&(I=D,M=L)}return M}}},{key:"computeHorizon",value:function(M,L,I,C){this.deleteFaceVertices(I),I.mark=a.DELETED;var D;L?D=L.next:D=L=I.getEdge(0);do{var P=D.opposite,O=P.face;O.mark===a.VISIBLE&&(O.distanceToPlane(M)>this.tolerance?this.computeHorizon(M,P,O,C):C.push(D)),D=D.next}while(D!==L)}},{key:"addAdjoiningFace",value:function(M,L){var I=a.default.createTriangle(M,L.tail(),L.head());return this.faces.push(I),I.getEdge(-1).setOpposite(L.opposite),I.getEdge(0)}},{key:"addNewFaces",value:function(M,L){this.newFaces=[];for(var I,C,D=0;D<L.length;D+=1){var P=L[D],O=this.addAdjoiningFace(M,P);I?O.next.setOpposite(C):I=O,this.newFaces.push(O.face),C=O}I.next.setOpposite(C)}},{key:"oppositeFaceDistance",value:function(M){return M.face.distanceToPlane(M.opposite.face.centroid)}},{key:"doAdjacentMerge",value:function(M,L){var I=M.edge,C=!0,D=0;do{if(D>=M.nVertices)throw Error("merge recursion limit exceeded");var P=I.opposite.face,O=!1;if(L===S?(this.oppositeFaceDistance(I)>-this.tolerance||this.oppositeFaceDistance(I.opposite)>-this.tolerance)&&(O=!0):M.area>P.area?this.oppositeFaceDistance(I)>-this.tolerance?O=!0:this.oppositeFaceDistance(I.opposite)>-this.tolerance&&(C=!1):this.oppositeFaceDistance(I.opposite)>-this.tolerance?O=!0:this.oppositeFaceDistance(I)>-this.tolerance&&(C=!1),O){v("face merge");for(var V=M.mergeAdjacentFaces(I,[]),B=0;B<V.length;B+=1)this.deleteFaceVertices(V[B],M);return!0}I=I.next,D+=1}while(I!==M.edge);return C||(M.mark=a.NON_CONVEX),!1}},{key:"addVertexToHull",value:function(M){var L=[];this.unclaimed.clear(),this.removeVertexFromFace(M,M.face),this.computeHorizon(M.point,null,M.face,L),v.enabled&&v("horizon %j",L.map(function(O){return O.head().index})),this.addNewFaces(M,L),v("first merge");for(var I=0;I<this.newFaces.length;I+=1){var C=this.newFaces[I];if(C.mark===a.VISIBLE)for(;this.doAdjacentMerge(C,y););}v("second merge");for(var D=0;D<this.newFaces.length;D+=1){var P=this.newFaces[D];if(P.mark===a.NON_CONVEX)for(P.mark=a.VISIBLE;this.doAdjacentMerge(P,S););}v("reassigning points to newFaces"),this.resolveUnclaimedPoints(this.newFaces)}},{key:"build",value:function(){var M=0,L;for(this.createInitialSimplex();L=this.nextVertexToAdd();)M+=1,v("== iteration %j ==",M),v("next vertex to add = %d %j",L.index,L.point),this.addVertexToHull(L),v("end");this.reindexFaceAndVertices()}}]),A}();s.default=T})(ip);(function(s){Object.defineProperty(s,"__esModule",{value:!0}),s.default=i,s.isPointInsideHull=r;var t=n(ip),e=n(rp);function n(o){return o&&o.__esModule?o:{default:o}}function i(o){var a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},l=new t.default(o);return l.build(),l.collectFaces(a.skipTriangulation)}function r(o,a,l){for(var c=0;c<l.length;c++){var h=l[c],u=a[h[0]],d=a[h[1]],f=a[h[2]],g=(0,e.default)([],u,d,f),_=[o[0]-u[0],o[1]-u[1],o[2]-u[2]],m=g[0]*_[0]+g[1]*_[1]+g[2]*_[2];if(m>0)return!1}return!0}})(np);const uS=Iw(np);var Zt;(s=>{s.minimumBodyVectors=4,s.maximumBodyVectors=16,s.maximumWheels=7,s.minimalRadius=.4,s.maximalRadius=2,s.minimalWidth=.2,s.maximalWidth=2,s.minDensity=5,s.maxDensity=20,s.maxBodyVectorLength=7})(Zt||(Zt={}));function kl(s,t){let e=60;var n=s*e/t,i=Math.round(Math.sin(.024*n+0)*(e-1)+e),r=Math.round(Math.sin(.024*n+2)*(e-1)+e),o=Math.round(Math.sin(.024*n+4)*(e-1)+e);let a=2;return i=Math.min(255,Math.ceil(i*a)),r=Math.min(255,Math.ceil(r*a)),o=Math.min(255,Math.ceil(o*a)),"rgb("+i+","+r+","+o+")"}function dS(s,t){const e=[.16666666666666666,.041666666666666664,.041666666666666664,.041666666666666664,.016666666666666666,.016666666666666666,.016666666666666666,.008333333333333333,.008333333333333333,.008333333333333333];let n=[0,0,0,0,0,0,0,0,0,0];for(let i=0;i<t.length;i++){let r=t[i][0],o=t[i][1],a=t[i][2],l=s[r][0],c=s[r][1],h=s[r][2],u=s[o][0],d=s[o][1],f=s[o][2],g=s[a][0],_=s[a][1],m=s[a][2],p=u-l,x=d-c,w=f-h,v=g-l,y=_-c,S=m-h,T=x*S-y*w,A=v*w-p*S,b=p*y-v*x,M=dl(l,u,g),L=dl(c,d,_),I=dl(h,f,m);n[0]+=T*M[0],n[1]+=T*M[1],n[4]+=T*M[2],n[2]+=A*L[1],n[5]+=A*L[2],n[3]+=b*I[1],n[6]+=b*I[2],n[7]+=T*(c*M[3]+d*M[4]+_*M[5]),n[8]+=A*(h*L[3]+f*L[4]+m*L[5]),n[9]+=b*(l*I[3]+u*I[4]+g*I[5])}for(let i=0;i<10;i++)n[i]=n[i]*e[i];return[n[0],new E(n[1]/n[0],n[2]/n[0],n[3]/n[0])]}function dl(s,t,e){let n=s+t,i=n+e,r=s*s,o=r+t*n,a=o+e*i,l=s*r+t*o+e*a,c=a+s*(i+s),h=a+t*(i+t),u=a+e*(i+e);return[i,a,l,c,h,u]}function fS(s,t,e,n){let i=Vu(t,s),r=Hu(n,i);if(Math.abs(r)>1e-6){let o=Vu(s,e),a=-Hu(n,o)/r;return a<0?void 0:(i=mS(i,a),pS(s,i))}else return}function Vu(s,t){return[s[0]-t[0],s[1]-t[1],s[2]-t[2]]}function pS(s,t){return[s[0]+t[0],s[1]+t[1],s[2]+t[2]]}function Hu(s,t){return s[0]*t[0]+s[1]*t[1]+s[2]*t[2]}function mS(s,t){return[s[0]*t,s[1]*t,s[2]*t]}function Kt(s,t){return Math.random()*(t-s)+s}function tn(s){let t=[];for(let n=0;n<s.bodyVectors.length;n++)t.push(s.bodyVectors[n].x),t.push(s.bodyVectors[n].y),t.push(s.bodyVectors[n].z);let e=[];return s.wheels.forEach(n=>{e.push(n.radius),e.push(n.width),e.push(n.density),e.push(n.stiffness),e.push(n.posX),e.push(n.posY),e.push(n.posZ),e.push(n.canSteer?1:0)}),[t,e]}function Zo(s,t){let e=[],n=[],i=0;for(t%3!=0&&console.log("Incorrect amount of Bodyvectors during the crossover");i<t;)e.push(new E(s[i],s[i+1],s[i+2])),i=i+3;for((s.length-i)%8!=0&&console.log("Incorrect amount of Wheelvectors during the crossover");i<s.length;){let r={radius:s[i],width:s[i+1],density:s[i+2],stiffness:s[i+3],posX:s[i+4],posY:s[i+5],posZ:s[i+6],canSteer:s[i+7]===1};n.push(r),i=i+8}return{bodyVectors:e,wheels:n}}function Wu(s){let t=[];return s.forEach(e=>{let n=[];n.push(e.x),n.push(e.y),n.push(e.z),t.push(n)}),t}class fl extends oM{constructor(t,e,n,i,r,o){super(),this.wheelMeshes=[],this.visualBody=new ae,this.furthestPosition=new E(0,0,0),this.lowestPoint=100,this.timeOut=0,this.bodyMass=0,this.vehicleMass=0,this.wheelMass=0,this.prevVelocity=0,this.wheelMaterial=new vr({color:1644825}),this.bodyMaterial=new oc({color:12850460}),this.lineMaterial=new Hf({color:255}),this.faces=[],this.hasFinished=!1,this.centeredBodyVectors=[],this.activeWheels=[],this.vehicleGen=t,this.id=o,this.addBody(e,r),this.addWheels(n,r,i),this.adjustPosition()}addBody(t,e){if(this.vehicleGen.bodyVectors.length<4)return;let n=Wu(this.vehicleGen.bodyVectors);this.faces=uS(n,{skipTriangulation:!1});let i=dS(n,this.faces);if(i[0]===0)throw new Error("Body has no volume");this.centeredBodyVectors=this.moveBodyCOMTo0AndUpdateLowestPoint(this.vehicleGen.bodyVectors,i[1]);let r=Wu(this.centeredBodyVectors);this.vehicleMass+=i[0]*10,this.bodyMass=i[0]*10;let o=new ft({mass:this.bodyMass,material:t,position:new E(0,0,0),collisionFilterGroup:mn.GROUP1,collisionFilterMask:mn.GROUP2|mn.GROUP3});this.faces.forEach(a=>{let l=new mi({vertices:[this.centeredBodyVectors[a[0]],this.centeredBodyVectors[a[1]],this.centeredBodyVectors[a[2]]],faces:[[0,1,2]]});o.addShape(l)}),this.chassisBody=o,e!=null&&(this.visualBody=this.createThreeMesh(r,this.faces),e.add(this.visualBody))}addWheels(t,e,n){let i=1e3;for(let r=0;r<this.vehicleGen.wheels.length;r++)t!=null&&(this.addWheelWithMesh(this.vehicleGen.wheels[r].radius,this.vehicleGen.wheels[r].width,this.vehicleGen.wheels[r].posX,this.vehicleGen.wheels[r].posY,this.vehicleGen.wheels[r].posZ,this.vehicleGen.wheels[r].density,this.vehicleGen.wheels[r].stiffness,this.vehicleGen.wheels[r].canSteer,n,t,e),this.activeWheels.push(this.vehicleGen.wheels[r]),i>this.wheelBodies[r].position.y-this.vehicleGen.wheels[r].radius&&(i=this.wheelBodies[r].position.y-this.vehicleGen.wheels[r].radius));i<this.lowestPoint&&(this.lowestPoint=i)}addWheelWithMesh(t,e,n,i,r,o,a,l,c,h,u){h&&this.addPhysicalWheel(t,e,n,i,r,o,a,h,l,c),u!=null&&this.addWheelMesh(t,e,o,u,c)}addPhysicalWheel(t,e,n,i,r,o,a,l,c,h){let u,d;h?(u=new aM(t,t,e,25),d=Math.PI*e*(t*t)):(u=new ep(t),d=Math.PI*e*(t*t));let f=d*o,g=new ft({mass:f,material:l,collisionFilterGroup:mn.GROUP1,collisionFilterMask:mn.GROUP2|mn.GROUP3});const _=new le().setFromEuler(Math.PI/2,0,0);g.addShape(u,new E,_),g.angularDamping=.7,this.addWheel({body:g,position:this.getWheelPosition(n,i,r,t,h?e:t),axis:new E(0,0,-1)}),this.constraints[this.wheelBodies.length-1].equations[1].setSpookParams(1e4+1e6*a,4,1/60),this.constraints[this.wheelBodies.length-1].equations[2].setSpookParams(1e9,1,1/60),this.vehicleMass+=f,this.wheelMass=this.wheelMass+f}addWheelMesh(t,e,n,i,r){let o,a,l;if(r){o=new $o(t,t,e,26,1),a=new $o(t*.8,t*.8,e+.1,20,1),o.rotateZ(Math.PI/2),a.rotateZ(Math.PI/2),o.rotateY(Math.PI/2),a.rotateY(Math.PI/2);let c=new vr;c.color=new Nt(kl(n/10,Zt.maxDensity/10)),l=new ae(o,this.wheelMaterial),l.add(new ae(a,c)),l.add(new ae(new xn(t*.6,t*.2,e+.15),this.wheelMaterial)),l.add(new ae(new xn(t*2,t*.2,e-.05),c))}else{o=new hc(t);let c=new vr;c.color=new Nt(kl(n,Zt.maxDensity)),l=new ae(o,c),l.add(new ae(new xn(t*2,t*.15,t*.15),this.wheelMaterial).rotateZ(90)),l.add(new ae(new xn(t*2,t*.15,t*.15),this.wheelMaterial))}i.add(l),this.wheelMeshes.push(l)}advanceTimeoutAndPosition(t,e,n){const i=this.chassisBody.position;if(i.x<=Math.ceil(this.furthestPosition.x)){if(this.timeOut=this.timeOut+1,this.timeOut>t)return!0}else this.timeOut=0;return this.furthestPosition.x<i.x&&(this.furthestPosition.set(i.x,i.y,i.z),this.furthestPosition.x>=n)?(this.hasFinished=!0,!0):this.chassisBody.velocity.length()-this.prevVelocity>5?!0:(this.prevVelocity=this.chassisBody.velocity.length(),i.y<=e)}disable(){this.visualBody.material instanceof zn&&(this.lineMaterial.color=new Nt("white")),this.wheelMeshes.forEach(t=>{t.material instanceof zn&&(t.material.opacity=.3)})}createThreeMesh(t,e){let n=[];const i=[];e.forEach(u=>{n.push(t[u[0]][0]),n.push(t[u[0]][1]),n.push(t[u[0]][2]),n.push(t[u[1]][0]),n.push(t[u[1]][1]),n.push(t[u[1]][2]),n.push(t[u[2]][0]),n.push(t[u[2]][1]),n.push(t[u[2]][2]),i.push(new U(t[u[0]][0],t[u[0]][1],t[u[0]][2])),i.push(new U(t[u[1]][0],t[u[1]][1],t[u[1]][2])),i.push(new U(t[u[2]][0],t[u[2]][1],t[u[2]][2]))});let r=new ln().setFromPoints(i);const o=this.lineMaterial,a=new Gy(r,o);let l=new Float32Array(n),c=new ln;c.setAttribute("position",new bn(l,3));let h=new ae(c,this.bodyMaterial);return h.add(a),h}updateSteeringAndApplyPower(t){let e=!0;return this.activeWheels.forEach((n,i)=>{let r=this.chassisBody.position.z;if(n.canSteer&&(r<-t/10||r>t/10)){let c=Math.max(-.6,Math.min(.6,r/t));this.setSteeringValue(c,i)}else this.setSteeringValue(0,i);let o=this.wheelBodies[i].angularVelocity.length(),a=this.wheelBodies[i].mass,l=Math.max(0,500+5*this.bodyMass+(a+50)*90-a*(a/7)*o);if(o>40&&(l=0),this.wheelMass>this.bodyMass&&(l=l*(1-this.wheelMass/this.vehicleMass)),l=n.canSteer?l*.7:l,isNaN(l)){console.log("An Error has occured while simulating a vehicle. The corresponding VehicleGen follows:");let c=tn(this.vehicleGen);console.log(c[0]+"|"+c[1]),e=!1}else this.applyWheelForce(l,i)}),e}moveBodyCOMTo0AndUpdateLowestPoint(t,e){let n=[];return t.forEach((i,r)=>{n.push(i.vsub(e)),this.lowestPoint>n[r].y&&(this.lowestPoint=n[r].y-.1)}),n}adjustPosition(){this.chassisBody.position.set(0,-this.lowestPoint+1,0),this.wheelBodies.forEach(t=>{t.position.y+=-this.lowestPoint+1})}getWheelPosition(t,e,n,i,r){let o=new E(1e3,1e3,1e3);this.chassisBody.shapes.forEach(l=>{if(l instanceof mi){let c=l.faceNormals[0],h=l.vertices[0],u=fS([0,0,0],[t,e,n],[h.x,h.y,h.z],[c.x,c.y,c.z]);if(u){let d=new E(u[0],u[1],u[2]);o.length()>d.length()&&(o=d)}}});let a=1+(i>r?r:i)/o.length();return o.scale(a,o),o}}function gS(){let s={bodyVectors:[],wheels:[]},t=Math.floor(Kt(Zt.minimumBodyVectors,Zt.maximumBodyVectors));for(let n=0;n<t;n++)s.bodyVectors.push(dp());let e=Math.floor(Math.random()*Zt.maximumWheels);for(let n=0;n<e;n++)s.wheels.push(up());return s}function up(){return{radius:Kt(Zt.minimalRadius,Zt.maximalRadius),width:Kt(Zt.minimalWidth,Zt.maximalWidth),posX:Kt(-1,1),posY:Kt(-1,1),posZ:Kt(-1,1),stiffness:Math.random(),density:Kt(Zt.maxDensity,Zt.minDensity),canSteer:Math.floor(Math.random()*2)===1}}function dp(){let s=Kt(-Zt.maxBodyVectorLength,Zt.maxBodyVectorLength),t=Kt(-Zt.maxBodyVectorLength,Zt.maxBodyVectorLength),e=Kt(-Zt.maxBodyVectorLength,Zt.maxBodyVectorLength);return new E(s,t,e)}function Pi(s){return+(Math.round(s*1e4)/1e4)}class _S extends Ew{constructor(t,e,n,i,r,o,a,l,c){super(e),this.cameraFocus=new ae,this.groundMaterial=new ji("groundMaterial"),this.wheelMaterialFriction=new ji("friction"),this.bodyMaterial=new ji("bodyMaterial"),this.carIdCounter=0,this.track={trackPieces:[],negativeYBorder:0,threeJSTrackPieces:[],trackWidth:0,finishPosition:new E(0,0,0)},this.render=!1,this.disabled=!1,this.id=o,this.carIdCounter=o*l.batchSize,this.populationManager=l,this.render=c,this.useRealisticWheels=r,this.broadphase=new Rs(this),this.gravity.set(n[0],n[1],n[2]),t==null||t.add(this.cameraFocus),this.initCarGroundContact(i),this.initPopulation(a,t),this.leadingCar=new fl({bodyVectors:[],wheels:[]},void 0,void 0,r,void 0,-1),this.leadingCar.chassisBody.position.set(-1,0,0)}initPopulation(t,e){if(this.populationManager.batchSize-t.length>=0){t.map(n=>{this.addCar(n,e)});for(let n=0;n<this.populationManager.batchSize-t.length;n++)this.addCar(gS(),e)}else for(let n=0;n<this.populationManager.batchSize;n++)this.addCar(t[n],e)}addCar(t,e){try{let n=new fl(t,this.bodyMaterial,this.wheelMaterialFriction,this.useRealisticWheels,this.render?e:void 0,this.carIdCounter++);this.populationManager.addCar(n),n.addToWorld(this)}catch{this.populationManager.fitnessData.push({oldVehicleGen:t,distanceTraveled:0,hasFinished:!1,timeInSteps:0,fitness:0})}}addCars(t){t.forEach(e=>{let n=new fl(e,this.bodyMaterial,this.wheelMaterialFriction,this.useRealisticWheels,void 0,this.carIdCounter++);this.populationManager.addCar(n),n.addToWorld(this)})}extendedStep(t,e){if(this.step(t),this.render){if(!this.populationManager.activeCars.has(this.leadingCar.id))if(this.populationManager.activeCars.size>0)this.leadingCar.chassisBody.position.set(-1,0,0);else{this.disabled=!0;return}this.populationManager.activeCars.forEach(i=>{this.advanceTimeout(i,e),i.updateSteeringAndApplyPower(this.track.trackWidth)||(i.furthestPosition=new E(0,0,0),this.removeVehicle(i)),this.updateScene(i)});let n=this.leadingCar.chassisBody.position;this.cameraFocus.position.set(n.x,n.y,n.z)}else this.populationManager.activeCars.forEach(n=>{this.advanceTimeout(n,e),n.updateSteeringAndApplyPower(this.track.trackWidth)||(n.furthestPosition=new E(0,0,0),this.removeVehicle(n))}),this.populationManager.activeCars.size===0&&(this.disabled=!0)}updateScene(t){const e=t.chassisBody.position,n=t.chassisBody.quaternion;this.leadingCar.chassisBody.position.x<t.chassisBody.position.x&&(this.leadingCar=t),t.visualBody.position.set(e.x,e.y,e.z),t.visualBody.quaternion.set(n.x,n.y,n.z,n.w);for(let i=0;i<t.wheelBodies.length;i++){const r=t.wheelBodies[i].position,o=t.wheelBodies[i].quaternion;t.wheelMeshes[i].position.set(r.x,r.y,r.z),t.wheelMeshes[i].quaternion.set(o.x,o.y,o.z,o.w)}}advanceTimeout(t,e){t.advanceTimeoutAndPosition(e,this.track.negativeYBorder,this.track.finishPosition.x)&&this.removeVehicle(t)}removeVehicle(t){this.populationManager.disableCar(t,this.stepnumber,this.track.finishPosition.x)&&t.removeFromWorld(this)}initCarGroundContact(t){this.defaultContactMaterial.friction=1;let e={friction:1,restitution:.1,contactEquationRelaxation:1,frictionEquationStiffness:1e7},n=new Vs(this.wheelMaterialFriction,this.groundMaterial,e),i=new Vs(this.bodyMaterial,this.groundMaterial,t);this.addContactMaterial(n),this.addContactMaterial(i)}initTrackWithGradients(t,e,n,i,r){e=e/2,this.track.trackWidth=n/2;let o=1,a,l=new Us(new E(e+.1,o,this.track.trackWidth)),c=0,h=new ft({mass:0,material:this.groundMaterial,shape:new Us(new E(10,o,this.track.trackWidth)),collisionFilterGroup:mn.GROUP2,collisionFilterMask:mn.GROUP1});if(this.addBody(h),this.track.trackPieces.push(h),this.render){let d=new xn(20,o*2,this.track.trackWidth*2),f;i?f=new ae(d,i):f=new ae(d,new vr({color:"#696969"})),this.copyPosition(h,f),this.track.threeJSTrackPieces.push(f),r.add(f)}let u=new E(10,0,0);t.forEach(d=>{let f=Math.sin(d*Math.PI/180)*e/Math.sin(90*Math.PI/180),g=Math.sqrt(e*e-f*f);(90<d||d<-90)&&(g=-g),u.x=u.x+g,u.y=u.y+f;let _=new ft({mass:0,position:u,collisionFilterGroup:mn.GROUP3,collisionFilterMask:mn.GROUP1});if(u.x=u.x+g,u.y=u.y+f,c=u.y<c?u.y:c,a=new le().setFromEuler(0,0,d*2*Math.PI/360),_.addShape(l,new E,a),this.addBody(_),this.track.trackPieces.push(_),this.render){let m=new xn(e*2,o*2,this.track.trackWidth*2),p;i?p=new ae(m,i):p=new ae(m,new vr({color:"#696969"}));const x=_.position;p.position.set(x.x,x.y,x.z),p.rotateZ(d*2*Math.PI/360),this.track.threeJSTrackPieces.push(p),r.add(p)}}),this.track.finishPosition=u,this.track.negativeYBorder=c-10}copyPosition(t,e){const n=t.position,i=t.quaternion;e.position.set(n.x,n.y,n.z),e.quaternion.set(i.x,i.y,i.z,i.w)}isActive(){return!this.disabled}finishCurrentGen(){this.populationManager.activeCars.forEach(t=>{this.removeVehicle(t)})}}function xS(s,t){let e=tn(s),n=tn(t);for(let i=0;i<1;i++)if(Kt(0,1)>.5){let r=e,o=Gu(e[0],n[0]);e=[o[0],n[1]],n=[o[1],r[1]]}else{let r=Gu(e[1],n[1]);e=[e[0],r[0]],n=[n[0],r[1]]}return[Zo(e[0].concat(e[1]),e[0].length),Zo(n[0].concat(n[1]),n[0].length)]}function Gu(s,t){let e;s.length-t.length>0?e=Math.floor(Kt(0,t.length)):e=Math.floor(Kt(0,s.length));let n=s.slice(0,e),i=s.slice(e),r=t.slice(0,e),o=t.slice(e);return[n.concat(o),r.concat(i)]}function vS(s,t){let e=tn(s),n=tn(t),i=qu(e[0],n[0]),r=qu(e[1],n[1]);return[Zo(i[0].concat(r[0]),i[0].length),Zo(i[1].concat(r[1]),i[1].length)]}function qu(s,t){let e=0,n=[],i=[],r=[];s.length<=t.length?(e=s.length-1,s.length<t.length&&(n=t.slice(e+1,t.length))):(e=t.length-1,n=s.slice(e+1,s.length));for(let o=0;o<=e;o++)Kt(0,1)>.5?(i.push(s[o]),r.push(t[o])):(i.push(t[o]),r.push(s[o]));return Kt(0,1)>.5?i=i.concat(n):r=r.concat(n),[i,r]}function ju(s,t){function e(){return Math.random()<=t}let n=2;if(s.bodyVectors.forEach(i=>{e()&&(i.x=i.x+Kt(-1,1)*n),e()&&(i.y=i.y+Kt(-1,1)*n),e()&&(i.z=i.z+Kt(-1,1)*n)}),s.wheels.forEach(i=>{e()&&(i.radius=Math.max(Zt.minimalRadius,i.radius+Kt(-1,1)*n/2)),e()&&(i.width=Math.max(Zt.minimalWidth,i.width+Kt(-1,1)*n/2)),e()&&(i.density=Kt(Zt.minDensity,Zt.maxDensity)),e()&&(i.stiffness=Math.random()),e()&&(i.posX=Kt(-1,1)),e()&&(i.posY=Kt(-1,1)),e()&&(i.posZ=Kt(-1,1)),e()&&(i.canSteer=!i.canSteer)}),e()&&s.bodyVectors.length>4){let i=Math.floor(Math.random()*s.bodyVectors.length);s.bodyVectors.splice(i,1)}if(e()&&s.bodyVectors.push(dp()),e()){let i=Math.floor(Math.random()*s.wheels.length);s.wheels.splice(i,1)}return e()&&Zt.maximumWheels>s.wheels.length&&s.wheels.push(up()),s}function Jo(s,t){return Array.isArray(s)&&Array.isArray(t)&&s.length===t.length&&s.every((e,n)=>e===t[n])}function yS(s){let t=br(s,2),e=br(s,2),n=tn(t.oldVehicleGen),i=tn(e.oldVehicleGen);for(;s.length>2&&Jo(n[0],i[0])&&Jo(n[1],i[1]);)e=br(s,1),i=tn(e.oldVehicleGen);return[t,e]}function br(s,t){if(t>0){let e=br(s,t-1),n=br(s,t-1);return e.fitness>n.fitness?e:n}else return s[Math.floor(Math.random()*s.length)]}function bS(s,t){let e=pl(s,t),n=pl(s,t),i=tn(e.oldVehicleGen),r=tn(s[1].oldVehicleGen);for(;s.length>2&&Jo(i[0],r[0])&&Jo(i[1],r[1]);)n=pl(s.filter(o=>o!==n),t-n.fitness),r=tn(n.oldVehicleGen);return[e,n]}function pl(s,t){let e=Kt(0,t),n=0;for(let i=0;i<s.length;i++)if(n+=s[i].fitness,e<n)return s[i];return s[Kt(0,s.length-1)]}function MS(s,t,e,n){let i=[],r=t.length,o=0;e==1&&t.map(a=>o+=a.fitness);for(let a=0;a<Math.ceil(r/2);a++){let l=[];switch(e){case 0:l=yS(t);break;case 1:l=bS(t,o);break;default:throw Error("Selectiontype not implemented.")}let c=JSON.parse(JSON.stringify(l[0].oldVehicleGen)),h=JSON.parse(JSON.stringify(l[1].oldVehicleGen)),u=[];switch(n){case 0:u=xS(c,h);break;case 1:u=vS(c,h);break;default:throw Error("Selectiontype not implemented.")}i.push(ju(u[0],s)),i.push(ju(u[1],s))}return r%2===1&&i.pop(),t=t.sort((a,l)=>a.fitness-l.fitness),i.pop(),i.push(t[t.length-1].oldVehicleGen),i}function wS(s,t,e,n,i,r){let o=e/n;return t?100+5*n*60/s:100*o+o*e*60/s}class ml{constructor(t,e){this.activeCars=new Map,this.fitnessData=[],this.populationSize=0,this.batchSize=0,this.populationSize=t,this.batchSize=e}addCar(t){this.activeCars.set(t.id,t)}disableCar(t,e,n){if(this.activeCars.delete(t.id))t.disable(),this.fitnessData.push({oldVehicleGen:t.vehicleGen,distanceTraveled:t.furthestPosition.x,hasFinished:t.hasFinished,timeInSteps:e,fitness:wS(e,t.hasFinished,t.furthestPosition.x,n,t.bodyMass,t.wheelMass)});else return console.log("Tried to remove a car which isn't part of the population"),!1;return!0}createNextGeneration(t,e,n){return MS(t,this.fitnessData,e,n)}}/*!
 * @kurkle/color v0.3.2
 * https://github.com/kurkle/color#readme
 * (c) 2023 Jukka Kurkela
 * Released under the MIT License
 */function Wr(s){return s+.5|0}const hi=(s,t,e)=>Math.max(Math.min(s,e),t);function dr(s){return hi(Wr(s*2.55),0,255)}function gi(s){return hi(Wr(s*255),0,255)}function Kn(s){return hi(Wr(s/2.55)/100,0,1)}function Xu(s){return hi(Wr(s*100),0,100)}const rn={0:0,1:1,2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:9,A:10,B:11,C:12,D:13,E:14,F:15,a:10,b:11,c:12,d:13,e:14,f:15},Nl=[..."0123456789ABCDEF"],SS=s=>Nl[s&15],ES=s=>Nl[(s&240)>>4]+Nl[s&15],Eo=s=>(s&240)>>4===(s&15),AS=s=>Eo(s.r)&&Eo(s.g)&&Eo(s.b)&&Eo(s.a);function TS(s){var t=s.length,e;return s[0]==="#"&&(t===4||t===5?e={r:255&rn[s[1]]*17,g:255&rn[s[2]]*17,b:255&rn[s[3]]*17,a:t===5?rn[s[4]]*17:255}:(t===7||t===9)&&(e={r:rn[s[1]]<<4|rn[s[2]],g:rn[s[3]]<<4|rn[s[4]],b:rn[s[5]]<<4|rn[s[6]],a:t===9?rn[s[7]]<<4|rn[s[8]]:255})),e}const CS=(s,t)=>s<255?t(s):"";function PS(s){var t=AS(s)?SS:ES;return s?"#"+t(s.r)+t(s.g)+t(s.b)+CS(s.a,t):void 0}const LS=/^(hsla?|hwb|hsv)\(\s*([-+.e\d]+)(?:deg)?[\s,]+([-+.e\d]+)%[\s,]+([-+.e\d]+)%(?:[\s,]+([-+.e\d]+)(%)?)?\s*\)$/;function fp(s,t,e){const n=t*Math.min(e,1-e),i=(r,o=(r+s/30)%12)=>e-n*Math.max(Math.min(o-3,9-o,1),-1);return[i(0),i(8),i(4)]}function RS(s,t,e){const n=(i,r=(i+s/60)%6)=>e-e*t*Math.max(Math.min(r,4-r,1),0);return[n(5),n(3),n(1)]}function DS(s,t,e){const n=fp(s,1,.5);let i;for(t+e>1&&(i=1/(t+e),t*=i,e*=i),i=0;i<3;i++)n[i]*=1-t-e,n[i]+=t;return n}function IS(s,t,e,n,i){return s===i?(t-e)/n+(t<e?6:0):t===i?(e-s)/n+2:(s-t)/n+4}function _c(s){const e=s.r/255,n=s.g/255,i=s.b/255,r=Math.max(e,n,i),o=Math.min(e,n,i),a=(r+o)/2;let l,c,h;return r!==o&&(h=r-o,c=a>.5?h/(2-r-o):h/(r+o),l=IS(e,n,i,h,r),l=l*60+.5),[l|0,c||0,a]}function xc(s,t,e,n){return(Array.isArray(t)?s(t[0],t[1],t[2]):s(t,e,n)).map(gi)}function vc(s,t,e){return xc(fp,s,t,e)}function FS(s,t,e){return xc(DS,s,t,e)}function OS(s,t,e){return xc(RS,s,t,e)}function pp(s){return(s%360+360)%360}function zS(s){const t=LS.exec(s);let e=255,n;if(!t)return;t[5]!==n&&(e=t[6]?dr(+t[5]):gi(+t[5]));const i=pp(+t[2]),r=+t[3]/100,o=+t[4]/100;return t[1]==="hwb"?n=FS(i,r,o):t[1]==="hsv"?n=OS(i,r,o):n=vc(i,r,o),{r:n[0],g:n[1],b:n[2],a:e}}function kS(s,t){var e=_c(s);e[0]=pp(e[0]+t),e=vc(e),s.r=e[0],s.g=e[1],s.b=e[2]}function NS(s){if(!s)return;const t=_c(s),e=t[0],n=Xu(t[1]),i=Xu(t[2]);return s.a<255?`hsla(${e}, ${n}%, ${i}%, ${Kn(s.a)})`:`hsl(${e}, ${n}%, ${i}%)`}const Yu={x:"dark",Z:"light",Y:"re",X:"blu",W:"gr",V:"medium",U:"slate",A:"ee",T:"ol",S:"or",B:"ra",C:"lateg",D:"ights",R:"in",Q:"turquois",E:"hi",P:"ro",O:"al",N:"le",M:"de",L:"yello",F:"en",K:"ch",G:"arks",H:"ea",I:"ightg",J:"wh"},$u={OiceXe:"f0f8ff",antiquewEte:"faebd7",aqua:"ffff",aquamarRe:"7fffd4",azuY:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"0",blanKedOmond:"ffebcd",Xe:"ff",XeviTet:"8a2be2",bPwn:"a52a2a",burlywood:"deb887",caMtXe:"5f9ea0",KartYuse:"7fff00",KocTate:"d2691e",cSO:"ff7f50",cSnflowerXe:"6495ed",cSnsilk:"fff8dc",crimson:"dc143c",cyan:"ffff",xXe:"8b",xcyan:"8b8b",xgTMnPd:"b8860b",xWay:"a9a9a9",xgYF:"6400",xgYy:"a9a9a9",xkhaki:"bdb76b",xmagFta:"8b008b",xTivegYF:"556b2f",xSange:"ff8c00",xScEd:"9932cc",xYd:"8b0000",xsOmon:"e9967a",xsHgYF:"8fbc8f",xUXe:"483d8b",xUWay:"2f4f4f",xUgYy:"2f4f4f",xQe:"ced1",xviTet:"9400d3",dAppRk:"ff1493",dApskyXe:"bfff",dimWay:"696969",dimgYy:"696969",dodgerXe:"1e90ff",fiYbrick:"b22222",flSOwEte:"fffaf0",foYstWAn:"228b22",fuKsia:"ff00ff",gaRsbSo:"dcdcdc",ghostwEte:"f8f8ff",gTd:"ffd700",gTMnPd:"daa520",Way:"808080",gYF:"8000",gYFLw:"adff2f",gYy:"808080",honeyMw:"f0fff0",hotpRk:"ff69b4",RdianYd:"cd5c5c",Rdigo:"4b0082",ivSy:"fffff0",khaki:"f0e68c",lavFMr:"e6e6fa",lavFMrXsh:"fff0f5",lawngYF:"7cfc00",NmoncEffon:"fffacd",ZXe:"add8e6",ZcSO:"f08080",Zcyan:"e0ffff",ZgTMnPdLw:"fafad2",ZWay:"d3d3d3",ZgYF:"90ee90",ZgYy:"d3d3d3",ZpRk:"ffb6c1",ZsOmon:"ffa07a",ZsHgYF:"20b2aa",ZskyXe:"87cefa",ZUWay:"778899",ZUgYy:"778899",ZstAlXe:"b0c4de",ZLw:"ffffe0",lime:"ff00",limegYF:"32cd32",lRF:"faf0e6",magFta:"ff00ff",maPon:"800000",VaquamarRe:"66cdaa",VXe:"cd",VScEd:"ba55d3",VpurpN:"9370db",VsHgYF:"3cb371",VUXe:"7b68ee",VsprRggYF:"fa9a",VQe:"48d1cc",VviTetYd:"c71585",midnightXe:"191970",mRtcYam:"f5fffa",mistyPse:"ffe4e1",moccasR:"ffe4b5",navajowEte:"ffdead",navy:"80",Tdlace:"fdf5e6",Tive:"808000",TivedBb:"6b8e23",Sange:"ffa500",SangeYd:"ff4500",ScEd:"da70d6",pOegTMnPd:"eee8aa",pOegYF:"98fb98",pOeQe:"afeeee",pOeviTetYd:"db7093",papayawEp:"ffefd5",pHKpuff:"ffdab9",peru:"cd853f",pRk:"ffc0cb",plum:"dda0dd",powMrXe:"b0e0e6",purpN:"800080",YbeccapurpN:"663399",Yd:"ff0000",Psybrown:"bc8f8f",PyOXe:"4169e1",saddNbPwn:"8b4513",sOmon:"fa8072",sandybPwn:"f4a460",sHgYF:"2e8b57",sHshell:"fff5ee",siFna:"a0522d",silver:"c0c0c0",skyXe:"87ceeb",UXe:"6a5acd",UWay:"708090",UgYy:"708090",snow:"fffafa",sprRggYF:"ff7f",stAlXe:"4682b4",tan:"d2b48c",teO:"8080",tEstN:"d8bfd8",tomato:"ff6347",Qe:"40e0d0",viTet:"ee82ee",JHt:"f5deb3",wEte:"ffffff",wEtesmoke:"f5f5f5",Lw:"ffff00",LwgYF:"9acd32"};function BS(){const s={},t=Object.keys($u),e=Object.keys(Yu);let n,i,r,o,a;for(n=0;n<t.length;n++){for(o=a=t[n],i=0;i<e.length;i++)r=e[i],a=a.replace(r,Yu[r]);r=parseInt($u[o],16),s[a]=[r>>16&255,r>>8&255,r&255]}return s}let Ao;function US(s){Ao||(Ao=BS(),Ao.transparent=[0,0,0,0]);const t=Ao[s.toLowerCase()];return t&&{r:t[0],g:t[1],b:t[2],a:t.length===4?t[3]:255}}const VS=/^rgba?\(\s*([-+.\d]+)(%)?[\s,]+([-+.e\d]+)(%)?[\s,]+([-+.e\d]+)(%)?(?:[\s,/]+([-+.e\d]+)(%)?)?\s*\)$/;function HS(s){const t=VS.exec(s);let e=255,n,i,r;if(t){if(t[7]!==n){const o=+t[7];e=t[8]?dr(o):hi(o*255,0,255)}return n=+t[1],i=+t[3],r=+t[5],n=255&(t[2]?dr(n):hi(n,0,255)),i=255&(t[4]?dr(i):hi(i,0,255)),r=255&(t[6]?dr(r):hi(r,0,255)),{r:n,g:i,b:r,a:e}}}function WS(s){return s&&(s.a<255?`rgba(${s.r}, ${s.g}, ${s.b}, ${Kn(s.a)})`:`rgb(${s.r}, ${s.g}, ${s.b})`)}const gl=s=>s<=.0031308?s*12.92:Math.pow(s,1/2.4)*1.055-.055,Es=s=>s<=.04045?s/12.92:Math.pow((s+.055)/1.055,2.4);function GS(s,t,e){const n=Es(Kn(s.r)),i=Es(Kn(s.g)),r=Es(Kn(s.b));return{r:gi(gl(n+e*(Es(Kn(t.r))-n))),g:gi(gl(i+e*(Es(Kn(t.g))-i))),b:gi(gl(r+e*(Es(Kn(t.b))-r))),a:s.a+e*(t.a-s.a)}}function To(s,t,e){if(s){let n=_c(s);n[t]=Math.max(0,Math.min(n[t]+n[t]*e,t===0?360:1)),n=vc(n),s.r=n[0],s.g=n[1],s.b=n[2]}}function mp(s,t){return s&&Object.assign(t||{},s)}function Ku(s){var t={r:0,g:0,b:0,a:255};return Array.isArray(s)?s.length>=3&&(t={r:s[0],g:s[1],b:s[2],a:255},s.length>3&&(t.a=gi(s[3]))):(t=mp(s,{r:0,g:0,b:0,a:1}),t.a=gi(t.a)),t}function qS(s){return s.charAt(0)==="r"?HS(s):zS(s)}class Dr{constructor(t){if(t instanceof Dr)return t;const e=typeof t;let n;e==="object"?n=Ku(t):e==="string"&&(n=TS(t)||US(t)||qS(t)),this._rgb=n,this._valid=!!n}get valid(){return this._valid}get rgb(){var t=mp(this._rgb);return t&&(t.a=Kn(t.a)),t}set rgb(t){this._rgb=Ku(t)}rgbString(){return this._valid?WS(this._rgb):void 0}hexString(){return this._valid?PS(this._rgb):void 0}hslString(){return this._valid?NS(this._rgb):void 0}mix(t,e){if(t){const n=this.rgb,i=t.rgb;let r;const o=e===r?.5:e,a=2*o-1,l=n.a-i.a,c=((a*l===-1?a:(a+l)/(1+a*l))+1)/2;r=1-c,n.r=255&c*n.r+r*i.r+.5,n.g=255&c*n.g+r*i.g+.5,n.b=255&c*n.b+r*i.b+.5,n.a=o*n.a+(1-o)*i.a,this.rgb=n}return this}interpolate(t,e){return t&&(this._rgb=GS(this._rgb,t._rgb,e)),this}clone(){return new Dr(this.rgb)}alpha(t){return this._rgb.a=gi(t),this}clearer(t){const e=this._rgb;return e.a*=1-t,this}greyscale(){const t=this._rgb,e=Wr(t.r*.3+t.g*.59+t.b*.11);return t.r=t.g=t.b=e,this}opaquer(t){const e=this._rgb;return e.a*=1+t,this}negate(){const t=this._rgb;return t.r=255-t.r,t.g=255-t.g,t.b=255-t.b,this}lighten(t){return To(this._rgb,2,t),this}darken(t){return To(this._rgb,2,-t),this}saturate(t){return To(this._rgb,1,t),this}desaturate(t){return To(this._rgb,1,-t),this}rotate(t){return kS(this._rgb,t),this}}/*!
 * Chart.js v4.3.0
 * https://www.chartjs.org
 * (c) 2023 Chart.js Contributors
 * Released under the MIT License
 */function Xn(){}const jS=(()=>{let s=0;return()=>s++})();function Wt(s){return s===null||typeof s>"u"}function ne(s){if(Array.isArray&&Array.isArray(s))return!0;const t=Object.prototype.toString.call(s);return t.slice(0,7)==="[object"&&t.slice(-6)==="Array]"}function Bt(s){return s!==null&&Object.prototype.toString.call(s)==="[object Object]"}function ce(s){return(typeof s=="number"||s instanceof Number)&&isFinite(+s)}function Je(s,t){return ce(s)?s:t}function Rt(s,t){return typeof s>"u"?t:s}const XS=(s,t)=>typeof s=="string"&&s.endsWith("%")?parseFloat(s)/100:+s/t,gp=(s,t)=>typeof s=="string"&&s.endsWith("%")?parseFloat(s)/100*t:+s;function $t(s,t,e){if(s&&typeof s.call=="function")return s.apply(e,t)}function jt(s,t,e,n){let i,r,o;if(ne(s))if(r=s.length,n)for(i=r-1;i>=0;i--)t.call(e,s[i],i);else for(i=0;i<r;i++)t.call(e,s[i],i);else if(Bt(s))for(o=Object.keys(s),r=o.length,i=0;i<r;i++)t.call(e,s[o[i]],o[i])}function Qo(s,t){let e,n,i,r;if(!s||!t||s.length!==t.length)return!1;for(e=0,n=s.length;e<n;++e)if(i=s[e],r=t[e],i.datasetIndex!==r.datasetIndex||i.index!==r.index)return!1;return!0}function ta(s){if(ne(s))return s.map(ta);if(Bt(s)){const t=Object.create(null),e=Object.keys(s),n=e.length;let i=0;for(;i<n;++i)t[e[i]]=ta(s[e[i]]);return t}return s}function _p(s){return["__proto__","prototype","constructor"].indexOf(s)===-1}function YS(s,t,e,n){if(!_p(s))return;const i=t[s],r=e[s];Bt(i)&&Bt(r)?Ir(i,r,n):t[s]=ta(r)}function Ir(s,t,e){const n=ne(t)?t:[t],i=n.length;if(!Bt(s))return s;e=e||{};const r=e.merger||YS;let o;for(let a=0;a<i;++a){if(o=n[a],!Bt(o))continue;const l=Object.keys(o);for(let c=0,h=l.length;c<h;++c)r(l[c],s,o,e)}return s}function Mr(s,t){return Ir(s,t,{merger:$S})}function $S(s,t,e){if(!_p(s))return;const n=t[s],i=e[s];Bt(n)&&Bt(i)?Mr(n,i):Object.prototype.hasOwnProperty.call(t,s)||(t[s]=ta(i))}const Zu={"":s=>s,x:s=>s.x,y:s=>s.y};function KS(s){const t=s.split("."),e=[];let n="";for(const i of t)n+=i,n.endsWith("\\")?n=n.slice(0,-1)+".":(e.push(n),n="");return e}function ZS(s){const t=KS(s);return e=>{for(const n of t){if(n==="")break;e=e&&e[n]}return e}}function xi(s,t){return(Zu[t]||(Zu[t]=ZS(t)))(s)}function yc(s){return s.charAt(0).toUpperCase()+s.slice(1)}const Fr=s=>typeof s<"u",vi=s=>typeof s=="function",Ju=(s,t)=>{if(s.size!==t.size)return!1;for(const e of s)if(!t.has(e))return!1;return!0};function JS(s){return s.type==="mouseup"||s.type==="click"||s.type==="contextmenu"}const se=Math.PI,ie=2*se,QS=ie+se,ea=Number.POSITIVE_INFINITY,t1=se/180,he=se/2,Li=se/4,Qu=se*2/3,ui=Math.log10,On=Math.sign;function wr(s,t,e){return Math.abs(s-t)<e}function td(s){const t=Math.round(s);s=wr(s,t,s/1e3)?t:s;const e=Math.pow(10,Math.floor(ui(s))),n=s/e;return(n<=1?1:n<=2?2:n<=5?5:10)*e}function e1(s){const t=[],e=Math.sqrt(s);let n;for(n=1;n<e;n++)s%n===0&&(t.push(n),t.push(s/n));return e===(e|0)&&t.push(e),t.sort((i,r)=>i-r).pop(),t}function Hs(s){return!isNaN(parseFloat(s))&&isFinite(s)}function n1(s,t){const e=Math.round(s);return e-t<=s&&e+t>=s}function xp(s,t,e){let n,i,r;for(n=0,i=s.length;n<i;n++)r=s[n][e],isNaN(r)||(t.min=Math.min(t.min,r),t.max=Math.max(t.max,r))}function yn(s){return s*(se/180)}function bc(s){return s*(180/se)}function ed(s){if(!ce(s))return;let t=1,e=0;for(;Math.round(s*t)/t!==s;)t*=10,e++;return e}function vp(s,t){const e=t.x-s.x,n=t.y-s.y,i=Math.sqrt(e*e+n*n);let r=Math.atan2(n,e);return r<-.5*se&&(r+=ie),{angle:r,distance:i}}function Bl(s,t){return Math.sqrt(Math.pow(t.x-s.x,2)+Math.pow(t.y-s.y,2))}function i1(s,t){return(s-t+QS)%ie-se}function Qe(s){return(s%ie+ie)%ie}function Or(s,t,e,n){const i=Qe(s),r=Qe(t),o=Qe(e),a=Qe(r-i),l=Qe(o-i),c=Qe(i-r),h=Qe(i-o);return i===r||i===o||n&&r===o||a>l&&c<h}function Te(s,t,e){return Math.max(t,Math.min(e,s))}function s1(s){return Te(s,-32768,32767)}function ti(s,t,e,n=1e-6){return s>=Math.min(t,e)-n&&s<=Math.max(t,e)+n}function Mc(s,t,e){e=e||(o=>s[o]<t);let n=s.length-1,i=0,r;for(;n-i>1;)r=i+n>>1,e(r)?i=r:n=r;return{lo:i,hi:n}}const ei=(s,t,e,n)=>Mc(s,e,n?i=>{const r=s[i][t];return r<e||r===e&&s[i+1][t]===e}:i=>s[i][t]<e),r1=(s,t,e)=>Mc(s,e,n=>s[n][t]>=e);function o1(s,t,e){let n=0,i=s.length;for(;n<i&&s[n]<t;)n++;for(;i>n&&s[i-1]>e;)i--;return n>0||i<s.length?s.slice(n,i):s}const yp=["push","pop","shift","splice","unshift"];function a1(s,t){if(s._chartjs){s._chartjs.listeners.push(t);return}Object.defineProperty(s,"_chartjs",{configurable:!0,enumerable:!1,value:{listeners:[t]}}),yp.forEach(e=>{const n="_onData"+yc(e),i=s[e];Object.defineProperty(s,e,{configurable:!0,enumerable:!1,value(...r){const o=i.apply(this,r);return s._chartjs.listeners.forEach(a=>{typeof a[n]=="function"&&a[n](...r)}),o}})})}function nd(s,t){const e=s._chartjs;if(!e)return;const n=e.listeners,i=n.indexOf(t);i!==-1&&n.splice(i,1),!(n.length>0)&&(yp.forEach(r=>{delete s[r]}),delete s._chartjs)}function bp(s){const t=new Set(s);return t.size===s.length?s:Array.from(t)}const Mp=function(){return typeof window>"u"?function(s){return s()}:window.requestAnimationFrame}();function wp(s,t){let e=[],n=!1;return function(...i){e=i,n||(n=!0,Mp.call(window,()=>{n=!1,s.apply(t,e)}))}}function l1(s,t){let e;return function(...n){return t?(clearTimeout(e),e=setTimeout(s,t,n)):s.apply(this,n),t}}const wc=s=>s==="start"?"left":s==="end"?"right":"center",Ie=(s,t,e)=>s==="start"?t:s==="end"?e:(t+e)/2,c1=(s,t,e,n)=>s===(n?"left":"right")?e:s==="center"?(t+e)/2:t;function Sp(s,t,e){const n=t.length;let i=0,r=n;if(s._sorted){const{iScale:o,_parsed:a}=s,l=o.axis,{min:c,max:h,minDefined:u,maxDefined:d}=o.getUserBounds();u&&(i=Te(Math.min(ei(a,o.axis,c).lo,e?n:ei(t,l,o.getPixelForValue(c)).lo),0,n-1)),d?r=Te(Math.max(ei(a,o.axis,h,!0).hi+1,e?0:ei(t,l,o.getPixelForValue(h),!0).hi+1),i,n)-i:r=n-i}return{start:i,count:r}}function Ep(s){const{xScale:t,yScale:e,_scaleRanges:n}=s,i={xmin:t.min,xmax:t.max,ymin:e.min,ymax:e.max};if(!n)return s._scaleRanges=i,!0;const r=n.xmin!==t.min||n.xmax!==t.max||n.ymin!==e.min||n.ymax!==e.max;return Object.assign(n,i),r}const Co=s=>s===0||s===1,id=(s,t,e)=>-(Math.pow(2,10*(s-=1))*Math.sin((s-t)*ie/e)),sd=(s,t,e)=>Math.pow(2,-10*s)*Math.sin((s-t)*ie/e)+1,Sr={linear:s=>s,easeInQuad:s=>s*s,easeOutQuad:s=>-s*(s-2),easeInOutQuad:s=>(s/=.5)<1?.5*s*s:-.5*(--s*(s-2)-1),easeInCubic:s=>s*s*s,easeOutCubic:s=>(s-=1)*s*s+1,easeInOutCubic:s=>(s/=.5)<1?.5*s*s*s:.5*((s-=2)*s*s+2),easeInQuart:s=>s*s*s*s,easeOutQuart:s=>-((s-=1)*s*s*s-1),easeInOutQuart:s=>(s/=.5)<1?.5*s*s*s*s:-.5*((s-=2)*s*s*s-2),easeInQuint:s=>s*s*s*s*s,easeOutQuint:s=>(s-=1)*s*s*s*s+1,easeInOutQuint:s=>(s/=.5)<1?.5*s*s*s*s*s:.5*((s-=2)*s*s*s*s+2),easeInSine:s=>-Math.cos(s*he)+1,easeOutSine:s=>Math.sin(s*he),easeInOutSine:s=>-.5*(Math.cos(se*s)-1),easeInExpo:s=>s===0?0:Math.pow(2,10*(s-1)),easeOutExpo:s=>s===1?1:-Math.pow(2,-10*s)+1,easeInOutExpo:s=>Co(s)?s:s<.5?.5*Math.pow(2,10*(s*2-1)):.5*(-Math.pow(2,-10*(s*2-1))+2),easeInCirc:s=>s>=1?s:-(Math.sqrt(1-s*s)-1),easeOutCirc:s=>Math.sqrt(1-(s-=1)*s),easeInOutCirc:s=>(s/=.5)<1?-.5*(Math.sqrt(1-s*s)-1):.5*(Math.sqrt(1-(s-=2)*s)+1),easeInElastic:s=>Co(s)?s:id(s,.075,.3),easeOutElastic:s=>Co(s)?s:sd(s,.075,.3),easeInOutElastic(s){return Co(s)?s:s<.5?.5*id(s*2,.1125,.45):.5+.5*sd(s*2-1,.1125,.45)},easeInBack(s){return s*s*((1.70158+1)*s-1.70158)},easeOutBack(s){return(s-=1)*s*((1.70158+1)*s+1.70158)+1},easeInOutBack(s){let t=1.70158;return(s/=.5)<1?.5*(s*s*(((t*=1.525)+1)*s-t)):.5*((s-=2)*s*(((t*=1.525)+1)*s+t)+2)},easeInBounce:s=>1-Sr.easeOutBounce(1-s),easeOutBounce(s){return s<1/2.75?7.5625*s*s:s<2/2.75?7.5625*(s-=1.5/2.75)*s+.75:s<2.5/2.75?7.5625*(s-=2.25/2.75)*s+.9375:7.5625*(s-=2.625/2.75)*s+.984375},easeInOutBounce:s=>s<.5?Sr.easeInBounce(s*2)*.5:Sr.easeOutBounce(s*2-1)*.5+.5};function Sc(s){if(s&&typeof s=="object"){const t=s.toString();return t==="[object CanvasPattern]"||t==="[object CanvasGradient]"}return!1}function rd(s){return Sc(s)?s:new Dr(s)}function _l(s){return Sc(s)?s:new Dr(s).saturate(.5).darken(.1).hexString()}const h1=["x","y","borderWidth","radius","tension"],u1=["color","borderColor","backgroundColor"];function d1(s){s.set("animation",{delay:void 0,duration:1e3,easing:"easeOutQuart",fn:void 0,from:void 0,loop:void 0,to:void 0,type:void 0}),s.describe("animation",{_fallback:!1,_indexable:!1,_scriptable:t=>t!=="onProgress"&&t!=="onComplete"&&t!=="fn"}),s.set("animations",{colors:{type:"color",properties:u1},numbers:{type:"number",properties:h1}}),s.describe("animations",{_fallback:"animation"}),s.set("transitions",{active:{animation:{duration:400}},resize:{animation:{duration:0}},show:{animations:{colors:{from:"transparent"},visible:{type:"boolean",duration:0}}},hide:{animations:{colors:{to:"transparent"},visible:{type:"boolean",easing:"linear",fn:t=>t|0}}}})}function f1(s){s.set("layout",{autoPadding:!0,padding:{top:0,right:0,bottom:0,left:0}})}const od=new Map;function p1(s,t){t=t||{};const e=s+JSON.stringify(t);let n=od.get(e);return n||(n=new Intl.NumberFormat(s,t),od.set(e,n)),n}function Gr(s,t,e){return p1(t,e).format(s)}const Ap={values(s){return ne(s)?s:""+s},numeric(s,t,e){if(s===0)return"0";const n=this.chart.options.locale;let i,r=s;if(e.length>1){const c=Math.max(Math.abs(e[0].value),Math.abs(e[e.length-1].value));(c<1e-4||c>1e15)&&(i="scientific"),r=m1(s,e)}const o=ui(Math.abs(r)),a=isNaN(o)?1:Math.max(Math.min(-1*Math.floor(o),20),0),l={notation:i,minimumFractionDigits:a,maximumFractionDigits:a};return Object.assign(l,this.options.ticks.format),Gr(s,n,l)},logarithmic(s,t,e){if(s===0)return"0";const n=e[t].significand||s/Math.pow(10,Math.floor(ui(s)));return[1,2,3,5,10,15].includes(n)||t>.8*e.length?Ap.numeric.call(this,s,t,e):""}};function m1(s,t){let e=t.length>3?t[2].value-t[1].value:t[1].value-t[0].value;return Math.abs(e)>=1&&s!==Math.floor(s)&&(e=s-Math.floor(s)),e}var ma={formatters:Ap};function g1(s){s.set("scale",{display:!0,offset:!1,reverse:!1,beginAtZero:!1,bounds:"ticks",grace:0,grid:{display:!0,lineWidth:1,drawOnChartArea:!0,drawTicks:!0,tickLength:8,tickWidth:(t,e)=>e.lineWidth,tickColor:(t,e)=>e.color,offset:!1},border:{display:!0,dash:[],dashOffset:0,width:1},title:{display:!1,text:"",padding:{top:4,bottom:4}},ticks:{minRotation:0,maxRotation:50,mirror:!1,textStrokeWidth:0,textStrokeColor:"",padding:3,display:!0,autoSkip:!0,autoSkipPadding:3,labelOffset:0,callback:ma.formatters.values,minor:{},major:{},align:"center",crossAlign:"near",showLabelBackdrop:!1,backdropColor:"rgba(255, 255, 255, 0.75)",backdropPadding:2}}),s.route("scale.ticks","color","","color"),s.route("scale.grid","color","","borderColor"),s.route("scale.border","color","","borderColor"),s.route("scale.title","color","","color"),s.describe("scale",{_fallback:!1,_scriptable:t=>!t.startsWith("before")&&!t.startsWith("after")&&t!=="callback"&&t!=="parser",_indexable:t=>t!=="borderDash"&&t!=="tickBorderDash"&&t!=="dash"}),s.describe("scales",{_fallback:"scale"}),s.describe("scale.ticks",{_scriptable:t=>t!=="backdropPadding"&&t!=="callback",_indexable:t=>t!=="backdropPadding"})}const ts=Object.create(null),Ul=Object.create(null);function Er(s,t){if(!t)return s;const e=t.split(".");for(let n=0,i=e.length;n<i;++n){const r=e[n];s=s[r]||(s[r]=Object.create(null))}return s}function xl(s,t,e){return typeof t=="string"?Ir(Er(s,t),e):Ir(Er(s,""),t)}class _1{constructor(t,e){this.animation=void 0,this.backgroundColor="rgba(0,0,0,0.1)",this.borderColor="rgba(0,0,0,0.1)",this.color="#666",this.datasets={},this.devicePixelRatio=n=>n.chart.platform.getDevicePixelRatio(),this.elements={},this.events=["mousemove","mouseout","click","touchstart","touchmove"],this.font={family:"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",size:12,style:"normal",lineHeight:1.2,weight:null},this.hover={},this.hoverBackgroundColor=(n,i)=>_l(i.backgroundColor),this.hoverBorderColor=(n,i)=>_l(i.borderColor),this.hoverColor=(n,i)=>_l(i.color),this.indexAxis="x",this.interaction={mode:"nearest",intersect:!0,includeInvisible:!1},this.maintainAspectRatio=!0,this.onHover=null,this.onClick=null,this.parsing=!0,this.plugins={},this.responsive=!0,this.scale=void 0,this.scales={},this.showLine=!0,this.drawActiveElementsOnTop=!0,this.describe(t),this.apply(e)}set(t,e){return xl(this,t,e)}get(t){return Er(this,t)}describe(t,e){return xl(Ul,t,e)}override(t,e){return xl(ts,t,e)}route(t,e,n,i){const r=Er(this,t),o=Er(this,n),a="_"+e;Object.defineProperties(r,{[a]:{value:r[e],writable:!0},[e]:{enumerable:!0,get(){const l=this[a],c=o[i];return Bt(l)?Object.assign({},c,l):Rt(l,c)},set(l){this[a]=l}}})}apply(t){t.forEach(e=>e(this))}}var ue=new _1({_scriptable:s=>!s.startsWith("on"),_indexable:s=>s!=="events",hover:{_fallback:"interaction"},interaction:{_scriptable:!1,_indexable:!1}},[d1,f1,g1]);function x1(s){return!s||Wt(s.size)||Wt(s.family)?null:(s.style?s.style+" ":"")+(s.weight?s.weight+" ":"")+s.size+"px "+s.family}function na(s,t,e,n,i){let r=t[i];return r||(r=t[i]=s.measureText(i).width,e.push(i)),r>n&&(n=r),n}function v1(s,t,e,n){n=n||{};let i=n.data=n.data||{},r=n.garbageCollect=n.garbageCollect||[];n.font!==t&&(i=n.data={},r=n.garbageCollect=[],n.font=t),s.save(),s.font=t;let o=0;const a=e.length;let l,c,h,u,d;for(l=0;l<a;l++)if(u=e[l],u!=null&&!ne(u))o=na(s,i,r,o,u);else if(ne(u))for(c=0,h=u.length;c<h;c++)d=u[c],d!=null&&!ne(d)&&(o=na(s,i,r,o,d));s.restore();const f=r.length/2;if(f>e.length){for(l=0;l<f;l++)delete i[r[l]];r.splice(0,f)}return o}function Ri(s,t,e){const n=s.currentDevicePixelRatio,i=e!==0?Math.max(e/2,.5):0;return Math.round((t-i)*n)/n+i}function ad(s,t){t=t||s.getContext("2d"),t.save(),t.resetTransform(),t.clearRect(0,0,s.width,s.height),t.restore()}function Vl(s,t,e,n){Tp(s,t,e,n,null)}function Tp(s,t,e,n,i){let r,o,a,l,c,h,u,d;const f=t.pointStyle,g=t.rotation,_=t.radius;let m=(g||0)*t1;if(f&&typeof f=="object"&&(r=f.toString(),r==="[object HTMLImageElement]"||r==="[object HTMLCanvasElement]")){s.save(),s.translate(e,n),s.rotate(m),s.drawImage(f,-f.width/2,-f.height/2,f.width,f.height),s.restore();return}if(!(isNaN(_)||_<=0)){switch(s.beginPath(),f){default:i?s.ellipse(e,n,i/2,_,0,0,ie):s.arc(e,n,_,0,ie),s.closePath();break;case"triangle":h=i?i/2:_,s.moveTo(e+Math.sin(m)*h,n-Math.cos(m)*_),m+=Qu,s.lineTo(e+Math.sin(m)*h,n-Math.cos(m)*_),m+=Qu,s.lineTo(e+Math.sin(m)*h,n-Math.cos(m)*_),s.closePath();break;case"rectRounded":c=_*.516,l=_-c,o=Math.cos(m+Li)*l,u=Math.cos(m+Li)*(i?i/2-c:l),a=Math.sin(m+Li)*l,d=Math.sin(m+Li)*(i?i/2-c:l),s.arc(e-u,n-a,c,m-se,m-he),s.arc(e+d,n-o,c,m-he,m),s.arc(e+u,n+a,c,m,m+he),s.arc(e-d,n+o,c,m+he,m+se),s.closePath();break;case"rect":if(!g){l=Math.SQRT1_2*_,h=i?i/2:l,s.rect(e-h,n-l,2*h,2*l);break}m+=Li;case"rectRot":u=Math.cos(m)*(i?i/2:_),o=Math.cos(m)*_,a=Math.sin(m)*_,d=Math.sin(m)*(i?i/2:_),s.moveTo(e-u,n-a),s.lineTo(e+d,n-o),s.lineTo(e+u,n+a),s.lineTo(e-d,n+o),s.closePath();break;case"crossRot":m+=Li;case"cross":u=Math.cos(m)*(i?i/2:_),o=Math.cos(m)*_,a=Math.sin(m)*_,d=Math.sin(m)*(i?i/2:_),s.moveTo(e-u,n-a),s.lineTo(e+u,n+a),s.moveTo(e+d,n-o),s.lineTo(e-d,n+o);break;case"star":u=Math.cos(m)*(i?i/2:_),o=Math.cos(m)*_,a=Math.sin(m)*_,d=Math.sin(m)*(i?i/2:_),s.moveTo(e-u,n-a),s.lineTo(e+u,n+a),s.moveTo(e+d,n-o),s.lineTo(e-d,n+o),m+=Li,u=Math.cos(m)*(i?i/2:_),o=Math.cos(m)*_,a=Math.sin(m)*_,d=Math.sin(m)*(i?i/2:_),s.moveTo(e-u,n-a),s.lineTo(e+u,n+a),s.moveTo(e+d,n-o),s.lineTo(e-d,n+o);break;case"line":o=i?i/2:Math.cos(m)*_,a=Math.sin(m)*_,s.moveTo(e-o,n-a),s.lineTo(e+o,n+a);break;case"dash":s.moveTo(e,n),s.lineTo(e+Math.cos(m)*(i?i/2:_),n+Math.sin(m)*_);break;case!1:s.closePath();break}s.fill(),t.borderWidth>0&&s.stroke()}}function ni(s,t,e){return e=e||.5,!t||s&&s.x>t.left-e&&s.x<t.right+e&&s.y>t.top-e&&s.y<t.bottom+e}function ga(s,t){s.save(),s.beginPath(),s.rect(t.left,t.top,t.right-t.left,t.bottom-t.top),s.clip()}function _a(s){s.restore()}function y1(s,t,e,n,i){if(!t)return s.lineTo(e.x,e.y);if(i==="middle"){const r=(t.x+e.x)/2;s.lineTo(r,t.y),s.lineTo(r,e.y)}else i==="after"!=!!n?s.lineTo(t.x,e.y):s.lineTo(e.x,t.y);s.lineTo(e.x,e.y)}function b1(s,t,e,n){if(!t)return s.lineTo(e.x,e.y);s.bezierCurveTo(n?t.cp1x:t.cp2x,n?t.cp1y:t.cp2y,n?e.cp2x:e.cp1x,n?e.cp2y:e.cp1y,e.x,e.y)}function M1(s,t){t.translation&&s.translate(t.translation[0],t.translation[1]),Wt(t.rotation)||s.rotate(t.rotation),t.color&&(s.fillStyle=t.color),t.textAlign&&(s.textAlign=t.textAlign),t.textBaseline&&(s.textBaseline=t.textBaseline)}function w1(s,t,e,n,i){if(i.strikethrough||i.underline){const r=s.measureText(n),o=t-r.actualBoundingBoxLeft,a=t+r.actualBoundingBoxRight,l=e-r.actualBoundingBoxAscent,c=e+r.actualBoundingBoxDescent,h=i.strikethrough?(l+c)/2:c;s.strokeStyle=s.fillStyle,s.beginPath(),s.lineWidth=i.decorationWidth||2,s.moveTo(o,h),s.lineTo(a,h),s.stroke()}}function S1(s,t){const e=s.fillStyle;s.fillStyle=t.color,s.fillRect(t.left,t.top,t.width,t.height),s.fillStyle=e}function es(s,t,e,n,i,r={}){const o=ne(t)?t:[t],a=r.strokeWidth>0&&r.strokeColor!=="";let l,c;for(s.save(),s.font=i.string,M1(s,r),l=0;l<o.length;++l)c=o[l],r.backdrop&&S1(s,r.backdrop),a&&(r.strokeColor&&(s.strokeStyle=r.strokeColor),Wt(r.strokeWidth)||(s.lineWidth=r.strokeWidth),s.strokeText(c,e,n,r.maxWidth)),s.fillText(c,e,n,r.maxWidth),w1(s,e,n,c,r),n+=Number(i.lineHeight);s.restore()}function zr(s,t){const{x:e,y:n,w:i,h:r,radius:o}=t;s.arc(e+o.topLeft,n+o.topLeft,o.topLeft,-he,se,!0),s.lineTo(e,n+r-o.bottomLeft),s.arc(e+o.bottomLeft,n+r-o.bottomLeft,o.bottomLeft,se,he,!0),s.lineTo(e+i-o.bottomRight,n+r),s.arc(e+i-o.bottomRight,n+r-o.bottomRight,o.bottomRight,he,0,!0),s.lineTo(e+i,n+o.topRight),s.arc(e+i-o.topRight,n+o.topRight,o.topRight,0,-he,!0),s.lineTo(e+o.topLeft,n)}const E1=/^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/,A1=/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;function T1(s,t){const e=(""+s).match(E1);if(!e||e[1]==="normal")return t*1.2;switch(s=+e[2],e[3]){case"px":return s;case"%":s/=100;break}return t*s}const C1=s=>+s||0;function Ec(s,t){const e={},n=Bt(t),i=n?Object.keys(t):t,r=Bt(s)?n?o=>Rt(s[o],s[t[o]]):o=>s[o]:()=>s;for(const o of i)e[o]=C1(r(o));return e}function Cp(s){return Ec(s,{top:"y",right:"x",bottom:"y",left:"x"})}function Xi(s){return Ec(s,["topLeft","topRight","bottomLeft","bottomRight"])}function Oe(s){const t=Cp(s);return t.width=t.left+t.right,t.height=t.top+t.bottom,t}function be(s,t){s=s||{},t=t||ue.font;let e=Rt(s.size,t.size);typeof e=="string"&&(e=parseInt(e,10));let n=Rt(s.style,t.style);n&&!(""+n).match(A1)&&(console.warn('Invalid font style specified: "'+n+'"'),n=void 0);const i={family:Rt(s.family,t.family),lineHeight:T1(Rt(s.lineHeight,t.lineHeight),e),size:e,style:n,weight:Rt(s.weight,t.weight),string:""};return i.string=x1(i),i}function fr(s,t,e,n){let i=!0,r,o,a;for(r=0,o=s.length;r<o;++r)if(a=s[r],a!==void 0&&(t!==void 0&&typeof a=="function"&&(a=a(t),i=!1),e!==void 0&&ne(a)&&(a=a[e%a.length],i=!1),a!==void 0))return n&&!i&&(n.cacheable=!1),a}function P1(s,t,e){const{min:n,max:i}=s,r=gp(t,(i-n)/2),o=(a,l)=>e&&a===0?0:a+l;return{min:o(n,-Math.abs(r)),max:o(i,r)}}function bi(s,t){return Object.assign(Object.create(s),t)}function Ac(s,t=[""],e,n,i=()=>s[0]){const r=e||s;typeof n>"u"&&(n=Dp("_fallback",s));const o={[Symbol.toStringTag]:"Object",_cacheable:!0,_scopes:s,_rootScopes:r,_fallback:n,_getTarget:i,override:a=>Ac([a,...s],t,r,n)};return new Proxy(o,{deleteProperty(a,l){return delete a[l],delete a._keys,delete s[0][l],!0},get(a,l){return Lp(a,l,()=>k1(l,t,s,a))},getOwnPropertyDescriptor(a,l){return Reflect.getOwnPropertyDescriptor(a._scopes[0],l)},getPrototypeOf(){return Reflect.getPrototypeOf(s[0])},has(a,l){return cd(a).includes(l)},ownKeys(a){return cd(a)},set(a,l,c){const h=a._storage||(a._storage=i());return a[l]=h[l]=c,delete a._keys,!0}})}function Ws(s,t,e,n){const i={_cacheable:!1,_proxy:s,_context:t,_subProxy:e,_stack:new Set,_descriptors:Pp(s,n),setContext:r=>Ws(s,r,e,n),override:r=>Ws(s.override(r),t,e,n)};return new Proxy(i,{deleteProperty(r,o){return delete r[o],delete s[o],!0},get(r,o,a){return Lp(r,o,()=>R1(r,o,a))},getOwnPropertyDescriptor(r,o){return r._descriptors.allKeys?Reflect.has(s,o)?{enumerable:!0,configurable:!0}:void 0:Reflect.getOwnPropertyDescriptor(s,o)},getPrototypeOf(){return Reflect.getPrototypeOf(s)},has(r,o){return Reflect.has(s,o)},ownKeys(){return Reflect.ownKeys(s)},set(r,o,a){return s[o]=a,delete r[o],!0}})}function Pp(s,t={scriptable:!0,indexable:!0}){const{_scriptable:e=t.scriptable,_indexable:n=t.indexable,_allKeys:i=t.allKeys}=s;return{allKeys:i,scriptable:e,indexable:n,isScriptable:vi(e)?e:()=>e,isIndexable:vi(n)?n:()=>n}}const L1=(s,t)=>s?s+yc(t):t,Tc=(s,t)=>Bt(t)&&s!=="adapters"&&(Object.getPrototypeOf(t)===null||t.constructor===Object);function Lp(s,t,e){if(Object.prototype.hasOwnProperty.call(s,t))return s[t];const n=e();return s[t]=n,n}function R1(s,t,e){const{_proxy:n,_context:i,_subProxy:r,_descriptors:o}=s;let a=n[t];return vi(a)&&o.isScriptable(t)&&(a=D1(t,a,s,e)),ne(a)&&a.length&&(a=I1(t,a,s,o.isIndexable)),Tc(t,a)&&(a=Ws(a,i,r&&r[t],o)),a}function D1(s,t,e,n){const{_proxy:i,_context:r,_subProxy:o,_stack:a}=e;if(a.has(s))throw new Error("Recursion detected: "+Array.from(a).join("->")+"->"+s);a.add(s);let l=t(r,o||n);return a.delete(s),Tc(s,l)&&(l=Cc(i._scopes,i,s,l)),l}function I1(s,t,e,n){const{_proxy:i,_context:r,_subProxy:o,_descriptors:a}=e;if(typeof r.index<"u"&&n(s))return t[r.index%t.length];if(Bt(t[0])){const l=t,c=i._scopes.filter(h=>h!==l);t=[];for(const h of l){const u=Cc(c,i,s,h);t.push(Ws(u,r,o&&o[s],a))}}return t}function Rp(s,t,e){return vi(s)?s(t,e):s}const F1=(s,t)=>s===!0?t:typeof s=="string"?xi(t,s):void 0;function O1(s,t,e,n,i){for(const r of t){const o=F1(e,r);if(o){s.add(o);const a=Rp(o._fallback,e,i);if(typeof a<"u"&&a!==e&&a!==n)return a}else if(o===!1&&typeof n<"u"&&e!==n)return null}return!1}function Cc(s,t,e,n){const i=t._rootScopes,r=Rp(t._fallback,e,n),o=[...s,...i],a=new Set;a.add(n);let l=ld(a,o,e,r||e,n);return l===null||typeof r<"u"&&r!==e&&(l=ld(a,o,r,l,n),l===null)?!1:Ac(Array.from(a),[""],i,r,()=>z1(t,e,n))}function ld(s,t,e,n,i){for(;e;)e=O1(s,t,e,n,i);return e}function z1(s,t,e){const n=s._getTarget();t in n||(n[t]={});const i=n[t];return ne(i)&&Bt(e)?e:i||{}}function k1(s,t,e,n){let i;for(const r of t)if(i=Dp(L1(r,s),e),typeof i<"u")return Tc(s,i)?Cc(e,n,s,i):i}function Dp(s,t){for(const e of t){if(!e)continue;const n=e[s];if(typeof n<"u")return n}}function cd(s){let t=s._keys;return t||(t=s._keys=N1(s._scopes)),t}function N1(s){const t=new Set;for(const e of s)for(const n of Object.keys(e).filter(i=>!i.startsWith("_")))t.add(n);return Array.from(t)}function Ip(s,t,e,n){const{iScale:i}=s,{key:r="r"}=this._parsing,o=new Array(n);let a,l,c,h;for(a=0,l=n;a<l;++a)c=a+e,h=t[c],o[a]={r:i.parse(xi(h,r),c)};return o}const B1=Number.EPSILON||1e-14,Gs=(s,t)=>t<s.length&&!s[t].skip&&s[t],Fp=s=>s==="x"?"y":"x";function U1(s,t,e,n){const i=s.skip?t:s,r=t,o=e.skip?t:e,a=Bl(r,i),l=Bl(o,r);let c=a/(a+l),h=l/(a+l);c=isNaN(c)?0:c,h=isNaN(h)?0:h;const u=n*c,d=n*h;return{previous:{x:r.x-u*(o.x-i.x),y:r.y-u*(o.y-i.y)},next:{x:r.x+d*(o.x-i.x),y:r.y+d*(o.y-i.y)}}}function V1(s,t,e){const n=s.length;let i,r,o,a,l,c=Gs(s,0);for(let h=0;h<n-1;++h)if(l=c,c=Gs(s,h+1),!(!l||!c)){if(wr(t[h],0,B1)){e[h]=e[h+1]=0;continue}i=e[h]/t[h],r=e[h+1]/t[h],a=Math.pow(i,2)+Math.pow(r,2),!(a<=9)&&(o=3/Math.sqrt(a),e[h]=i*o*t[h],e[h+1]=r*o*t[h])}}function H1(s,t,e="x"){const n=Fp(e),i=s.length;let r,o,a,l=Gs(s,0);for(let c=0;c<i;++c){if(o=a,a=l,l=Gs(s,c+1),!a)continue;const h=a[e],u=a[n];o&&(r=(h-o[e])/3,a[`cp1${e}`]=h-r,a[`cp1${n}`]=u-r*t[c]),l&&(r=(l[e]-h)/3,a[`cp2${e}`]=h+r,a[`cp2${n}`]=u+r*t[c])}}function W1(s,t="x"){const e=Fp(t),n=s.length,i=Array(n).fill(0),r=Array(n);let o,a,l,c=Gs(s,0);for(o=0;o<n;++o)if(a=l,l=c,c=Gs(s,o+1),!!l){if(c){const h=c[t]-l[t];i[o]=h!==0?(c[e]-l[e])/h:0}r[o]=a?c?On(i[o-1])!==On(i[o])?0:(i[o-1]+i[o])/2:i[o-1]:i[o]}V1(s,i,r),H1(s,r,t)}function Po(s,t,e){return Math.max(Math.min(s,e),t)}function G1(s,t){let e,n,i,r,o,a=ni(s[0],t);for(e=0,n=s.length;e<n;++e)o=r,r=a,a=e<n-1&&ni(s[e+1],t),r&&(i=s[e],o&&(i.cp1x=Po(i.cp1x,t.left,t.right),i.cp1y=Po(i.cp1y,t.top,t.bottom)),a&&(i.cp2x=Po(i.cp2x,t.left,t.right),i.cp2y=Po(i.cp2y,t.top,t.bottom)))}function q1(s,t,e,n,i){let r,o,a,l;if(t.spanGaps&&(s=s.filter(c=>!c.skip)),t.cubicInterpolationMode==="monotone")W1(s,i);else{let c=n?s[s.length-1]:s[0];for(r=0,o=s.length;r<o;++r)a=s[r],l=U1(c,a,s[Math.min(r+1,o-(n?0:1))%o],t.tension),a.cp1x=l.previous.x,a.cp1y=l.previous.y,a.cp2x=l.next.x,a.cp2y=l.next.y,c=a}t.capBezierPoints&&G1(s,e)}function Op(){return typeof window<"u"&&typeof document<"u"}function Pc(s){let t=s.parentNode;return t&&t.toString()==="[object ShadowRoot]"&&(t=t.host),t}function ia(s,t,e){let n;return typeof s=="string"?(n=parseInt(s,10),s.indexOf("%")!==-1&&(n=n/100*t.parentNode[e])):n=s,n}const xa=s=>s.ownerDocument.defaultView.getComputedStyle(s,null);function j1(s,t){return xa(s).getPropertyValue(t)}const X1=["top","right","bottom","left"];function Yi(s,t,e){const n={};e=e?"-"+e:"";for(let i=0;i<4;i++){const r=X1[i];n[r]=parseFloat(s[t+"-"+r+e])||0}return n.width=n.left+n.right,n.height=n.top+n.bottom,n}const Y1=(s,t,e)=>(s>0||t>0)&&(!e||!e.shadowRoot);function $1(s,t){const e=s.touches,n=e&&e.length?e[0]:s,{offsetX:i,offsetY:r}=n;let o=!1,a,l;if(Y1(i,r,s.target))a=i,l=r;else{const c=t.getBoundingClientRect();a=n.clientX-c.left,l=n.clientY-c.top,o=!0}return{x:a,y:l,box:o}}function zi(s,t){if("native"in s)return s;const{canvas:e,currentDevicePixelRatio:n}=t,i=xa(e),r=i.boxSizing==="border-box",o=Yi(i,"padding"),a=Yi(i,"border","width"),{x:l,y:c,box:h}=$1(s,e),u=o.left+(h&&a.left),d=o.top+(h&&a.top);let{width:f,height:g}=t;return r&&(f-=o.width+a.width,g-=o.height+a.height),{x:Math.round((l-u)/f*e.width/n),y:Math.round((c-d)/g*e.height/n)}}function K1(s,t,e){let n,i;if(t===void 0||e===void 0){const r=Pc(s);if(!r)t=s.clientWidth,e=s.clientHeight;else{const o=r.getBoundingClientRect(),a=xa(r),l=Yi(a,"border","width"),c=Yi(a,"padding");t=o.width-c.width-l.width,e=o.height-c.height-l.height,n=ia(a.maxWidth,r,"clientWidth"),i=ia(a.maxHeight,r,"clientHeight")}}return{width:t,height:e,maxWidth:n||ea,maxHeight:i||ea}}const Lo=s=>Math.round(s*10)/10;function Z1(s,t,e,n){const i=xa(s),r=Yi(i,"margin"),o=ia(i.maxWidth,s,"clientWidth")||ea,a=ia(i.maxHeight,s,"clientHeight")||ea,l=K1(s,t,e);let{width:c,height:h}=l;if(i.boxSizing==="content-box"){const d=Yi(i,"border","width"),f=Yi(i,"padding");c-=f.width+d.width,h-=f.height+d.height}return c=Math.max(0,c-r.width),h=Math.max(0,n?c/n:h-r.height),c=Lo(Math.min(c,o,l.maxWidth)),h=Lo(Math.min(h,a,l.maxHeight)),c&&!h&&(h=Lo(c/2)),(t!==void 0||e!==void 0)&&n&&l.height&&h>l.height&&(h=l.height,c=Lo(Math.floor(h*n))),{width:c,height:h}}function hd(s,t,e){const n=t||1,i=Math.floor(s.height*n),r=Math.floor(s.width*n);s.height=Math.floor(s.height),s.width=Math.floor(s.width);const o=s.canvas;return o.style&&(e||!o.style.height&&!o.style.width)&&(o.style.height=`${s.height}px`,o.style.width=`${s.width}px`),s.currentDevicePixelRatio!==n||o.height!==i||o.width!==r?(s.currentDevicePixelRatio=n,o.height=i,o.width=r,s.ctx.setTransform(n,0,0,n,0,0),!0):!1}const J1=function(){let s=!1;try{const t={get passive(){return s=!0,!1}};window.addEventListener("test",null,t),window.removeEventListener("test",null,t)}catch{}return s}();function ud(s,t){const e=j1(s,t),n=e&&e.match(/^(\d+)(\.\d+)?px$/);return n?+n[1]:void 0}function ki(s,t,e,n){return{x:s.x+e*(t.x-s.x),y:s.y+e*(t.y-s.y)}}function Q1(s,t,e,n){return{x:s.x+e*(t.x-s.x),y:n==="middle"?e<.5?s.y:t.y:n==="after"?e<1?s.y:t.y:e>0?t.y:s.y}}function tE(s,t,e,n){const i={x:s.cp2x,y:s.cp2y},r={x:t.cp1x,y:t.cp1y},o=ki(s,i,e),a=ki(i,r,e),l=ki(r,t,e),c=ki(o,a,e),h=ki(a,l,e);return ki(c,h,e)}const eE=function(s,t){return{x(e){return s+s+t-e},setWidth(e){t=e},textAlign(e){return e==="center"?e:e==="right"?"left":"right"},xPlus(e,n){return e-n},leftForLtr(e,n){return e-n}}},nE=function(){return{x(s){return s},setWidth(s){},textAlign(s){return s},xPlus(s,t){return s+t},leftForLtr(s,t){return s}}};function Os(s,t,e){return s?eE(t,e):nE()}function zp(s,t){let e,n;(t==="ltr"||t==="rtl")&&(e=s.canvas.style,n=[e.getPropertyValue("direction"),e.getPropertyPriority("direction")],e.setProperty("direction",t,"important"),s.prevTextDirection=n)}function kp(s,t){t!==void 0&&(delete s.prevTextDirection,s.canvas.style.setProperty("direction",t[0],t[1]))}function Np(s){return s==="angle"?{between:Or,compare:i1,normalize:Qe}:{between:ti,compare:(t,e)=>t-e,normalize:t=>t}}function dd({start:s,end:t,count:e,loop:n,style:i}){return{start:s%e,end:t%e,loop:n&&(t-s+1)%e===0,style:i}}function iE(s,t,e){const{property:n,start:i,end:r}=e,{between:o,normalize:a}=Np(n),l=t.length;let{start:c,end:h,loop:u}=s,d,f;if(u){for(c+=l,h+=l,d=0,f=l;d<f&&o(a(t[c%l][n]),i,r);++d)c--,h--;c%=l,h%=l}return h<c&&(h+=l),{start:c,end:h,loop:u,style:s.style}}function Bp(s,t,e){if(!e)return[s];const{property:n,start:i,end:r}=e,o=t.length,{compare:a,between:l,normalize:c}=Np(n),{start:h,end:u,loop:d,style:f}=iE(s,t,e),g=[];let _=!1,m=null,p,x,w;const v=()=>l(i,w,p)&&a(i,w)!==0,y=()=>a(r,p)===0||l(r,w,p),S=()=>_||v(),T=()=>!_||y();for(let A=h,b=h;A<=u;++A)x=t[A%o],!x.skip&&(p=c(x[n]),p!==w&&(_=l(p,i,r),m===null&&S()&&(m=a(p,i)===0?A:b),m!==null&&T()&&(g.push(dd({start:m,end:A,loop:d,count:o,style:f})),m=null),b=A,w=p));return m!==null&&g.push(dd({start:m,end:u,loop:d,count:o,style:f})),g}function Up(s,t){const e=[],n=s.segments;for(let i=0;i<n.length;i++){const r=Bp(n[i],s.points,t);r.length&&e.push(...r)}return e}function sE(s,t,e,n){let i=0,r=t-1;if(e&&!n)for(;i<t&&!s[i].skip;)i++;for(;i<t&&s[i].skip;)i++;for(i%=t,e&&(r+=i);r>i&&s[r%t].skip;)r--;return r%=t,{start:i,end:r}}function rE(s,t,e,n){const i=s.length,r=[];let o=t,a=s[t],l;for(l=t+1;l<=e;++l){const c=s[l%i];c.skip||c.stop?a.skip||(n=!1,r.push({start:t%i,end:(l-1)%i,loop:n}),t=o=c.stop?l:null):(o=l,a.skip&&(t=l)),a=c}return o!==null&&r.push({start:t%i,end:o%i,loop:n}),r}function oE(s,t){const e=s.points,n=s.options.spanGaps,i=e.length;if(!i)return[];const r=!!s._loop,{start:o,end:a}=sE(e,i,r,n);if(n===!0)return fd(s,[{start:o,end:a,loop:r}],e,t);const l=a<o?a+i:a,c=!!s._fullLoop&&o===0&&a===i-1;return fd(s,rE(e,o,l,c),e,t)}function fd(s,t,e,n){return!n||!n.setContext||!e?t:aE(s,t,e,n)}function aE(s,t,e,n){const i=s._chart.getContext(),r=pd(s.options),{_datasetIndex:o,options:{spanGaps:a}}=s,l=e.length,c=[];let h=r,u=t[0].start,d=u;function f(g,_,m,p){const x=a?-1:1;if(g!==_){for(g+=l;e[g%l].skip;)g-=x;for(;e[_%l].skip;)_+=x;g%l!==_%l&&(c.push({start:g%l,end:_%l,loop:m,style:p}),h=p,u=_%l)}}for(const g of t){u=a?u:g.start;let _=e[u%l],m;for(d=u+1;d<=g.end;d++){const p=e[d%l];m=pd(n.setContext(bi(i,{type:"segment",p0:_,p1:p,p0DataIndex:(d-1)%l,p1DataIndex:d%l,datasetIndex:o}))),lE(m,h)&&f(u,d-1,g.loop,h),_=p,h=m}u<d-1&&f(u,d-1,g.loop,h)}return c}function pd(s){return{backgroundColor:s.backgroundColor,borderCapStyle:s.borderCapStyle,borderDash:s.borderDash,borderDashOffset:s.borderDashOffset,borderJoinStyle:s.borderJoinStyle,borderWidth:s.borderWidth,borderColor:s.borderColor}}function lE(s,t){if(!t)return!1;const e=[],n=function(i,r){return Sc(r)?(e.includes(r)||e.push(r),e.indexOf(r)):r};return JSON.stringify(s,n)!==JSON.stringify(t,n)}/*!
 * Chart.js v4.3.0
 * https://www.chartjs.org
 * (c) 2023 Chart.js Contributors
 * Released under the MIT License
 */class cE{constructor(){this._request=null,this._charts=new Map,this._running=!1,this._lastDate=void 0}_notify(t,e,n,i){const r=e.listeners[i],o=e.duration;r.forEach(a=>a({chart:t,initial:e.initial,numSteps:o,currentStep:Math.min(n-e.start,o)}))}_refresh(){this._request||(this._running=!0,this._request=Mp.call(window,()=>{this._update(),this._request=null,this._running&&this._refresh()}))}_update(t=Date.now()){let e=0;this._charts.forEach((n,i)=>{if(!n.running||!n.items.length)return;const r=n.items;let o=r.length-1,a=!1,l;for(;o>=0;--o)l=r[o],l._active?(l._total>n.duration&&(n.duration=l._total),l.tick(t),a=!0):(r[o]=r[r.length-1],r.pop());a&&(i.draw(),this._notify(i,n,t,"progress")),r.length||(n.running=!1,this._notify(i,n,t,"complete"),n.initial=!1),e+=r.length}),this._lastDate=t,e===0&&(this._running=!1)}_getAnims(t){const e=this._charts;let n=e.get(t);return n||(n={running:!1,initial:!0,items:[],listeners:{complete:[],progress:[]}},e.set(t,n)),n}listen(t,e,n){this._getAnims(t).listeners[e].push(n)}add(t,e){!e||!e.length||this._getAnims(t).items.push(...e)}has(t){return this._getAnims(t).items.length>0}start(t){const e=this._charts.get(t);e&&(e.running=!0,e.start=Date.now(),e.duration=e.items.reduce((n,i)=>Math.max(n,i._duration),0),this._refresh())}running(t){if(!this._running)return!1;const e=this._charts.get(t);return!(!e||!e.running||!e.items.length)}stop(t){const e=this._charts.get(t);if(!e||!e.items.length)return;const n=e.items;let i=n.length-1;for(;i>=0;--i)n[i].cancel();e.items=[],this._notify(t,e,Date.now(),"complete")}remove(t){return this._charts.delete(t)}}var Yn=new cE;const md="transparent",hE={boolean(s,t,e){return e>.5?t:s},color(s,t,e){const n=rd(s||md),i=n.valid&&rd(t||md);return i&&i.valid?i.mix(n,e).hexString():t},number(s,t,e){return s+(t-s)*e}};class uE{constructor(t,e,n,i){const r=e[n];i=fr([t.to,i,r,t.from]);const o=fr([t.from,r,i]);this._active=!0,this._fn=t.fn||hE[t.type||typeof o],this._easing=Sr[t.easing]||Sr.linear,this._start=Math.floor(Date.now()+(t.delay||0)),this._duration=this._total=Math.floor(t.duration),this._loop=!!t.loop,this._target=e,this._prop=n,this._from=o,this._to=i,this._promises=void 0}active(){return this._active}update(t,e,n){if(this._active){this._notify(!1);const i=this._target[this._prop],r=n-this._start,o=this._duration-r;this._start=n,this._duration=Math.floor(Math.max(o,t.duration)),this._total+=r,this._loop=!!t.loop,this._to=fr([t.to,e,i,t.from]),this._from=fr([t.from,i,e])}}cancel(){this._active&&(this.tick(Date.now()),this._active=!1,this._notify(!1))}tick(t){const e=t-this._start,n=this._duration,i=this._prop,r=this._from,o=this._loop,a=this._to;let l;if(this._active=r!==a&&(o||e<n),!this._active){this._target[i]=a,this._notify(!0);return}if(e<0){this._target[i]=r;return}l=e/n%2,l=o&&l>1?2-l:l,l=this._easing(Math.min(1,Math.max(0,l))),this._target[i]=this._fn(r,a,l)}wait(){const t=this._promises||(this._promises=[]);return new Promise((e,n)=>{t.push({res:e,rej:n})})}_notify(t){const e=t?"res":"rej",n=this._promises||[];for(let i=0;i<n.length;i++)n[i][e]()}}class Vp{constructor(t,e){this._chart=t,this._properties=new Map,this.configure(e)}configure(t){if(!Bt(t))return;const e=Object.keys(ue.animation),n=this._properties;Object.getOwnPropertyNames(t).forEach(i=>{const r=t[i];if(!Bt(r))return;const o={};for(const a of e)o[a]=r[a];(ne(r.properties)&&r.properties||[i]).forEach(a=>{(a===i||!n.has(a))&&n.set(a,o)})})}_animateOptions(t,e){const n=e.options,i=fE(t,n);if(!i)return[];const r=this._createAnimations(i,n);return n.$shared&&dE(t.options.$animations,n).then(()=>{t.options=n},()=>{}),r}_createAnimations(t,e){const n=this._properties,i=[],r=t.$animations||(t.$animations={}),o=Object.keys(e),a=Date.now();let l;for(l=o.length-1;l>=0;--l){const c=o[l];if(c.charAt(0)==="$")continue;if(c==="options"){i.push(...this._animateOptions(t,e));continue}const h=e[c];let u=r[c];const d=n.get(c);if(u)if(d&&u.active()){u.update(d,h,a);continue}else u.cancel();if(!d||!d.duration){t[c]=h;continue}r[c]=u=new uE(d,t,c,h),i.push(u)}return i}update(t,e){if(this._properties.size===0){Object.assign(t,e);return}const n=this._createAnimations(t,e);if(n.length)return Yn.add(this._chart,n),!0}}function dE(s,t){const e=[],n=Object.keys(t);for(let i=0;i<n.length;i++){const r=s[n[i]];r&&r.active()&&e.push(r.wait())}return Promise.all(e)}function fE(s,t){if(!t)return;let e=s.options;if(!e){s.options=t;return}return e.$shared&&(s.options=e=Object.assign({},e,{$shared:!1,$animations:{}})),e}function gd(s,t){const e=s&&s.options||{},n=e.reverse,i=e.min===void 0?t:0,r=e.max===void 0?t:0;return{start:n?r:i,end:n?i:r}}function pE(s,t,e){if(e===!1)return!1;const n=gd(s,e),i=gd(t,e);return{top:i.end,right:n.end,bottom:i.start,left:n.start}}function mE(s){let t,e,n,i;return Bt(s)?(t=s.top,e=s.right,n=s.bottom,i=s.left):t=e=n=i=s,{top:t,right:e,bottom:n,left:i,disabled:s===!1}}function Hp(s,t){const e=[],n=s._getSortedDatasetMetas(t);let i,r;for(i=0,r=n.length;i<r;++i)e.push(n[i].index);return e}function _d(s,t,e,n={}){const i=s.keys,r=n.mode==="single";let o,a,l,c;if(t!==null){for(o=0,a=i.length;o<a;++o){if(l=+i[o],l===e){if(n.all)continue;break}c=s.values[l],ce(c)&&(r||t===0||On(t)===On(c))&&(t+=c)}return t}}function gE(s){const t=Object.keys(s),e=new Array(t.length);let n,i,r;for(n=0,i=t.length;n<i;++n)r=t[n],e[n]={x:r,y:s[r]};return e}function xd(s,t){const e=s&&s.options.stacked;return e||e===void 0&&t.stack!==void 0}function _E(s,t,e){return`${s.id}.${t.id}.${e.stack||e.type}`}function xE(s){const{min:t,max:e,minDefined:n,maxDefined:i}=s.getUserBounds();return{min:n?t:Number.NEGATIVE_INFINITY,max:i?e:Number.POSITIVE_INFINITY}}function vE(s,t,e){const n=s[t]||(s[t]={});return n[e]||(n[e]={})}function vd(s,t,e,n){for(const i of t.getMatchingVisibleMetas(n).reverse()){const r=s[i.index];if(e&&r>0||!e&&r<0)return i.index}return null}function yd(s,t){const{chart:e,_cachedMeta:n}=s,i=e._stacks||(e._stacks={}),{iScale:r,vScale:o,index:a}=n,l=r.axis,c=o.axis,h=_E(r,o,n),u=t.length;let d;for(let f=0;f<u;++f){const g=t[f],{[l]:_,[c]:m}=g,p=g._stacks||(g._stacks={});d=p[c]=vE(i,h,_),d[a]=m,d._top=vd(d,o,!0,n.type),d._bottom=vd(d,o,!1,n.type);const x=d._visualValues||(d._visualValues={});x[a]=m}}function vl(s,t){const e=s.scales;return Object.keys(e).filter(n=>e[n].axis===t).shift()}function yE(s,t){return bi(s,{active:!1,dataset:void 0,datasetIndex:t,index:t,mode:"default",type:"dataset"})}function bE(s,t,e){return bi(s,{active:!1,dataIndex:t,parsed:void 0,raw:void 0,element:e,index:t,mode:"default",type:"data"})}function ir(s,t){const e=s.controller.index,n=s.vScale&&s.vScale.axis;if(n){t=t||s._parsed;for(const i of t){const r=i._stacks;if(!r||r[n]===void 0||r[n][e]===void 0)return;delete r[n][e],r[n]._visualValues!==void 0&&r[n]._visualValues[e]!==void 0&&delete r[n]._visualValues[e]}}}const yl=s=>s==="reset"||s==="none",bd=(s,t)=>t?s:Object.assign({},s),ME=(s,t,e)=>s&&!t.hidden&&t._stacked&&{keys:Hp(e,!0),values:null};class Mn{constructor(t,e){this.chart=t,this._ctx=t.ctx,this.index=e,this._cachedDataOpts={},this._cachedMeta=this.getMeta(),this._type=this._cachedMeta.type,this.options=void 0,this._parsing=!1,this._data=void 0,this._objectData=void 0,this._sharedOptions=void 0,this._drawStart=void 0,this._drawCount=void 0,this.enableOptionSharing=!1,this.supportsDecimation=!1,this.$context=void 0,this._syncList=[],this.datasetElementType=new.target.datasetElementType,this.dataElementType=new.target.dataElementType,this.initialize()}initialize(){const t=this._cachedMeta;this.configure(),this.linkScales(),t._stacked=xd(t.vScale,t),this.addElements(),this.options.fill&&!this.chart.isPluginEnabled("filler")&&console.warn("Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options")}updateIndex(t){this.index!==t&&ir(this._cachedMeta),this.index=t}linkScales(){const t=this.chart,e=this._cachedMeta,n=this.getDataset(),i=(u,d,f,g)=>u==="x"?d:u==="r"?g:f,r=e.xAxisID=Rt(n.xAxisID,vl(t,"x")),o=e.yAxisID=Rt(n.yAxisID,vl(t,"y")),a=e.rAxisID=Rt(n.rAxisID,vl(t,"r")),l=e.indexAxis,c=e.iAxisID=i(l,r,o,a),h=e.vAxisID=i(l,o,r,a);e.xScale=this.getScaleForId(r),e.yScale=this.getScaleForId(o),e.rScale=this.getScaleForId(a),e.iScale=this.getScaleForId(c),e.vScale=this.getScaleForId(h)}getDataset(){return this.chart.data.datasets[this.index]}getMeta(){return this.chart.getDatasetMeta(this.index)}getScaleForId(t){return this.chart.scales[t]}_getOtherScale(t){const e=this._cachedMeta;return t===e.iScale?e.vScale:e.iScale}reset(){this._update("reset")}_destroy(){const t=this._cachedMeta;this._data&&nd(this._data,this),t._stacked&&ir(t)}_dataCheck(){const t=this.getDataset(),e=t.data||(t.data=[]),n=this._data;if(Bt(e))this._data=gE(e);else if(n!==e){if(n){nd(n,this);const i=this._cachedMeta;ir(i),i._parsed=[]}e&&Object.isExtensible(e)&&a1(e,this),this._syncList=[],this._data=e}}addElements(){const t=this._cachedMeta;this._dataCheck(),this.datasetElementType&&(t.dataset=new this.datasetElementType)}buildOrUpdateElements(t){const e=this._cachedMeta,n=this.getDataset();let i=!1;this._dataCheck();const r=e._stacked;e._stacked=xd(e.vScale,e),e.stack!==n.stack&&(i=!0,ir(e),e.stack=n.stack),this._resyncElements(t),(i||r!==e._stacked)&&yd(this,e._parsed)}configure(){const t=this.chart.config,e=t.datasetScopeKeys(this._type),n=t.getOptionScopes(this.getDataset(),e,!0);this.options=t.createResolver(n,this.getContext()),this._parsing=this.options.parsing,this._cachedDataOpts={}}parse(t,e){const{_cachedMeta:n,_data:i}=this,{iScale:r,_stacked:o}=n,a=r.axis;let l=t===0&&e===i.length?!0:n._sorted,c=t>0&&n._parsed[t-1],h,u,d;if(this._parsing===!1)n._parsed=i,n._sorted=!0,d=i;else{ne(i[t])?d=this.parseArrayData(n,i,t,e):Bt(i[t])?d=this.parseObjectData(n,i,t,e):d=this.parsePrimitiveData(n,i,t,e);const f=()=>u[a]===null||c&&u[a]<c[a];for(h=0;h<e;++h)n._parsed[h+t]=u=d[h],l&&(f()&&(l=!1),c=u);n._sorted=l}o&&yd(this,d)}parsePrimitiveData(t,e,n,i){const{iScale:r,vScale:o}=t,a=r.axis,l=o.axis,c=r.getLabels(),h=r===o,u=new Array(i);let d,f,g;for(d=0,f=i;d<f;++d)g=d+n,u[d]={[a]:h||r.parse(c[g],g),[l]:o.parse(e[g],g)};return u}parseArrayData(t,e,n,i){const{xScale:r,yScale:o}=t,a=new Array(i);let l,c,h,u;for(l=0,c=i;l<c;++l)h=l+n,u=e[h],a[l]={x:r.parse(u[0],h),y:o.parse(u[1],h)};return a}parseObjectData(t,e,n,i){const{xScale:r,yScale:o}=t,{xAxisKey:a="x",yAxisKey:l="y"}=this._parsing,c=new Array(i);let h,u,d,f;for(h=0,u=i;h<u;++h)d=h+n,f=e[d],c[h]={x:r.parse(xi(f,a),d),y:o.parse(xi(f,l),d)};return c}getParsed(t){return this._cachedMeta._parsed[t]}getDataElement(t){return this._cachedMeta.data[t]}applyStack(t,e,n){const i=this.chart,r=this._cachedMeta,o=e[t.axis],a={keys:Hp(i,!0),values:e._stacks[t.axis]._visualValues};return _d(a,o,r.index,{mode:n})}updateRangeFromParsed(t,e,n,i){const r=n[e.axis];let o=r===null?NaN:r;const a=i&&n._stacks[e.axis];i&&a&&(i.values=a,o=_d(i,r,this._cachedMeta.index)),t.min=Math.min(t.min,o),t.max=Math.max(t.max,o)}getMinMax(t,e){const n=this._cachedMeta,i=n._parsed,r=n._sorted&&t===n.iScale,o=i.length,a=this._getOtherScale(t),l=ME(e,n,this.chart),c={min:Number.POSITIVE_INFINITY,max:Number.NEGATIVE_INFINITY},{min:h,max:u}=xE(a);let d,f;function g(){f=i[d];const _=f[a.axis];return!ce(f[t.axis])||h>_||u<_}for(d=0;d<o&&!(!g()&&(this.updateRangeFromParsed(c,t,f,l),r));++d);if(r){for(d=o-1;d>=0;--d)if(!g()){this.updateRangeFromParsed(c,t,f,l);break}}return c}getAllParsedValues(t){const e=this._cachedMeta._parsed,n=[];let i,r,o;for(i=0,r=e.length;i<r;++i)o=e[i][t.axis],ce(o)&&n.push(o);return n}getMaxOverflow(){return!1}getLabelAndValue(t){const e=this._cachedMeta,n=e.iScale,i=e.vScale,r=this.getParsed(t);return{label:n?""+n.getLabelForValue(r[n.axis]):"",value:i?""+i.getLabelForValue(r[i.axis]):""}}_update(t){const e=this._cachedMeta;this.update(t||"default"),e._clip=mE(Rt(this.options.clip,pE(e.xScale,e.yScale,this.getMaxOverflow())))}update(t){}draw(){const t=this._ctx,e=this.chart,n=this._cachedMeta,i=n.data||[],r=e.chartArea,o=[],a=this._drawStart||0,l=this._drawCount||i.length-a,c=this.options.drawActiveElementsOnTop;let h;for(n.dataset&&n.dataset.draw(t,r,a,l),h=a;h<a+l;++h){const u=i[h];u.hidden||(u.active&&c?o.push(u):u.draw(t,r))}for(h=0;h<o.length;++h)o[h].draw(t,r)}getStyle(t,e){const n=e?"active":"default";return t===void 0&&this._cachedMeta.dataset?this.resolveDatasetElementOptions(n):this.resolveDataElementOptions(t||0,n)}getContext(t,e,n){const i=this.getDataset();let r;if(t>=0&&t<this._cachedMeta.data.length){const o=this._cachedMeta.data[t];r=o.$context||(o.$context=bE(this.getContext(),t,o)),r.parsed=this.getParsed(t),r.raw=i.data[t],r.index=r.dataIndex=t}else r=this.$context||(this.$context=yE(this.chart.getContext(),this.index)),r.dataset=i,r.index=r.datasetIndex=this.index;return r.active=!!e,r.mode=n,r}resolveDatasetElementOptions(t){return this._resolveElementOptions(this.datasetElementType.id,t)}resolveDataElementOptions(t,e){return this._resolveElementOptions(this.dataElementType.id,e,t)}_resolveElementOptions(t,e="default",n){const i=e==="active",r=this._cachedDataOpts,o=t+"-"+e,a=r[o],l=this.enableOptionSharing&&Fr(n);if(a)return bd(a,l);const c=this.chart.config,h=c.datasetElementScopeKeys(this._type,t),u=i?[`${t}Hover`,"hover",t,""]:[t,""],d=c.getOptionScopes(this.getDataset(),h),f=Object.keys(ue.elements[t]),g=()=>this.getContext(n,i,e),_=c.resolveNamedOptions(d,f,g,u);return _.$shared&&(_.$shared=l,r[o]=Object.freeze(bd(_,l))),_}_resolveAnimations(t,e,n){const i=this.chart,r=this._cachedDataOpts,o=`animation-${e}`,a=r[o];if(a)return a;let l;if(i.options.animation!==!1){const h=this.chart.config,u=h.datasetAnimationScopeKeys(this._type,e),d=h.getOptionScopes(this.getDataset(),u);l=h.createResolver(d,this.getContext(t,n,e))}const c=new Vp(i,l&&l.animations);return l&&l._cacheable&&(r[o]=Object.freeze(c)),c}getSharedOptions(t){if(t.$shared)return this._sharedOptions||(this._sharedOptions=Object.assign({},t))}includeOptions(t,e){return!e||yl(t)||this.chart._animationsDisabled}_getSharedOptions(t,e){const n=this.resolveDataElementOptions(t,e),i=this._sharedOptions,r=this.getSharedOptions(n),o=this.includeOptions(e,r)||r!==i;return this.updateSharedOptions(r,e,n),{sharedOptions:r,includeOptions:o}}updateElement(t,e,n,i){yl(i)?Object.assign(t,n):this._resolveAnimations(e,i).update(t,n)}updateSharedOptions(t,e,n){t&&!yl(e)&&this._resolveAnimations(void 0,e).update(t,n)}_setStyle(t,e,n,i){t.active=i;const r=this.getStyle(e,i);this._resolveAnimations(e,n,i).update(t,{options:!i&&this.getSharedOptions(r)||r})}removeHoverStyle(t,e,n){this._setStyle(t,n,"active",!1)}setHoverStyle(t,e,n){this._setStyle(t,n,"active",!0)}_removeDatasetHoverStyle(){const t=this._cachedMeta.dataset;t&&this._setStyle(t,void 0,"active",!1)}_setDatasetHoverStyle(){const t=this._cachedMeta.dataset;t&&this._setStyle(t,void 0,"active",!0)}_resyncElements(t){const e=this._data,n=this._cachedMeta.data;for(const[a,l,c]of this._syncList)this[a](l,c);this._syncList=[];const i=n.length,r=e.length,o=Math.min(r,i);o&&this.parse(0,o),r>i?this._insertElements(i,r-i,t):r<i&&this._removeElements(r,i-r)}_insertElements(t,e,n=!0){const i=this._cachedMeta,r=i.data,o=t+e;let a;const l=c=>{for(c.length+=e,a=c.length-1;a>=o;a--)c[a]=c[a-e]};for(l(r),a=t;a<o;++a)r[a]=new this.dataElementType;this._parsing&&l(i._parsed),this.parse(t,e),n&&this.updateElements(r,t,e,"reset")}updateElements(t,e,n,i){}_removeElements(t,e){const n=this._cachedMeta;if(this._parsing){const i=n._parsed.splice(t,e);n._stacked&&ir(n,i)}n.data.splice(t,e)}_sync(t){if(this._parsing)this._syncList.push(t);else{const[e,n,i]=t;this[e](n,i)}this.chart._dataChanges.push([this.index,...t])}_onDataPush(){const t=arguments.length;this._sync(["_insertElements",this.getDataset().data.length-t,t])}_onDataPop(){this._sync(["_removeElements",this._cachedMeta.data.length-1,1])}_onDataShift(){this._sync(["_removeElements",0,1])}_onDataSplice(t,e){e&&this._sync(["_removeElements",t,e]);const n=arguments.length-2;n&&this._sync(["_insertElements",t,n])}_onDataUnshift(){this._sync(["_insertElements",0,arguments.length])}}lt(Mn,"defaults",{}),lt(Mn,"datasetElementType",null),lt(Mn,"dataElementType",null);function wE(s,t){if(!s._cache.$bar){const e=s.getMatchingVisibleMetas(t);let n=[];for(let i=0,r=e.length;i<r;i++)n=n.concat(e[i].controller.getAllParsedValues(s));s._cache.$bar=bp(n.sort((i,r)=>i-r))}return s._cache.$bar}function SE(s){const t=s.iScale,e=wE(t,s.type);let n=t._length,i,r,o,a;const l=()=>{o===32767||o===-32768||(Fr(a)&&(n=Math.min(n,Math.abs(o-a)||n)),a=o)};for(i=0,r=e.length;i<r;++i)o=t.getPixelForValue(e[i]),l();for(a=void 0,i=0,r=t.ticks.length;i<r;++i)o=t.getPixelForTick(i),l();return n}function EE(s,t,e,n){const i=e.barThickness;let r,o;return Wt(i)?(r=t.min*e.categoryPercentage,o=e.barPercentage):(r=i*n,o=1),{chunk:r/n,ratio:o,start:t.pixels[s]-r/2}}function AE(s,t,e,n){const i=t.pixels,r=i[s];let o=s>0?i[s-1]:null,a=s<i.length-1?i[s+1]:null;const l=e.categoryPercentage;o===null&&(o=r-(a===null?t.end-t.start:a-r)),a===null&&(a=r+r-o);const c=r-(r-Math.min(o,a))/2*l;return{chunk:Math.abs(a-o)/2*l/n,ratio:e.barPercentage,start:c}}function TE(s,t,e,n){const i=e.parse(s[0],n),r=e.parse(s[1],n),o=Math.min(i,r),a=Math.max(i,r);let l=o,c=a;Math.abs(o)>Math.abs(a)&&(l=a,c=o),t[e.axis]=c,t._custom={barStart:l,barEnd:c,start:i,end:r,min:o,max:a}}function Wp(s,t,e,n){return ne(s)?TE(s,t,e,n):t[e.axis]=e.parse(s,n),t}function Md(s,t,e,n){const i=s.iScale,r=s.vScale,o=i.getLabels(),a=i===r,l=[];let c,h,u,d;for(c=e,h=e+n;c<h;++c)d=t[c],u={},u[i.axis]=a||i.parse(o[c],c),l.push(Wp(d,u,r,c));return l}function bl(s){return s&&s.barStart!==void 0&&s.barEnd!==void 0}function CE(s,t,e){return s!==0?On(s):(t.isHorizontal()?1:-1)*(t.min>=e?1:-1)}function PE(s){let t,e,n,i,r;return s.horizontal?(t=s.base>s.x,e="left",n="right"):(t=s.base<s.y,e="bottom",n="top"),t?(i="end",r="start"):(i="start",r="end"),{start:e,end:n,reverse:t,top:i,bottom:r}}function LE(s,t,e,n){let i=t.borderSkipped;const r={};if(!i){s.borderSkipped=r;return}if(i===!0){s.borderSkipped={top:!0,right:!0,bottom:!0,left:!0};return}const{start:o,end:a,reverse:l,top:c,bottom:h}=PE(s);i==="middle"&&e&&(s.enableBorderRadius=!0,(e._top||0)===n?i=c:(e._bottom||0)===n?i=h:(r[wd(h,o,a,l)]=!0,i=c)),r[wd(i,o,a,l)]=!0,s.borderSkipped=r}function wd(s,t,e,n){return n?(s=RE(s,t,e),s=Sd(s,e,t)):s=Sd(s,t,e),s}function RE(s,t,e){return s===t?e:s===e?t:s}function Sd(s,t,e){return s==="start"?t:s==="end"?e:s}function DE(s,{inflateAmount:t},e){s.inflateAmount=t==="auto"?e===1?.33:0:t}class Uo extends Mn{parsePrimitiveData(t,e,n,i){return Md(t,e,n,i)}parseArrayData(t,e,n,i){return Md(t,e,n,i)}parseObjectData(t,e,n,i){const{iScale:r,vScale:o}=t,{xAxisKey:a="x",yAxisKey:l="y"}=this._parsing,c=r.axis==="x"?a:l,h=o.axis==="x"?a:l,u=[];let d,f,g,_;for(d=n,f=n+i;d<f;++d)_=e[d],g={},g[r.axis]=r.parse(xi(_,c),d),u.push(Wp(xi(_,h),g,o,d));return u}updateRangeFromParsed(t,e,n,i){super.updateRangeFromParsed(t,e,n,i);const r=n._custom;r&&e===this._cachedMeta.vScale&&(t.min=Math.min(t.min,r.min),t.max=Math.max(t.max,r.max))}getMaxOverflow(){return 0}getLabelAndValue(t){const e=this._cachedMeta,{iScale:n,vScale:i}=e,r=this.getParsed(t),o=r._custom,a=bl(o)?"["+o.start+", "+o.end+"]":""+i.getLabelForValue(r[i.axis]);return{label:""+n.getLabelForValue(r[n.axis]),value:a}}initialize(){this.enableOptionSharing=!0,super.initialize();const t=this._cachedMeta;t.stack=this.getDataset().stack}update(t){const e=this._cachedMeta;this.updateElements(e.data,0,e.data.length,t)}updateElements(t,e,n,i){const r=i==="reset",{index:o,_cachedMeta:{vScale:a}}=this,l=a.getBasePixel(),c=a.isHorizontal(),h=this._getRuler(),{sharedOptions:u,includeOptions:d}=this._getSharedOptions(e,i);for(let f=e;f<e+n;f++){const g=this.getParsed(f),_=r||Wt(g[a.axis])?{base:l,head:l}:this._calculateBarValuePixels(f),m=this._calculateBarIndexPixels(f,h),p=(g._stacks||{})[a.axis],x={horizontal:c,base:_.base,enableBorderRadius:!p||bl(g._custom)||o===p._top||o===p._bottom,x:c?_.head:m.center,y:c?m.center:_.head,height:c?m.size:Math.abs(_.size),width:c?Math.abs(_.size):m.size};d&&(x.options=u||this.resolveDataElementOptions(f,t[f].active?"active":i));const w=x.options||t[f].options;LE(x,w,p,o),DE(x,w,h.ratio),this.updateElement(t[f],f,x,i)}}_getStacks(t,e){const{iScale:n}=this._cachedMeta,i=n.getMatchingVisibleMetas(this._type).filter(l=>l.controller.options.grouped),r=n.options.stacked,o=[],a=l=>{const c=l.controller.getParsed(e),h=c&&c[l.vScale.axis];if(Wt(h)||isNaN(h))return!0};for(const l of i)if(!(e!==void 0&&a(l))&&((r===!1||o.indexOf(l.stack)===-1||r===void 0&&l.stack===void 0)&&o.push(l.stack),l.index===t))break;return o.length||o.push(void 0),o}_getStackCount(t){return this._getStacks(void 0,t).length}_getStackIndex(t,e,n){const i=this._getStacks(t,n),r=e!==void 0?i.indexOf(e):-1;return r===-1?i.length-1:r}_getRuler(){const t=this.options,e=this._cachedMeta,n=e.iScale,i=[];let r,o;for(r=0,o=e.data.length;r<o;++r)i.push(n.getPixelForValue(this.getParsed(r)[n.axis],r));const a=t.barThickness;return{min:a||SE(e),pixels:i,start:n._startPixel,end:n._endPixel,stackCount:this._getStackCount(),scale:n,grouped:t.grouped,ratio:a?1:t.categoryPercentage*t.barPercentage}}_calculateBarValuePixels(t){const{_cachedMeta:{vScale:e,_stacked:n,index:i},options:{base:r,minBarLength:o}}=this,a=r||0,l=this.getParsed(t),c=l._custom,h=bl(c);let u=l[e.axis],d=0,f=n?this.applyStack(e,l,n):u,g,_;f!==u&&(d=f-u,f=u),h&&(u=c.barStart,f=c.barEnd-c.barStart,u!==0&&On(u)!==On(c.barEnd)&&(d=0),d+=u);const m=!Wt(r)&&!h?r:d;let p=e.getPixelForValue(m);if(this.chart.getDataVisibility(t)?g=e.getPixelForValue(d+f):g=p,_=g-p,Math.abs(_)<o){_=CE(_,e,a)*o,u===a&&(p-=_/2);const x=e.getPixelForDecimal(0),w=e.getPixelForDecimal(1),v=Math.min(x,w),y=Math.max(x,w);p=Math.max(Math.min(p,y),v),g=p+_,n&&!h&&(l._stacks[e.axis]._visualValues[i]=e.getValueForPixel(g)-e.getValueForPixel(p))}if(p===e.getPixelForValue(a)){const x=On(_)*e.getLineWidthForValue(a)/2;p+=x,_-=x}return{size:_,base:p,head:g,center:g+_/2}}_calculateBarIndexPixels(t,e){const n=e.scale,i=this.options,r=i.skipNull,o=Rt(i.maxBarThickness,1/0);let a,l;if(e.grouped){const c=r?this._getStackCount(t):e.stackCount,h=i.barThickness==="flex"?AE(t,e,i,c):EE(t,e,i,c),u=this._getStackIndex(this.index,this._cachedMeta.stack,r?t:void 0);a=h.start+h.chunk*u+h.chunk/2,l=Math.min(o,h.chunk*h.ratio)}else a=n.getPixelForValue(this.getParsed(t)[n.axis],t),l=Math.min(o,e.min*e.ratio);return{base:a-l/2,head:a+l/2,center:a,size:l}}draw(){const t=this._cachedMeta,e=t.vScale,n=t.data,i=n.length;let r=0;for(;r<i;++r)this.getParsed(r)[e.axis]!==null&&n[r].draw(this._ctx)}}lt(Uo,"id","bar"),lt(Uo,"defaults",{datasetElementType:!1,dataElementType:"bar",categoryPercentage:.8,barPercentage:.9,grouped:!0,animations:{numbers:{type:"number",properties:["x","y","base","width","height"]}}}),lt(Uo,"overrides",{scales:{_index_:{type:"category",offset:!0,grid:{offset:!0}},_value_:{type:"linear",beginAtZero:!0}}});class Vo extends Mn{initialize(){this.enableOptionSharing=!0,super.initialize()}parsePrimitiveData(t,e,n,i){const r=super.parsePrimitiveData(t,e,n,i);for(let o=0;o<r.length;o++)r[o]._custom=this.resolveDataElementOptions(o+n).radius;return r}parseArrayData(t,e,n,i){const r=super.parseArrayData(t,e,n,i);for(let o=0;o<r.length;o++){const a=e[n+o];r[o]._custom=Rt(a[2],this.resolveDataElementOptions(o+n).radius)}return r}parseObjectData(t,e,n,i){const r=super.parseObjectData(t,e,n,i);for(let o=0;o<r.length;o++){const a=e[n+o];r[o]._custom=Rt(a&&a.r&&+a.r,this.resolveDataElementOptions(o+n).radius)}return r}getMaxOverflow(){const t=this._cachedMeta.data;let e=0;for(let n=t.length-1;n>=0;--n)e=Math.max(e,t[n].size(this.resolveDataElementOptions(n))/2);return e>0&&e}getLabelAndValue(t){const e=this._cachedMeta,n=this.chart.data.labels||[],{xScale:i,yScale:r}=e,o=this.getParsed(t),a=i.getLabelForValue(o.x),l=r.getLabelForValue(o.y),c=o._custom;return{label:n[t]||"",value:"("+a+", "+l+(c?", "+c:"")+")"}}update(t){const e=this._cachedMeta.data;this.updateElements(e,0,e.length,t)}updateElements(t,e,n,i){const r=i==="reset",{iScale:o,vScale:a}=this._cachedMeta,{sharedOptions:l,includeOptions:c}=this._getSharedOptions(e,i),h=o.axis,u=a.axis;for(let d=e;d<e+n;d++){const f=t[d],g=!r&&this.getParsed(d),_={},m=_[h]=r?o.getPixelForDecimal(.5):o.getPixelForValue(g[h]),p=_[u]=r?a.getBasePixel():a.getPixelForValue(g[u]);_.skip=isNaN(m)||isNaN(p),c&&(_.options=l||this.resolveDataElementOptions(d,f.active?"active":i),r&&(_.options.radius=0)),this.updateElement(f,d,_,i)}}resolveDataElementOptions(t,e){const n=this.getParsed(t);let i=super.resolveDataElementOptions(t,e);i.$shared&&(i=Object.assign({},i,{$shared:!1}));const r=i.radius;return e!=="active"&&(i.radius=0),i.radius+=Rt(n&&n._custom,r),i}}lt(Vo,"id","bubble"),lt(Vo,"defaults",{datasetElementType:!1,dataElementType:"point",animations:{numbers:{type:"number",properties:["x","y","borderWidth","radius"]}}}),lt(Vo,"overrides",{scales:{x:{type:"linear"},y:{type:"linear"}}});function IE(s,t,e){let n=1,i=1,r=0,o=0;if(t<ie){const a=s,l=a+t,c=Math.cos(a),h=Math.sin(a),u=Math.cos(l),d=Math.sin(l),f=(w,v,y)=>Or(w,a,l,!0)?1:Math.max(v,v*e,y,y*e),g=(w,v,y)=>Or(w,a,l,!0)?-1:Math.min(v,v*e,y,y*e),_=f(0,c,u),m=f(he,h,d),p=g(se,c,u),x=g(se+he,h,d);n=(_-p)/2,i=(m-x)/2,r=-(_+p)/2,o=-(m+x)/2}return{ratioX:n,ratioY:i,offsetX:r,offsetY:o}}class Wi extends Mn{constructor(t,e){super(t,e),this.enableOptionSharing=!0,this.innerRadius=void 0,this.outerRadius=void 0,this.offsetX=void 0,this.offsetY=void 0}linkScales(){}parse(t,e){const n=this.getDataset().data,i=this._cachedMeta;if(this._parsing===!1)i._parsed=n;else{let r=l=>+n[l];if(Bt(n[t])){const{key:l="value"}=this._parsing;r=c=>+xi(n[c],l)}let o,a;for(o=t,a=t+e;o<a;++o)i._parsed[o]=r(o)}}_getRotation(){return yn(this.options.rotation-90)}_getCircumference(){return yn(this.options.circumference)}_getRotationExtents(){let t=ie,e=-ie;for(let n=0;n<this.chart.data.datasets.length;++n)if(this.chart.isDatasetVisible(n)&&this.chart.getDatasetMeta(n).type===this._type){const i=this.chart.getDatasetMeta(n).controller,r=i._getRotation(),o=i._getCircumference();t=Math.min(t,r),e=Math.max(e,r+o)}return{rotation:t,circumference:e-t}}update(t){const e=this.chart,{chartArea:n}=e,i=this._cachedMeta,r=i.data,o=this.getMaxBorderWidth()+this.getMaxOffset(r)+this.options.spacing,a=Math.max((Math.min(n.width,n.height)-o)/2,0),l=Math.min(XS(this.options.cutout,a),1),c=this._getRingWeight(this.index),{circumference:h,rotation:u}=this._getRotationExtents(),{ratioX:d,ratioY:f,offsetX:g,offsetY:_}=IE(u,h,l),m=(n.width-o)/d,p=(n.height-o)/f,x=Math.max(Math.min(m,p)/2,0),w=gp(this.options.radius,x),v=Math.max(w*l,0),y=(w-v)/this._getVisibleDatasetWeightTotal();this.offsetX=g*w,this.offsetY=_*w,i.total=this.calculateTotal(),this.outerRadius=w-y*this._getRingWeightOffset(this.index),this.innerRadius=Math.max(this.outerRadius-y*c,0),this.updateElements(r,0,r.length,t)}_circumference(t,e){const n=this.options,i=this._cachedMeta,r=this._getCircumference();return e&&n.animation.animateRotate||!this.chart.getDataVisibility(t)||i._parsed[t]===null||i.data[t].hidden?0:this.calculateCircumference(i._parsed[t]*r/ie)}updateElements(t,e,n,i){const r=i==="reset",o=this.chart,a=o.chartArea,c=o.options.animation,h=(a.left+a.right)/2,u=(a.top+a.bottom)/2,d=r&&c.animateScale,f=d?0:this.innerRadius,g=d?0:this.outerRadius,{sharedOptions:_,includeOptions:m}=this._getSharedOptions(e,i);let p=this._getRotation(),x;for(x=0;x<e;++x)p+=this._circumference(x,r);for(x=e;x<e+n;++x){const w=this._circumference(x,r),v=t[x],y={x:h+this.offsetX,y:u+this.offsetY,startAngle:p,endAngle:p+w,circumference:w,outerRadius:g,innerRadius:f};m&&(y.options=_||this.resolveDataElementOptions(x,v.active?"active":i)),p+=w,this.updateElement(v,x,y,i)}}calculateTotal(){const t=this._cachedMeta,e=t.data;let n=0,i;for(i=0;i<e.length;i++){const r=t._parsed[i];r!==null&&!isNaN(r)&&this.chart.getDataVisibility(i)&&!e[i].hidden&&(n+=Math.abs(r))}return n}calculateCircumference(t){const e=this._cachedMeta.total;return e>0&&!isNaN(t)?ie*(Math.abs(t)/e):0}getLabelAndValue(t){const e=this._cachedMeta,n=this.chart,i=n.data.labels||[],r=Gr(e._parsed[t],n.options.locale);return{label:i[t]||"",value:r}}getMaxBorderWidth(t){let e=0;const n=this.chart;let i,r,o,a,l;if(!t){for(i=0,r=n.data.datasets.length;i<r;++i)if(n.isDatasetVisible(i)){o=n.getDatasetMeta(i),t=o.data,a=o.controller;break}}if(!t)return 0;for(i=0,r=t.length;i<r;++i)l=a.resolveDataElementOptions(i),l.borderAlign!=="inner"&&(e=Math.max(e,l.borderWidth||0,l.hoverBorderWidth||0));return e}getMaxOffset(t){let e=0;for(let n=0,i=t.length;n<i;++n){const r=this.resolveDataElementOptions(n);e=Math.max(e,r.offset||0,r.hoverOffset||0)}return e}_getRingWeightOffset(t){let e=0;for(let n=0;n<t;++n)this.chart.isDatasetVisible(n)&&(e+=this._getRingWeight(n));return e}_getRingWeight(t){return Math.max(Rt(this.chart.data.datasets[t].weight,1),0)}_getVisibleDatasetWeightTotal(){return this._getRingWeightOffset(this.chart.data.datasets.length)||1}}lt(Wi,"id","doughnut"),lt(Wi,"defaults",{datasetElementType:!1,dataElementType:"arc",animation:{animateRotate:!0,animateScale:!1},animations:{numbers:{type:"number",properties:["circumference","endAngle","innerRadius","outerRadius","startAngle","x","y","offset","borderWidth","spacing"]}},cutout:"50%",rotation:0,circumference:360,radius:"100%",spacing:0,indexAxis:"r"}),lt(Wi,"descriptors",{_scriptable:t=>t!=="spacing",_indexable:t=>t!=="spacing"&&!t.startsWith("borderDash")&&!t.startsWith("hoverBorderDash")}),lt(Wi,"overrides",{aspectRatio:1,plugins:{legend:{labels:{generateLabels(t){const e=t.data;if(e.labels.length&&e.datasets.length){const{labels:{pointStyle:n,color:i}}=t.legend.options;return e.labels.map((r,o)=>{const l=t.getDatasetMeta(0).controller.getStyle(o);return{text:r,fillStyle:l.backgroundColor,strokeStyle:l.borderColor,fontColor:i,lineWidth:l.borderWidth,pointStyle:n,hidden:!t.getDataVisibility(o),index:o}})}return[]}},onClick(t,e,n){n.chart.toggleDataVisibility(e.index),n.chart.update()}}}});class Ho extends Mn{initialize(){this.enableOptionSharing=!0,this.supportsDecimation=!0,super.initialize()}update(t){const e=this._cachedMeta,{dataset:n,data:i=[],_dataset:r}=e,o=this.chart._animationsDisabled;let{start:a,count:l}=Sp(e,i,o);this._drawStart=a,this._drawCount=l,Ep(e)&&(a=0,l=i.length),n._chart=this.chart,n._datasetIndex=this.index,n._decimated=!!r._decimated,n.points=i;const c=this.resolveDatasetElementOptions(t);this.options.showLine||(c.borderWidth=0),c.segment=this.options.segment,this.updateElement(n,void 0,{animated:!o,options:c},t),this.updateElements(i,a,l,t)}updateElements(t,e,n,i){const r=i==="reset",{iScale:o,vScale:a,_stacked:l,_dataset:c}=this._cachedMeta,{sharedOptions:h,includeOptions:u}=this._getSharedOptions(e,i),d=o.axis,f=a.axis,{spanGaps:g,segment:_}=this.options,m=Hs(g)?g:Number.POSITIVE_INFINITY,p=this.chart._animationsDisabled||r||i==="none",x=e+n,w=t.length;let v=e>0&&this.getParsed(e-1);for(let y=0;y<w;++y){const S=t[y],T=p?S:{};if(y<e||y>=x){T.skip=!0;continue}const A=this.getParsed(y),b=Wt(A[f]),M=T[d]=o.getPixelForValue(A[d],y),L=T[f]=r||b?a.getBasePixel():a.getPixelForValue(l?this.applyStack(a,A,l):A[f],y);T.skip=isNaN(M)||isNaN(L)||b,T.stop=y>0&&Math.abs(A[d]-v[d])>m,_&&(T.parsed=A,T.raw=c.data[y]),u&&(T.options=h||this.resolveDataElementOptions(y,S.active?"active":i)),p||this.updateElement(S,y,T,i),v=A}}getMaxOverflow(){const t=this._cachedMeta,e=t.dataset,n=e.options&&e.options.borderWidth||0,i=t.data||[];if(!i.length)return n;const r=i[0].size(this.resolveDataElementOptions(0)),o=i[i.length-1].size(this.resolveDataElementOptions(i.length-1));return Math.max(n,r,o)/2}draw(){const t=this._cachedMeta;t.dataset.updateControlPoints(this.chart.chartArea,t.iScale.axis),super.draw()}}lt(Ho,"id","line"),lt(Ho,"defaults",{datasetElementType:"line",dataElementType:"point",showLine:!0,spanGaps:!1}),lt(Ho,"overrides",{scales:{_index_:{type:"category"},_value_:{type:"linear"}}});class Ar extends Mn{constructor(t,e){super(t,e),this.innerRadius=void 0,this.outerRadius=void 0}getLabelAndValue(t){const e=this._cachedMeta,n=this.chart,i=n.data.labels||[],r=Gr(e._parsed[t].r,n.options.locale);return{label:i[t]||"",value:r}}parseObjectData(t,e,n,i){return Ip.bind(this)(t,e,n,i)}update(t){const e=this._cachedMeta.data;this._updateRadius(),this.updateElements(e,0,e.length,t)}getMinMax(){const t=this._cachedMeta,e={min:Number.POSITIVE_INFINITY,max:Number.NEGATIVE_INFINITY};return t.data.forEach((n,i)=>{const r=this.getParsed(i).r;!isNaN(r)&&this.chart.getDataVisibility(i)&&(r<e.min&&(e.min=r),r>e.max&&(e.max=r))}),e}_updateRadius(){const t=this.chart,e=t.chartArea,n=t.options,i=Math.min(e.right-e.left,e.bottom-e.top),r=Math.max(i/2,0),o=Math.max(n.cutoutPercentage?r/100*n.cutoutPercentage:1,0),a=(r-o)/t.getVisibleDatasetCount();this.outerRadius=r-a*this.index,this.innerRadius=this.outerRadius-a}updateElements(t,e,n,i){const r=i==="reset",o=this.chart,l=o.options.animation,c=this._cachedMeta.rScale,h=c.xCenter,u=c.yCenter,d=c.getIndexAngle(0)-.5*se;let f=d,g;const _=360/this.countVisibleElements();for(g=0;g<e;++g)f+=this._computeAngle(g,i,_);for(g=e;g<e+n;g++){const m=t[g];let p=f,x=f+this._computeAngle(g,i,_),w=o.getDataVisibility(g)?c.getDistanceFromCenterForValue(this.getParsed(g).r):0;f=x,r&&(l.animateScale&&(w=0),l.animateRotate&&(p=x=d));const v={x:h,y:u,innerRadius:0,outerRadius:w,startAngle:p,endAngle:x,options:this.resolveDataElementOptions(g,m.active?"active":i)};this.updateElement(m,g,v,i)}}countVisibleElements(){const t=this._cachedMeta;let e=0;return t.data.forEach((n,i)=>{!isNaN(this.getParsed(i).r)&&this.chart.getDataVisibility(i)&&e++}),e}_computeAngle(t,e,n){return this.chart.getDataVisibility(t)?yn(this.resolveDataElementOptions(t,e).angle||n):0}}lt(Ar,"id","polarArea"),lt(Ar,"defaults",{dataElementType:"arc",animation:{animateRotate:!0,animateScale:!0},animations:{numbers:{type:"number",properties:["x","y","startAngle","endAngle","innerRadius","outerRadius"]}},indexAxis:"r",startAngle:0}),lt(Ar,"overrides",{aspectRatio:1,plugins:{legend:{labels:{generateLabels(t){const e=t.data;if(e.labels.length&&e.datasets.length){const{labels:{pointStyle:n,color:i}}=t.legend.options;return e.labels.map((r,o)=>{const l=t.getDatasetMeta(0).controller.getStyle(o);return{text:r,fillStyle:l.backgroundColor,strokeStyle:l.borderColor,fontColor:i,lineWidth:l.borderWidth,pointStyle:n,hidden:!t.getDataVisibility(o),index:o}})}return[]}},onClick(t,e,n){n.chart.toggleDataVisibility(e.index),n.chart.update()}}},scales:{r:{type:"radialLinear",angleLines:{display:!1},beginAtZero:!0,grid:{circular:!0},pointLabels:{display:!1},startAngle:0}}});class Hl extends Wi{}lt(Hl,"id","pie"),lt(Hl,"defaults",{cutout:0,rotation:0,circumference:360,radius:"100%"});class Wo extends Mn{getLabelAndValue(t){const e=this._cachedMeta.vScale,n=this.getParsed(t);return{label:e.getLabels()[t],value:""+e.getLabelForValue(n[e.axis])}}parseObjectData(t,e,n,i){return Ip.bind(this)(t,e,n,i)}update(t){const e=this._cachedMeta,n=e.dataset,i=e.data||[],r=e.iScale.getLabels();if(n.points=i,t!=="resize"){const o=this.resolveDatasetElementOptions(t);this.options.showLine||(o.borderWidth=0);const a={_loop:!0,_fullLoop:r.length===i.length,options:o};this.updateElement(n,void 0,a,t)}this.updateElements(i,0,i.length,t)}updateElements(t,e,n,i){const r=this._cachedMeta.rScale,o=i==="reset";for(let a=e;a<e+n;a++){const l=t[a],c=this.resolveDataElementOptions(a,l.active?"active":i),h=r.getPointPositionForValue(a,this.getParsed(a).r),u=o?r.xCenter:h.x,d=o?r.yCenter:h.y,f={x:u,y:d,angle:h.angle,skip:isNaN(u)||isNaN(d),options:c};this.updateElement(l,a,f,i)}}}lt(Wo,"id","radar"),lt(Wo,"defaults",{datasetElementType:"line",dataElementType:"point",indexAxis:"r",showLine:!0,elements:{line:{fill:"start"}}}),lt(Wo,"overrides",{aspectRatio:1,scales:{r:{type:"radialLinear"}}});class Go extends Mn{getLabelAndValue(t){const e=this._cachedMeta,n=this.chart.data.labels||[],{xScale:i,yScale:r}=e,o=this.getParsed(t),a=i.getLabelForValue(o.x),l=r.getLabelForValue(o.y);return{label:n[t]||"",value:"("+a+", "+l+")"}}update(t){const e=this._cachedMeta,{data:n=[]}=e,i=this.chart._animationsDisabled;let{start:r,count:o}=Sp(e,n,i);if(this._drawStart=r,this._drawCount=o,Ep(e)&&(r=0,o=n.length),this.options.showLine){const{dataset:a,_dataset:l}=e;a._chart=this.chart,a._datasetIndex=this.index,a._decimated=!!l._decimated,a.points=n;const c=this.resolveDatasetElementOptions(t);c.segment=this.options.segment,this.updateElement(a,void 0,{animated:!i,options:c},t)}this.updateElements(n,r,o,t)}addElements(){const{showLine:t}=this.options;!this.datasetElementType&&t&&(this.datasetElementType=this.chart.registry.getElement("line")),super.addElements()}updateElements(t,e,n,i){const r=i==="reset",{iScale:o,vScale:a,_stacked:l,_dataset:c}=this._cachedMeta,h=this.resolveDataElementOptions(e,i),u=this.getSharedOptions(h),d=this.includeOptions(i,u),f=o.axis,g=a.axis,{spanGaps:_,segment:m}=this.options,p=Hs(_)?_:Number.POSITIVE_INFINITY,x=this.chart._animationsDisabled||r||i==="none";let w=e>0&&this.getParsed(e-1);for(let v=e;v<e+n;++v){const y=t[v],S=this.getParsed(v),T=x?y:{},A=Wt(S[g]),b=T[f]=o.getPixelForValue(S[f],v),M=T[g]=r||A?a.getBasePixel():a.getPixelForValue(l?this.applyStack(a,S,l):S[g],v);T.skip=isNaN(b)||isNaN(M)||A,T.stop=v>0&&Math.abs(S[f]-w[f])>p,m&&(T.parsed=S,T.raw=c.data[v]),d&&(T.options=u||this.resolveDataElementOptions(v,y.active?"active":i)),x||this.updateElement(y,v,T,i),w=S}this.updateSharedOptions(u,i,h)}getMaxOverflow(){const t=this._cachedMeta,e=t.data||[];if(!this.options.showLine){let a=0;for(let l=e.length-1;l>=0;--l)a=Math.max(a,e[l].size(this.resolveDataElementOptions(l))/2);return a>0&&a}const n=t.dataset,i=n.options&&n.options.borderWidth||0;if(!e.length)return i;const r=e[0].size(this.resolveDataElementOptions(0)),o=e[e.length-1].size(this.resolveDataElementOptions(e.length-1));return Math.max(i,r,o)/2}}lt(Go,"id","scatter"),lt(Go,"defaults",{datasetElementType:!1,dataElementType:"point",showLine:!1,fill:!1}),lt(Go,"overrides",{interaction:{mode:"point"},scales:{x:{type:"linear"},y:{type:"linear"}}});var FE=Object.freeze({__proto__:null,BarController:Uo,BubbleController:Vo,DoughnutController:Wi,LineController:Ho,PieController:Hl,PolarAreaController:Ar,RadarController:Wo,ScatterController:Go});function Di(){throw new Error("This method is not implemented: Check that a complete date adapter is provided.")}class Lc{constructor(t){lt(this,"options");this.options=t||{}}static override(t){Object.assign(Lc.prototype,t)}init(){}formats(){return Di()}parse(){return Di()}format(){return Di()}add(){return Di()}diff(){return Di()}startOf(){return Di()}endOf(){return Di()}}var OE={_date:Lc};function zE(s,t,e,n){const{controller:i,data:r,_sorted:o}=s,a=i._cachedMeta.iScale;if(a&&t===a.axis&&t!=="r"&&o&&r.length){const l=a._reversePixels?r1:ei;if(n){if(i._sharedOptions){const c=r[0],h=typeof c.getRange=="function"&&c.getRange(t);if(h){const u=l(r,t,e-h),d=l(r,t,e+h);return{lo:u.lo,hi:d.hi}}}}else return l(r,t,e)}return{lo:0,hi:r.length-1}}function qr(s,t,e,n,i){const r=s.getSortedVisibleDatasetMetas(),o=e[t];for(let a=0,l=r.length;a<l;++a){const{index:c,data:h}=r[a],{lo:u,hi:d}=zE(r[a],t,o,i);for(let f=u;f<=d;++f){const g=h[f];g.skip||n(g,c,f)}}}function kE(s){const t=s.indexOf("x")!==-1,e=s.indexOf("y")!==-1;return function(n,i){const r=t?Math.abs(n.x-i.x):0,o=e?Math.abs(n.y-i.y):0;return Math.sqrt(Math.pow(r,2)+Math.pow(o,2))}}function Ml(s,t,e,n,i){const r=[];return!i&&!s.isPointInArea(t)||qr(s,e,t,function(a,l,c){!i&&!ni(a,s.chartArea,0)||a.inRange(t.x,t.y,n)&&r.push({element:a,datasetIndex:l,index:c})},!0),r}function NE(s,t,e,n){let i=[];function r(o,a,l){const{startAngle:c,endAngle:h}=o.getProps(["startAngle","endAngle"],n),{angle:u}=vp(o,{x:t.x,y:t.y});Or(u,c,h)&&i.push({element:o,datasetIndex:a,index:l})}return qr(s,e,t,r),i}function BE(s,t,e,n,i,r){let o=[];const a=kE(e);let l=Number.POSITIVE_INFINITY;function c(h,u,d){const f=h.inRange(t.x,t.y,i);if(n&&!f)return;const g=h.getCenterPoint(i);if(!(!!r||s.isPointInArea(g))&&!f)return;const m=a(t,g);m<l?(o=[{element:h,datasetIndex:u,index:d}],l=m):m===l&&o.push({element:h,datasetIndex:u,index:d})}return qr(s,e,t,c),o}function wl(s,t,e,n,i,r){return!r&&!s.isPointInArea(t)?[]:e==="r"&&!n?NE(s,t,e,i):BE(s,t,e,n,i,r)}function Ed(s,t,e,n,i){const r=[],o=e==="x"?"inXRange":"inYRange";let a=!1;return qr(s,e,t,(l,c,h)=>{l[o](t[e],i)&&(r.push({element:l,datasetIndex:c,index:h}),a=a||l.inRange(t.x,t.y,i))}),n&&!a?[]:r}var UE={evaluateInteractionItems:qr,modes:{index(s,t,e,n){const i=zi(t,s),r=e.axis||"x",o=e.includeInvisible||!1,a=e.intersect?Ml(s,i,r,n,o):wl(s,i,r,!1,n,o),l=[];return a.length?(s.getSortedVisibleDatasetMetas().forEach(c=>{const h=a[0].index,u=c.data[h];u&&!u.skip&&l.push({element:u,datasetIndex:c.index,index:h})}),l):[]},dataset(s,t,e,n){const i=zi(t,s),r=e.axis||"xy",o=e.includeInvisible||!1;let a=e.intersect?Ml(s,i,r,n,o):wl(s,i,r,!1,n,o);if(a.length>0){const l=a[0].datasetIndex,c=s.getDatasetMeta(l).data;a=[];for(let h=0;h<c.length;++h)a.push({element:c[h],datasetIndex:l,index:h})}return a},point(s,t,e,n){const i=zi(t,s),r=e.axis||"xy",o=e.includeInvisible||!1;return Ml(s,i,r,n,o)},nearest(s,t,e,n){const i=zi(t,s),r=e.axis||"xy",o=e.includeInvisible||!1;return wl(s,i,r,e.intersect,n,o)},x(s,t,e,n){const i=zi(t,s);return Ed(s,i,"x",e.intersect,n)},y(s,t,e,n){const i=zi(t,s);return Ed(s,i,"y",e.intersect,n)}}};const Gp=["left","top","right","bottom"];function sr(s,t){return s.filter(e=>e.pos===t)}function Ad(s,t){return s.filter(e=>Gp.indexOf(e.pos)===-1&&e.box.axis===t)}function rr(s,t){return s.sort((e,n)=>{const i=t?n:e,r=t?e:n;return i.weight===r.weight?i.index-r.index:i.weight-r.weight})}function VE(s){const t=[];let e,n,i,r,o,a;for(e=0,n=(s||[]).length;e<n;++e)i=s[e],{position:r,options:{stack:o,stackWeight:a=1}}=i,t.push({index:e,box:i,pos:r,horizontal:i.isHorizontal(),weight:i.weight,stack:o&&r+o,stackWeight:a});return t}function HE(s){const t={};for(const e of s){const{stack:n,pos:i,stackWeight:r}=e;if(!n||!Gp.includes(i))continue;const o=t[n]||(t[n]={count:0,placed:0,weight:0,size:0});o.count++,o.weight+=r}return t}function WE(s,t){const e=HE(s),{vBoxMaxWidth:n,hBoxMaxHeight:i}=t;let r,o,a;for(r=0,o=s.length;r<o;++r){a=s[r];const{fullSize:l}=a.box,c=e[a.stack],h=c&&a.stackWeight/c.weight;a.horizontal?(a.width=h?h*n:l&&t.availableWidth,a.height=i):(a.width=n,a.height=h?h*i:l&&t.availableHeight)}return e}function GE(s){const t=VE(s),e=rr(t.filter(c=>c.box.fullSize),!0),n=rr(sr(t,"left"),!0),i=rr(sr(t,"right")),r=rr(sr(t,"top"),!0),o=rr(sr(t,"bottom")),a=Ad(t,"x"),l=Ad(t,"y");return{fullSize:e,leftAndTop:n.concat(r),rightAndBottom:i.concat(l).concat(o).concat(a),chartArea:sr(t,"chartArea"),vertical:n.concat(i).concat(l),horizontal:r.concat(o).concat(a)}}function Td(s,t,e,n){return Math.max(s[e],t[e])+Math.max(s[n],t[n])}function qp(s,t){s.top=Math.max(s.top,t.top),s.left=Math.max(s.left,t.left),s.bottom=Math.max(s.bottom,t.bottom),s.right=Math.max(s.right,t.right)}function qE(s,t,e,n){const{pos:i,box:r}=e,o=s.maxPadding;if(!Bt(i)){e.size&&(s[i]-=e.size);const u=n[e.stack]||{size:0,count:1};u.size=Math.max(u.size,e.horizontal?r.height:r.width),e.size=u.size/u.count,s[i]+=e.size}r.getPadding&&qp(o,r.getPadding());const a=Math.max(0,t.outerWidth-Td(o,s,"left","right")),l=Math.max(0,t.outerHeight-Td(o,s,"top","bottom")),c=a!==s.w,h=l!==s.h;return s.w=a,s.h=l,e.horizontal?{same:c,other:h}:{same:h,other:c}}function jE(s){const t=s.maxPadding;function e(n){const i=Math.max(t[n]-s[n],0);return s[n]+=i,i}s.y+=e("top"),s.x+=e("left"),e("right"),e("bottom")}function XE(s,t){const e=t.maxPadding;function n(i){const r={left:0,top:0,right:0,bottom:0};return i.forEach(o=>{r[o]=Math.max(t[o],e[o])}),r}return n(s?["left","right"]:["top","bottom"])}function pr(s,t,e,n){const i=[];let r,o,a,l,c,h;for(r=0,o=s.length,c=0;r<o;++r){a=s[r],l=a.box,l.update(a.width||t.w,a.height||t.h,XE(a.horizontal,t));const{same:u,other:d}=qE(t,e,a,n);c|=u&&i.length,h=h||d,l.fullSize||i.push(a)}return c&&pr(i,t,e,n)||h}function Ro(s,t,e,n,i){s.top=e,s.left=t,s.right=t+n,s.bottom=e+i,s.width=n,s.height=i}function Cd(s,t,e,n){const i=e.padding;let{x:r,y:o}=t;for(const a of s){const l=a.box,c=n[a.stack]||{count:1,placed:0,weight:1},h=a.stackWeight/c.weight||1;if(a.horizontal){const u=t.w*h,d=c.size||l.height;Fr(c.start)&&(o=c.start),l.fullSize?Ro(l,i.left,o,e.outerWidth-i.right-i.left,d):Ro(l,t.left+c.placed,o,u,d),c.start=o,c.placed+=u,o=l.bottom}else{const u=t.h*h,d=c.size||l.width;Fr(c.start)&&(r=c.start),l.fullSize?Ro(l,r,i.top,d,e.outerHeight-i.bottom-i.top):Ro(l,r,t.top+c.placed,d,u),c.start=r,c.placed+=u,r=l.right}}t.x=r,t.y=o}var Fe={addBox(s,t){s.boxes||(s.boxes=[]),t.fullSize=t.fullSize||!1,t.position=t.position||"top",t.weight=t.weight||0,t._layers=t._layers||function(){return[{z:0,draw(e){t.draw(e)}}]},s.boxes.push(t)},removeBox(s,t){const e=s.boxes?s.boxes.indexOf(t):-1;e!==-1&&s.boxes.splice(e,1)},configure(s,t,e){t.fullSize=e.fullSize,t.position=e.position,t.weight=e.weight},update(s,t,e,n){if(!s)return;const i=Oe(s.options.layout.padding),r=Math.max(t-i.width,0),o=Math.max(e-i.height,0),a=GE(s.boxes),l=a.vertical,c=a.horizontal;jt(s.boxes,_=>{typeof _.beforeLayout=="function"&&_.beforeLayout()});const h=l.reduce((_,m)=>m.box.options&&m.box.options.display===!1?_:_+1,0)||1,u=Object.freeze({outerWidth:t,outerHeight:e,padding:i,availableWidth:r,availableHeight:o,vBoxMaxWidth:r/2/h,hBoxMaxHeight:o/2}),d=Object.assign({},i);qp(d,Oe(n));const f=Object.assign({maxPadding:d,w:r,h:o,x:i.left,y:i.top},i),g=WE(l.concat(c),u);pr(a.fullSize,f,u,g),pr(l,f,u,g),pr(c,f,u,g)&&pr(l,f,u,g),jE(f),Cd(a.leftAndTop,f,u,g),f.x+=f.w,f.y+=f.h,Cd(a.rightAndBottom,f,u,g),s.chartArea={left:f.left,top:f.top,right:f.left+f.w,bottom:f.top+f.h,height:f.h,width:f.w},jt(a.chartArea,_=>{const m=_.box;Object.assign(m,s.chartArea),m.update(f.w,f.h,{left:0,top:0,right:0,bottom:0})})}};class jp{acquireContext(t,e){}releaseContext(t){return!1}addEventListener(t,e,n){}removeEventListener(t,e,n){}getDevicePixelRatio(){return 1}getMaximumSize(t,e,n,i){return e=Math.max(0,e||t.width),n=n||t.height,{width:e,height:Math.max(0,i?Math.floor(e/i):n)}}isAttached(t){return!0}updateConfig(t){}}class YE extends jp{acquireContext(t){return t&&t.getContext&&t.getContext("2d")||null}updateConfig(t){t.options.animation=!1}}const qo="$chartjs",$E={touchstart:"mousedown",touchmove:"mousemove",touchend:"mouseup",pointerenter:"mouseenter",pointerdown:"mousedown",pointermove:"mousemove",pointerup:"mouseup",pointerleave:"mouseout",pointerout:"mouseout"},Pd=s=>s===null||s==="";function KE(s,t){const e=s.style,n=s.getAttribute("height"),i=s.getAttribute("width");if(s[qo]={initial:{height:n,width:i,style:{display:e.display,height:e.height,width:e.width}}},e.display=e.display||"block",e.boxSizing=e.boxSizing||"border-box",Pd(i)){const r=ud(s,"width");r!==void 0&&(s.width=r)}if(Pd(n))if(s.style.height==="")s.height=s.width/(t||2);else{const r=ud(s,"height");r!==void 0&&(s.height=r)}return s}const Xp=J1?{passive:!0}:!1;function ZE(s,t,e){s.addEventListener(t,e,Xp)}function JE(s,t,e){s.canvas.removeEventListener(t,e,Xp)}function QE(s,t){const e=$E[s.type]||s.type,{x:n,y:i}=zi(s,t);return{type:e,chart:t,native:s,x:n!==void 0?n:null,y:i!==void 0?i:null}}function sa(s,t){for(const e of s)if(e===t||e.contains(t))return!0}function tA(s,t,e){const n=s.canvas,i=new MutationObserver(r=>{let o=!1;for(const a of r)o=o||sa(a.addedNodes,n),o=o&&!sa(a.removedNodes,n);o&&e()});return i.observe(document,{childList:!0,subtree:!0}),i}function eA(s,t,e){const n=s.canvas,i=new MutationObserver(r=>{let o=!1;for(const a of r)o=o||sa(a.removedNodes,n),o=o&&!sa(a.addedNodes,n);o&&e()});return i.observe(document,{childList:!0,subtree:!0}),i}const kr=new Map;let Ld=0;function Yp(){const s=window.devicePixelRatio;s!==Ld&&(Ld=s,kr.forEach((t,e)=>{e.currentDevicePixelRatio!==s&&t()}))}function nA(s,t){kr.size||window.addEventListener("resize",Yp),kr.set(s,t)}function iA(s){kr.delete(s),kr.size||window.removeEventListener("resize",Yp)}function sA(s,t,e){const n=s.canvas,i=n&&Pc(n);if(!i)return;const r=wp((a,l)=>{const c=i.clientWidth;e(a,l),c<i.clientWidth&&e()},window),o=new ResizeObserver(a=>{const l=a[0],c=l.contentRect.width,h=l.contentRect.height;c===0&&h===0||r(c,h)});return o.observe(i),nA(s,r),o}function Sl(s,t,e){e&&e.disconnect(),t==="resize"&&iA(s)}function rA(s,t,e){const n=s.canvas,i=wp(r=>{s.ctx!==null&&e(QE(r,s))},s);return ZE(n,t,i),i}class oA extends jp{acquireContext(t,e){const n=t&&t.getContext&&t.getContext("2d");return n&&n.canvas===t?(KE(t,e),n):null}releaseContext(t){const e=t.canvas;if(!e[qo])return!1;const n=e[qo].initial;["height","width"].forEach(r=>{const o=n[r];Wt(o)?e.removeAttribute(r):e.setAttribute(r,o)});const i=n.style||{};return Object.keys(i).forEach(r=>{e.style[r]=i[r]}),e.width=e.width,delete e[qo],!0}addEventListener(t,e,n){this.removeEventListener(t,e);const i=t.$proxies||(t.$proxies={}),o={attach:tA,detach:eA,resize:sA}[e]||rA;i[e]=o(t,e,n)}removeEventListener(t,e){const n=t.$proxies||(t.$proxies={}),i=n[e];if(!i)return;({attach:Sl,detach:Sl,resize:Sl}[e]||JE)(t,e,i),n[e]=void 0}getDevicePixelRatio(){return window.devicePixelRatio}getMaximumSize(t,e,n,i){return Z1(t,e,n,i)}isAttached(t){const e=Pc(t);return!!(e&&e.isConnected)}}function aA(s){return!Op()||typeof OffscreenCanvas<"u"&&s instanceof OffscreenCanvas?YE:oA}class wn{constructor(){lt(this,"x");lt(this,"y");lt(this,"active",!1);lt(this,"options");lt(this,"$animations")}tooltipPosition(t){const{x:e,y:n}=this.getProps(["x","y"],t);return{x:e,y:n}}hasValue(){return Hs(this.x)&&Hs(this.y)}getProps(t,e){const n=this.$animations;if(!e||!n)return this;const i={};return t.forEach(r=>{i[r]=n[r]&&n[r].active()?n[r]._to:this[r]}),i}}lt(wn,"defaults",{}),lt(wn,"defaultRoutes");function lA(s,t){const e=s.options.ticks,n=cA(s),i=Math.min(e.maxTicksLimit||n,n),r=e.major.enabled?uA(t):[],o=r.length,a=r[0],l=r[o-1],c=[];if(o>i)return dA(t,c,r,o/i),c;const h=hA(r,t,i);if(o>0){let u,d;const f=o>1?Math.round((l-a)/(o-1)):null;for(Do(t,c,h,Wt(f)?0:a-f,a),u=0,d=o-1;u<d;u++)Do(t,c,h,r[u],r[u+1]);return Do(t,c,h,l,Wt(f)?t.length:l+f),c}return Do(t,c,h),c}function cA(s){const t=s.options.offset,e=s._tickSize(),n=s._length/e+(t?0:1),i=s._maxLength/e;return Math.floor(Math.min(n,i))}function hA(s,t,e){const n=fA(s),i=t.length/e;if(!n)return Math.max(i,1);const r=e1(n);for(let o=0,a=r.length-1;o<a;o++){const l=r[o];if(l>i)return l}return Math.max(i,1)}function uA(s){const t=[];let e,n;for(e=0,n=s.length;e<n;e++)s[e].major&&t.push(e);return t}function dA(s,t,e,n){let i=0,r=e[0],o;for(n=Math.ceil(n),o=0;o<s.length;o++)o===r&&(t.push(s[o]),i++,r=e[i*n])}function Do(s,t,e,n,i){const r=Rt(n,0),o=Math.min(Rt(i,s.length),s.length);let a=0,l,c,h;for(e=Math.ceil(e),i&&(l=i-n,e=l/Math.floor(l/e)),h=r;h<0;)a++,h=Math.round(r+a*e);for(c=Math.max(r,0);c<o;c++)c===h&&(t.push(s[c]),a++,h=Math.round(r+a*e))}function fA(s){const t=s.length;let e,n;if(t<2)return!1;for(n=s[0],e=1;e<t;++e)if(s[e]-s[e-1]!==n)return!1;return n}const pA=s=>s==="left"?"right":s==="right"?"left":s,Rd=(s,t,e)=>t==="top"||t==="left"?s[t]+e:s[t]-e,Dd=(s,t)=>Math.min(t||s,s);function Id(s,t){const e=[],n=s.length/t,i=s.length;let r=0;for(;r<i;r+=n)e.push(s[Math.floor(r)]);return e}function mA(s,t,e){const n=s.ticks.length,i=Math.min(t,n-1),r=s._startPixel,o=s._endPixel,a=1e-6;let l=s.getPixelForTick(i),c;if(!(e&&(n===1?c=Math.max(l-r,o-l):t===0?c=(s.getPixelForTick(1)-l)/2:c=(l-s.getPixelForTick(i-1))/2,l+=i<t?c:-c,l<r-a||l>o+a)))return l}function gA(s,t){jt(s,e=>{const n=e.gc,i=n.length/2;let r;if(i>t){for(r=0;r<i;++r)delete e.data[n[r]];n.splice(0,i)}})}function or(s){return s.drawTicks?s.tickLength:0}function Fd(s,t){if(!s.display)return 0;const e=be(s.font,t),n=Oe(s.padding);return(ne(s.text)?s.text.length:1)*e.lineHeight+n.height}function _A(s,t){return bi(s,{scale:t,type:"scale"})}function xA(s,t,e){return bi(s,{tick:e,index:t,type:"tick"})}function vA(s,t,e){let n=wc(s);return(e&&t!=="right"||!e&&t==="right")&&(n=pA(n)),n}function yA(s,t,e,n){const{top:i,left:r,bottom:o,right:a,chart:l}=s,{chartArea:c,scales:h}=l;let u=0,d,f,g;const _=o-i,m=a-r;if(s.isHorizontal()){if(f=Ie(n,r,a),Bt(e)){const p=Object.keys(e)[0],x=e[p];g=h[p].getPixelForValue(x)+_-t}else e==="center"?g=(c.bottom+c.top)/2+_-t:g=Rd(s,e,t);d=a-r}else{if(Bt(e)){const p=Object.keys(e)[0],x=e[p];f=h[p].getPixelForValue(x)-m+t}else e==="center"?f=(c.left+c.right)/2-m+t:f=Rd(s,e,t);g=Ie(n,o,i),u=e==="left"?-he:he}return{titleX:f,titleY:g,maxWidth:d,rotation:u}}class ss extends wn{constructor(t){super(),this.id=t.id,this.type=t.type,this.options=void 0,this.ctx=t.ctx,this.chart=t.chart,this.top=void 0,this.bottom=void 0,this.left=void 0,this.right=void 0,this.width=void 0,this.height=void 0,this._margins={left:0,right:0,top:0,bottom:0},this.maxWidth=void 0,this.maxHeight=void 0,this.paddingTop=void 0,this.paddingBottom=void 0,this.paddingLeft=void 0,this.paddingRight=void 0,this.axis=void 0,this.labelRotation=void 0,this.min=void 0,this.max=void 0,this._range=void 0,this.ticks=[],this._gridLineItems=null,this._labelItems=null,this._labelSizes=null,this._length=0,this._maxLength=0,this._longestTextCache={},this._startPixel=void 0,this._endPixel=void 0,this._reversePixels=!1,this._userMax=void 0,this._userMin=void 0,this._suggestedMax=void 0,this._suggestedMin=void 0,this._ticksLength=0,this._borderValue=0,this._cache={},this._dataLimitsCached=!1,this.$context=void 0}init(t){this.options=t.setContext(this.getContext()),this.axis=t.axis,this._userMin=this.parse(t.min),this._userMax=this.parse(t.max),this._suggestedMin=this.parse(t.suggestedMin),this._suggestedMax=this.parse(t.suggestedMax)}parse(t,e){return t}getUserBounds(){let{_userMin:t,_userMax:e,_suggestedMin:n,_suggestedMax:i}=this;return t=Je(t,Number.POSITIVE_INFINITY),e=Je(e,Number.NEGATIVE_INFINITY),n=Je(n,Number.POSITIVE_INFINITY),i=Je(i,Number.NEGATIVE_INFINITY),{min:Je(t,n),max:Je(e,i),minDefined:ce(t),maxDefined:ce(e)}}getMinMax(t){let{min:e,max:n,minDefined:i,maxDefined:r}=this.getUserBounds(),o;if(i&&r)return{min:e,max:n};const a=this.getMatchingVisibleMetas();for(let l=0,c=a.length;l<c;++l)o=a[l].controller.getMinMax(this,t),i||(e=Math.min(e,o.min)),r||(n=Math.max(n,o.max));return e=r&&e>n?n:e,n=i&&e>n?e:n,{min:Je(e,Je(n,e)),max:Je(n,Je(e,n))}}getPadding(){return{left:this.paddingLeft||0,top:this.paddingTop||0,right:this.paddingRight||0,bottom:this.paddingBottom||0}}getTicks(){return this.ticks}getLabels(){const t=this.chart.data;return this.options.labels||(this.isHorizontal()?t.xLabels:t.yLabels)||t.labels||[]}getLabelItems(t=this.chart.chartArea){return this._labelItems||(this._labelItems=this._computeLabelItems(t))}beforeLayout(){this._cache={},this._dataLimitsCached=!1}beforeUpdate(){$t(this.options.beforeUpdate,[this])}update(t,e,n){const{beginAtZero:i,grace:r,ticks:o}=this.options,a=o.sampleSize;this.beforeUpdate(),this.maxWidth=t,this.maxHeight=e,this._margins=n=Object.assign({left:0,right:0,top:0,bottom:0},n),this.ticks=null,this._labelSizes=null,this._gridLineItems=null,this._labelItems=null,this.beforeSetDimensions(),this.setDimensions(),this.afterSetDimensions(),this._maxLength=this.isHorizontal()?this.width+n.left+n.right:this.height+n.top+n.bottom,this._dataLimitsCached||(this.beforeDataLimits(),this.determineDataLimits(),this.afterDataLimits(),this._range=P1(this,r,i),this._dataLimitsCached=!0),this.beforeBuildTicks(),this.ticks=this.buildTicks()||[],this.afterBuildTicks();const l=a<this.ticks.length;this._convertTicksToLabels(l?Id(this.ticks,a):this.ticks),this.configure(),this.beforeCalculateLabelRotation(),this.calculateLabelRotation(),this.afterCalculateLabelRotation(),o.display&&(o.autoSkip||o.source==="auto")&&(this.ticks=lA(this,this.ticks),this._labelSizes=null,this.afterAutoSkip()),l&&this._convertTicksToLabels(this.ticks),this.beforeFit(),this.fit(),this.afterFit(),this.afterUpdate()}configure(){let t=this.options.reverse,e,n;this.isHorizontal()?(e=this.left,n=this.right):(e=this.top,n=this.bottom,t=!t),this._startPixel=e,this._endPixel=n,this._reversePixels=t,this._length=n-e,this._alignToPixels=this.options.alignToPixels}afterUpdate(){$t(this.options.afterUpdate,[this])}beforeSetDimensions(){$t(this.options.beforeSetDimensions,[this])}setDimensions(){this.isHorizontal()?(this.width=this.maxWidth,this.left=0,this.right=this.width):(this.height=this.maxHeight,this.top=0,this.bottom=this.height),this.paddingLeft=0,this.paddingTop=0,this.paddingRight=0,this.paddingBottom=0}afterSetDimensions(){$t(this.options.afterSetDimensions,[this])}_callHooks(t){this.chart.notifyPlugins(t,this.getContext()),$t(this.options[t],[this])}beforeDataLimits(){this._callHooks("beforeDataLimits")}determineDataLimits(){}afterDataLimits(){this._callHooks("afterDataLimits")}beforeBuildTicks(){this._callHooks("beforeBuildTicks")}buildTicks(){return[]}afterBuildTicks(){this._callHooks("afterBuildTicks")}beforeTickToLabelConversion(){$t(this.options.beforeTickToLabelConversion,[this])}generateTickLabels(t){const e=this.options.ticks;let n,i,r;for(n=0,i=t.length;n<i;n++)r=t[n],r.label=$t(e.callback,[r.value,n,t],this)}afterTickToLabelConversion(){$t(this.options.afterTickToLabelConversion,[this])}beforeCalculateLabelRotation(){$t(this.options.beforeCalculateLabelRotation,[this])}calculateLabelRotation(){const t=this.options,e=t.ticks,n=Dd(this.ticks.length,t.ticks.maxTicksLimit),i=e.minRotation||0,r=e.maxRotation;let o=i,a,l,c;if(!this._isVisible()||!e.display||i>=r||n<=1||!this.isHorizontal()){this.labelRotation=i;return}const h=this._getLabelSizes(),u=h.widest.width,d=h.highest.height,f=Te(this.chart.width-u,0,this.maxWidth);a=t.offset?this.maxWidth/n:f/(n-1),u+6>a&&(a=f/(n-(t.offset?.5:1)),l=this.maxHeight-or(t.grid)-e.padding-Fd(t.title,this.chart.options.font),c=Math.sqrt(u*u+d*d),o=bc(Math.min(Math.asin(Te((h.highest.height+6)/a,-1,1)),Math.asin(Te(l/c,-1,1))-Math.asin(Te(d/c,-1,1)))),o=Math.max(i,Math.min(r,o))),this.labelRotation=o}afterCalculateLabelRotation(){$t(this.options.afterCalculateLabelRotation,[this])}afterAutoSkip(){}beforeFit(){$t(this.options.beforeFit,[this])}fit(){const t={width:0,height:0},{chart:e,options:{ticks:n,title:i,grid:r}}=this,o=this._isVisible(),a=this.isHorizontal();if(o){const l=Fd(i,e.options.font);if(a?(t.width=this.maxWidth,t.height=or(r)+l):(t.height=this.maxHeight,t.width=or(r)+l),n.display&&this.ticks.length){const{first:c,last:h,widest:u,highest:d}=this._getLabelSizes(),f=n.padding*2,g=yn(this.labelRotation),_=Math.cos(g),m=Math.sin(g);if(a){const p=n.mirror?0:m*u.width+_*d.height;t.height=Math.min(this.maxHeight,t.height+p+f)}else{const p=n.mirror?0:_*u.width+m*d.height;t.width=Math.min(this.maxWidth,t.width+p+f)}this._calculatePadding(c,h,m,_)}}this._handleMargins(),a?(this.width=this._length=e.width-this._margins.left-this._margins.right,this.height=t.height):(this.width=t.width,this.height=this._length=e.height-this._margins.top-this._margins.bottom)}_calculatePadding(t,e,n,i){const{ticks:{align:r,padding:o},position:a}=this.options,l=this.labelRotation!==0,c=a!=="top"&&this.axis==="x";if(this.isHorizontal()){const h=this.getPixelForTick(0)-this.left,u=this.right-this.getPixelForTick(this.ticks.length-1);let d=0,f=0;l?c?(d=i*t.width,f=n*e.height):(d=n*t.height,f=i*e.width):r==="start"?f=e.width:r==="end"?d=t.width:r!=="inner"&&(d=t.width/2,f=e.width/2),this.paddingLeft=Math.max((d-h+o)*this.width/(this.width-h),0),this.paddingRight=Math.max((f-u+o)*this.width/(this.width-u),0)}else{let h=e.height/2,u=t.height/2;r==="start"?(h=0,u=t.height):r==="end"&&(h=e.height,u=0),this.paddingTop=h+o,this.paddingBottom=u+o}}_handleMargins(){this._margins&&(this._margins.left=Math.max(this.paddingLeft,this._margins.left),this._margins.top=Math.max(this.paddingTop,this._margins.top),this._margins.right=Math.max(this.paddingRight,this._margins.right),this._margins.bottom=Math.max(this.paddingBottom,this._margins.bottom))}afterFit(){$t(this.options.afterFit,[this])}isHorizontal(){const{axis:t,position:e}=this.options;return e==="top"||e==="bottom"||t==="x"}isFullSize(){return this.options.fullSize}_convertTicksToLabels(t){this.beforeTickToLabelConversion(),this.generateTickLabels(t);let e,n;for(e=0,n=t.length;e<n;e++)Wt(t[e].label)&&(t.splice(e,1),n--,e--);this.afterTickToLabelConversion()}_getLabelSizes(){let t=this._labelSizes;if(!t){const e=this.options.ticks.sampleSize;let n=this.ticks;e<n.length&&(n=Id(n,e)),this._labelSizes=t=this._computeLabelSizes(n,n.length,this.options.ticks.maxTicksLimit)}return t}_computeLabelSizes(t,e,n){const{ctx:i,_longestTextCache:r}=this,o=[],a=[],l=Math.floor(e/Dd(e,n));let c=0,h=0,u,d,f,g,_,m,p,x,w,v,y;for(u=0;u<e;u+=l){if(g=t[u].label,_=this._resolveTickFontOptions(u),i.font=m=_.string,p=r[m]=r[m]||{data:{},gc:[]},x=_.lineHeight,w=v=0,!Wt(g)&&!ne(g))w=na(i,p.data,p.gc,w,g),v=x;else if(ne(g))for(d=0,f=g.length;d<f;++d)y=g[d],!Wt(y)&&!ne(y)&&(w=na(i,p.data,p.gc,w,y),v+=x);o.push(w),a.push(v),c=Math.max(w,c),h=Math.max(v,h)}gA(r,e);const S=o.indexOf(c),T=a.indexOf(h),A=b=>({width:o[b]||0,height:a[b]||0});return{first:A(0),last:A(e-1),widest:A(S),highest:A(T),widths:o,heights:a}}getLabelForValue(t){return t}getPixelForValue(t,e){return NaN}getValueForPixel(t){}getPixelForTick(t){const e=this.ticks;return t<0||t>e.length-1?null:this.getPixelForValue(e[t].value)}getPixelForDecimal(t){this._reversePixels&&(t=1-t);const e=this._startPixel+t*this._length;return s1(this._alignToPixels?Ri(this.chart,e,0):e)}getDecimalForPixel(t){const e=(t-this._startPixel)/this._length;return this._reversePixels?1-e:e}getBasePixel(){return this.getPixelForValue(this.getBaseValue())}getBaseValue(){const{min:t,max:e}=this;return t<0&&e<0?e:t>0&&e>0?t:0}getContext(t){const e=this.ticks||[];if(t>=0&&t<e.length){const n=e[t];return n.$context||(n.$context=xA(this.getContext(),t,n))}return this.$context||(this.$context=_A(this.chart.getContext(),this))}_tickSize(){const t=this.options.ticks,e=yn(this.labelRotation),n=Math.abs(Math.cos(e)),i=Math.abs(Math.sin(e)),r=this._getLabelSizes(),o=t.autoSkipPadding||0,a=r?r.widest.width+o:0,l=r?r.highest.height+o:0;return this.isHorizontal()?l*n>a*i?a/n:l/i:l*i<a*n?l/n:a/i}_isVisible(){const t=this.options.display;return t!=="auto"?!!t:this.getMatchingVisibleMetas().length>0}_computeGridLineItems(t){const e=this.axis,n=this.chart,i=this.options,{grid:r,position:o,border:a}=i,l=r.offset,c=this.isHorizontal(),u=this.ticks.length+(l?1:0),d=or(r),f=[],g=a.setContext(this.getContext()),_=g.display?g.width:0,m=_/2,p=function(O){return Ri(n,O,_)};let x,w,v,y,S,T,A,b,M,L,I,C;if(o==="top")x=p(this.bottom),T=this.bottom-d,b=x-m,L=p(t.top)+m,C=t.bottom;else if(o==="bottom")x=p(this.top),L=t.top,C=p(t.bottom)-m,T=x+m,b=this.top+d;else if(o==="left")x=p(this.right),S=this.right-d,A=x-m,M=p(t.left)+m,I=t.right;else if(o==="right")x=p(this.left),M=t.left,I=p(t.right)-m,S=x+m,A=this.left+d;else if(e==="x"){if(o==="center")x=p((t.top+t.bottom)/2+.5);else if(Bt(o)){const O=Object.keys(o)[0],V=o[O];x=p(this.chart.scales[O].getPixelForValue(V))}L=t.top,C=t.bottom,T=x+m,b=T+d}else if(e==="y"){if(o==="center")x=p((t.left+t.right)/2);else if(Bt(o)){const O=Object.keys(o)[0],V=o[O];x=p(this.chart.scales[O].getPixelForValue(V))}S=x-m,A=S-d,M=t.left,I=t.right}const D=Rt(i.ticks.maxTicksLimit,u),P=Math.max(1,Math.ceil(u/D));for(w=0;w<u;w+=P){const O=this.getContext(w),V=r.setContext(O),B=a.setContext(O),j=V.lineWidth,$=V.color,ct=B.dash||[],G=B.dashOffset,q=V.tickWidth,J=V.tickColor,ot=V.tickBorderDash||[],at=V.tickBorderDashOffset;v=mA(this,w,l),v!==void 0&&(y=Ri(n,v,j),c?S=A=M=I=y:T=b=L=C=y,f.push({tx1:S,ty1:T,tx2:A,ty2:b,x1:M,y1:L,x2:I,y2:C,width:j,color:$,borderDash:ct,borderDashOffset:G,tickWidth:q,tickColor:J,tickBorderDash:ot,tickBorderDashOffset:at}))}return this._ticksLength=u,this._borderValue=x,f}_computeLabelItems(t){const e=this.axis,n=this.options,{position:i,ticks:r}=n,o=this.isHorizontal(),a=this.ticks,{align:l,crossAlign:c,padding:h,mirror:u}=r,d=or(n.grid),f=d+h,g=u?-h:f,_=-yn(this.labelRotation),m=[];let p,x,w,v,y,S,T,A,b,M,L,I,C="middle";if(i==="top")S=this.bottom-g,T=this._getXAxisLabelAlignment();else if(i==="bottom")S=this.top+g,T=this._getXAxisLabelAlignment();else if(i==="left"){const P=this._getYAxisLabelAlignment(d);T=P.textAlign,y=P.x}else if(i==="right"){const P=this._getYAxisLabelAlignment(d);T=P.textAlign,y=P.x}else if(e==="x"){if(i==="center")S=(t.top+t.bottom)/2+f;else if(Bt(i)){const P=Object.keys(i)[0],O=i[P];S=this.chart.scales[P].getPixelForValue(O)+f}T=this._getXAxisLabelAlignment()}else if(e==="y"){if(i==="center")y=(t.left+t.right)/2-f;else if(Bt(i)){const P=Object.keys(i)[0],O=i[P];y=this.chart.scales[P].getPixelForValue(O)}T=this._getYAxisLabelAlignment(d).textAlign}e==="y"&&(l==="start"?C="top":l==="end"&&(C="bottom"));const D=this._getLabelSizes();for(p=0,x=a.length;p<x;++p){w=a[p],v=w.label;const P=r.setContext(this.getContext(p));A=this.getPixelForTick(p)+r.labelOffset,b=this._resolveTickFontOptions(p),M=b.lineHeight,L=ne(v)?v.length:1;const O=L/2,V=P.color,B=P.textStrokeColor,j=P.textStrokeWidth;let $=T;o?(y=A,T==="inner"&&(p===x-1?$=this.options.reverse?"left":"right":p===0?$=this.options.reverse?"right":"left":$="center"),i==="top"?c==="near"||_!==0?I=-L*M+M/2:c==="center"?I=-D.highest.height/2-O*M+M:I=-D.highest.height+M/2:c==="near"||_!==0?I=M/2:c==="center"?I=D.highest.height/2-O*M:I=D.highest.height-L*M,u&&(I*=-1),_!==0&&!P.showLabelBackdrop&&(y+=M/2*Math.sin(_))):(S=A,I=(1-L)*M/2);let ct;if(P.showLabelBackdrop){const G=Oe(P.backdropPadding),q=D.heights[p],J=D.widths[p];let ot=I-G.top,at=0-G.left;switch(C){case"middle":ot-=q/2;break;case"bottom":ot-=q;break}switch(T){case"center":at-=J/2;break;case"right":at-=J;break}ct={left:at,top:ot,width:J+G.width,height:q+G.height,color:P.backdropColor}}m.push({label:v,font:b,textOffset:I,options:{rotation:_,color:V,strokeColor:B,strokeWidth:j,textAlign:$,textBaseline:C,translation:[y,S],backdrop:ct}})}return m}_getXAxisLabelAlignment(){const{position:t,ticks:e}=this.options;if(-yn(this.labelRotation))return t==="top"?"left":"right";let i="center";return e.align==="start"?i="left":e.align==="end"?i="right":e.align==="inner"&&(i="inner"),i}_getYAxisLabelAlignment(t){const{position:e,ticks:{crossAlign:n,mirror:i,padding:r}}=this.options,o=this._getLabelSizes(),a=t+r,l=o.widest.width;let c,h;return e==="left"?i?(h=this.right+r,n==="near"?c="left":n==="center"?(c="center",h+=l/2):(c="right",h+=l)):(h=this.right-a,n==="near"?c="right":n==="center"?(c="center",h-=l/2):(c="left",h=this.left)):e==="right"?i?(h=this.left+r,n==="near"?c="right":n==="center"?(c="center",h-=l/2):(c="left",h-=l)):(h=this.left+a,n==="near"?c="left":n==="center"?(c="center",h+=l/2):(c="right",h=this.right)):c="right",{textAlign:c,x:h}}_computeLabelArea(){if(this.options.ticks.mirror)return;const t=this.chart,e=this.options.position;if(e==="left"||e==="right")return{top:0,left:this.left,bottom:t.height,right:this.right};if(e==="top"||e==="bottom")return{top:this.top,left:0,bottom:this.bottom,right:t.width}}drawBackground(){const{ctx:t,options:{backgroundColor:e},left:n,top:i,width:r,height:o}=this;e&&(t.save(),t.fillStyle=e,t.fillRect(n,i,r,o),t.restore())}getLineWidthForValue(t){const e=this.options.grid;if(!this._isVisible()||!e.display)return 0;const i=this.ticks.findIndex(r=>r.value===t);return i>=0?e.setContext(this.getContext(i)).lineWidth:0}drawGrid(t){const e=this.options.grid,n=this.ctx,i=this._gridLineItems||(this._gridLineItems=this._computeGridLineItems(t));let r,o;const a=(l,c,h)=>{!h.width||!h.color||(n.save(),n.lineWidth=h.width,n.strokeStyle=h.color,n.setLineDash(h.borderDash||[]),n.lineDashOffset=h.borderDashOffset,n.beginPath(),n.moveTo(l.x,l.y),n.lineTo(c.x,c.y),n.stroke(),n.restore())};if(e.display)for(r=0,o=i.length;r<o;++r){const l=i[r];e.drawOnChartArea&&a({x:l.x1,y:l.y1},{x:l.x2,y:l.y2},l),e.drawTicks&&a({x:l.tx1,y:l.ty1},{x:l.tx2,y:l.ty2},{color:l.tickColor,width:l.tickWidth,borderDash:l.tickBorderDash,borderDashOffset:l.tickBorderDashOffset})}}drawBorder(){const{chart:t,ctx:e,options:{border:n,grid:i}}=this,r=n.setContext(this.getContext()),o=n.display?r.width:0;if(!o)return;const a=i.setContext(this.getContext(0)).lineWidth,l=this._borderValue;let c,h,u,d;this.isHorizontal()?(c=Ri(t,this.left,o)-o/2,h=Ri(t,this.right,a)+a/2,u=d=l):(u=Ri(t,this.top,o)-o/2,d=Ri(t,this.bottom,a)+a/2,c=h=l),e.save(),e.lineWidth=r.width,e.strokeStyle=r.color,e.beginPath(),e.moveTo(c,u),e.lineTo(h,d),e.stroke(),e.restore()}drawLabels(t){if(!this.options.ticks.display)return;const n=this.ctx,i=this._computeLabelArea();i&&ga(n,i);const r=this.getLabelItems(t);for(const o of r){const a=o.options,l=o.font,c=o.label,h=o.textOffset;es(n,c,0,h,l,a)}i&&_a(n)}drawTitle(){const{ctx:t,options:{position:e,title:n,reverse:i}}=this;if(!n.display)return;const r=be(n.font),o=Oe(n.padding),a=n.align;let l=r.lineHeight/2;e==="bottom"||e==="center"||Bt(e)?(l+=o.bottom,ne(n.text)&&(l+=r.lineHeight*(n.text.length-1))):l+=o.top;const{titleX:c,titleY:h,maxWidth:u,rotation:d}=yA(this,l,e,a);es(t,n.text,0,0,r,{color:n.color,maxWidth:u,rotation:d,textAlign:vA(a,e,i),textBaseline:"middle",translation:[c,h]})}draw(t){this._isVisible()&&(this.drawBackground(),this.drawGrid(t),this.drawBorder(),this.drawTitle(),this.drawLabels(t))}_layers(){const t=this.options,e=t.ticks&&t.ticks.z||0,n=Rt(t.grid&&t.grid.z,-1),i=Rt(t.border&&t.border.z,0);return!this._isVisible()||this.draw!==ss.prototype.draw?[{z:e,draw:r=>{this.draw(r)}}]:[{z:n,draw:r=>{this.drawBackground(),this.drawGrid(r),this.drawTitle()}},{z:i,draw:()=>{this.drawBorder()}},{z:e,draw:r=>{this.drawLabels(r)}}]}getMatchingVisibleMetas(t){const e=this.chart.getSortedVisibleDatasetMetas(),n=this.axis+"AxisID",i=[];let r,o;for(r=0,o=e.length;r<o;++r){const a=e[r];a[n]===this.id&&(!t||a.type===t)&&i.push(a)}return i}_resolveTickFontOptions(t){const e=this.options.ticks.setContext(this.getContext(t));return be(e.font)}_maxDigits(){const t=this._resolveTickFontOptions(0).lineHeight;return(this.isHorizontal()?this.width:this.height)/t}}class Io{constructor(t,e,n){this.type=t,this.scope=e,this.override=n,this.items=Object.create(null)}isForType(t){return Object.prototype.isPrototypeOf.call(this.type.prototype,t.prototype)}register(t){const e=Object.getPrototypeOf(t);let n;wA(e)&&(n=this.register(e));const i=this.items,r=t.id,o=this.scope+"."+r;if(!r)throw new Error("class does not have id: "+t);return r in i||(i[r]=t,bA(t,o,n),this.override&&ue.override(t.id,t.overrides)),o}get(t){return this.items[t]}unregister(t){const e=this.items,n=t.id,i=this.scope;n in e&&delete e[n],i&&n in ue[i]&&(delete ue[i][n],this.override&&delete ts[n])}}function bA(s,t,e){const n=Ir(Object.create(null),[e?ue.get(e):{},ue.get(t),s.defaults]);ue.set(t,n),s.defaultRoutes&&MA(t,s.defaultRoutes),s.descriptors&&ue.describe(t,s.descriptors)}function MA(s,t){Object.keys(t).forEach(e=>{const n=e.split("."),i=n.pop(),r=[s].concat(n).join("."),o=t[e].split("."),a=o.pop(),l=o.join(".");ue.route(r,i,l,a)})}function wA(s){return"id"in s&&"defaults"in s}class SA{constructor(){this.controllers=new Io(Mn,"datasets",!0),this.elements=new Io(wn,"elements"),this.plugins=new Io(Object,"plugins"),this.scales=new Io(ss,"scales"),this._typedRegistries=[this.controllers,this.scales,this.elements]}add(...t){this._each("register",t)}remove(...t){this._each("unregister",t)}addControllers(...t){this._each("register",t,this.controllers)}addElements(...t){this._each("register",t,this.elements)}addPlugins(...t){this._each("register",t,this.plugins)}addScales(...t){this._each("register",t,this.scales)}getController(t){return this._get(t,this.controllers,"controller")}getElement(t){return this._get(t,this.elements,"element")}getPlugin(t){return this._get(t,this.plugins,"plugin")}getScale(t){return this._get(t,this.scales,"scale")}removeControllers(...t){this._each("unregister",t,this.controllers)}removeElements(...t){this._each("unregister",t,this.elements)}removePlugins(...t){this._each("unregister",t,this.plugins)}removeScales(...t){this._each("unregister",t,this.scales)}_each(t,e,n){[...e].forEach(i=>{const r=n||this._getRegistryForType(i);n||r.isForType(i)||r===this.plugins&&i.id?this._exec(t,r,i):jt(i,o=>{const a=n||this._getRegistryForType(o);this._exec(t,a,o)})})}_exec(t,e,n){const i=yc(t);$t(n["before"+i],[],n),e[t](n),$t(n["after"+i],[],n)}_getRegistryForType(t){for(let e=0;e<this._typedRegistries.length;e++){const n=this._typedRegistries[e];if(n.isForType(t))return n}return this.plugins}_get(t,e,n){const i=e.get(t);if(i===void 0)throw new Error('"'+t+'" is not a registered '+n+".");return i}}var Ln=new SA;class EA{constructor(){this._init=[]}notify(t,e,n,i){e==="beforeInit"&&(this._init=this._createDescriptors(t,!0),this._notify(this._init,t,"install"));const r=i?this._descriptors(t).filter(i):this._descriptors(t),o=this._notify(r,t,e,n);return e==="afterDestroy"&&(this._notify(r,t,"stop"),this._notify(this._init,t,"uninstall")),o}_notify(t,e,n,i){i=i||{};for(const r of t){const o=r.plugin,a=o[n],l=[e,i,r.options];if($t(a,l,o)===!1&&i.cancelable)return!1}return!0}invalidate(){Wt(this._cache)||(this._oldCache=this._cache,this._cache=void 0)}_descriptors(t){if(this._cache)return this._cache;const e=this._cache=this._createDescriptors(t);return this._notifyStateChanges(t),e}_createDescriptors(t,e){const n=t&&t.config,i=Rt(n.options&&n.options.plugins,{}),r=AA(n);return i===!1&&!e?[]:CA(t,r,i,e)}_notifyStateChanges(t){const e=this._oldCache||[],n=this._cache,i=(r,o)=>r.filter(a=>!o.some(l=>a.plugin.id===l.plugin.id));this._notify(i(e,n),t,"stop"),this._notify(i(n,e),t,"start")}}function AA(s){const t={},e=[],n=Object.keys(Ln.plugins.items);for(let r=0;r<n.length;r++)e.push(Ln.getPlugin(n[r]));const i=s.plugins||[];for(let r=0;r<i.length;r++){const o=i[r];e.indexOf(o)===-1&&(e.push(o),t[o.id]=!0)}return{plugins:e,localIds:t}}function TA(s,t){return!t&&s===!1?null:s===!0?{}:s}function CA(s,{plugins:t,localIds:e},n,i){const r=[],o=s.getContext();for(const a of t){const l=a.id,c=TA(n[l],i);c!==null&&r.push({plugin:a,options:PA(s.config,{plugin:a,local:e[l]},c,o)})}return r}function PA(s,{plugin:t,local:e},n,i){const r=s.pluginScopeKeys(t),o=s.getOptionScopes(n,r);return e&&t.defaults&&o.push(t.defaults),s.createResolver(o,i,[""],{scriptable:!1,indexable:!1,allKeys:!0})}function Wl(s,t){const e=ue.datasets[s]||{};return((t.datasets||{})[s]||{}).indexAxis||t.indexAxis||e.indexAxis||"x"}function LA(s,t){let e=s;return s==="_index_"?e=t:s==="_value_"&&(e=t==="x"?"y":"x"),e}function RA(s,t){return s===t?"_index_":"_value_"}function Od(s){if(s==="x"||s==="y"||s==="r")return s}function DA(s){if(s==="top"||s==="bottom")return"x";if(s==="left"||s==="right")return"y"}function Gl(s,...t){if(Od(s))return s;for(const e of t){const n=e.axis||DA(e.position)||s.length>1&&Od(s[0].toLowerCase());if(n)return n}throw new Error(`Cannot determine type of '${s}' axis. Please provide 'axis' or 'position' option.`)}function zd(s,t,e){if(e[t+"AxisID"]===s)return{axis:t}}function IA(s,t){if(t.data&&t.data.datasets){const e=t.data.datasets.filter(n=>n.xAxisID===s||n.yAxisID===s);if(e.length)return zd(s,"x",e[0])||zd(s,"y",e[0])}return{}}function FA(s,t){const e=ts[s.type]||{scales:{}},n=t.scales||{},i=Wl(s.type,t),r=Object.create(null);return Object.keys(n).forEach(o=>{const a=n[o];if(!Bt(a))return console.error(`Invalid scale configuration for scale: ${o}`);if(a._proxy)return console.warn(`Ignoring resolver passed as options for scale: ${o}`);const l=Gl(o,a,IA(o,s),ue.scales[a.type]),c=RA(l,i),h=e.scales||{};r[o]=Mr(Object.create(null),[{axis:l},a,h[l],h[c]])}),s.data.datasets.forEach(o=>{const a=o.type||s.type,l=o.indexAxis||Wl(a,t),h=(ts[a]||{}).scales||{};Object.keys(h).forEach(u=>{const d=LA(u,l),f=o[d+"AxisID"]||d;r[f]=r[f]||Object.create(null),Mr(r[f],[{axis:d},n[f],h[u]])})}),Object.keys(r).forEach(o=>{const a=r[o];Mr(a,[ue.scales[a.type],ue.scale])}),r}function $p(s){const t=s.options||(s.options={});t.plugins=Rt(t.plugins,{}),t.scales=FA(s,t)}function Kp(s){return s=s||{},s.datasets=s.datasets||[],s.labels=s.labels||[],s}function OA(s){return s=s||{},s.data=Kp(s.data),$p(s),s}const kd=new Map,Zp=new Set;function Fo(s,t){let e=kd.get(s);return e||(e=t(),kd.set(s,e),Zp.add(e)),e}const ar=(s,t,e)=>{const n=xi(t,e);n!==void 0&&s.add(n)};class zA{constructor(t){this._config=OA(t),this._scopeCache=new Map,this._resolverCache=new Map}get platform(){return this._config.platform}get type(){return this._config.type}set type(t){this._config.type=t}get data(){return this._config.data}set data(t){this._config.data=Kp(t)}get options(){return this._config.options}set options(t){this._config.options=t}get plugins(){return this._config.plugins}update(){const t=this._config;this.clearCache(),$p(t)}clearCache(){this._scopeCache.clear(),this._resolverCache.clear()}datasetScopeKeys(t){return Fo(t,()=>[[`datasets.${t}`,""]])}datasetAnimationScopeKeys(t,e){return Fo(`${t}.transition.${e}`,()=>[[`datasets.${t}.transitions.${e}`,`transitions.${e}`],[`datasets.${t}`,""]])}datasetElementScopeKeys(t,e){return Fo(`${t}-${e}`,()=>[[`datasets.${t}.elements.${e}`,`datasets.${t}`,`elements.${e}`,""]])}pluginScopeKeys(t){const e=t.id,n=this.type;return Fo(`${n}-plugin-${e}`,()=>[[`plugins.${e}`,...t.additionalOptionScopes||[]]])}_cachedScopes(t,e){const n=this._scopeCache;let i=n.get(t);return(!i||e)&&(i=new Map,n.set(t,i)),i}getOptionScopes(t,e,n){const{options:i,type:r}=this,o=this._cachedScopes(t,n),a=o.get(e);if(a)return a;const l=new Set;e.forEach(h=>{t&&(l.add(t),h.forEach(u=>ar(l,t,u))),h.forEach(u=>ar(l,i,u)),h.forEach(u=>ar(l,ts[r]||{},u)),h.forEach(u=>ar(l,ue,u)),h.forEach(u=>ar(l,Ul,u))});const c=Array.from(l);return c.length===0&&c.push(Object.create(null)),Zp.has(e)&&o.set(e,c),c}chartOptionScopes(){const{options:t,type:e}=this;return[t,ts[e]||{},ue.datasets[e]||{},{type:e},ue,Ul]}resolveNamedOptions(t,e,n,i=[""]){const r={$shared:!0},{resolver:o,subPrefixes:a}=Nd(this._resolverCache,t,i);let l=o;if(NA(o,e)){r.$shared=!1,n=vi(n)?n():n;const c=this.createResolver(t,n,a);l=Ws(o,n,c)}for(const c of e)r[c]=l[c];return r}createResolver(t,e,n=[""],i){const{resolver:r}=Nd(this._resolverCache,t,n);return Bt(e)?Ws(r,e,void 0,i):r}}function Nd(s,t,e){let n=s.get(t);n||(n=new Map,s.set(t,n));const i=e.join();let r=n.get(i);return r||(r={resolver:Ac(t,e),subPrefixes:e.filter(a=>!a.toLowerCase().includes("hover"))},n.set(i,r)),r}const kA=s=>Bt(s)&&Object.getOwnPropertyNames(s).reduce((t,e)=>t||vi(s[e]),!1);function NA(s,t){const{isScriptable:e,isIndexable:n}=Pp(s);for(const i of t){const r=e(i),o=n(i),a=(o||r)&&s[i];if(r&&(vi(a)||kA(a))||o&&ne(a))return!0}return!1}var BA="4.3.0";const UA=["top","bottom","left","right","chartArea"];function Bd(s,t){return s==="top"||s==="bottom"||UA.indexOf(s)===-1&&t==="x"}function Ud(s,t){return function(e,n){return e[s]===n[s]?e[t]-n[t]:e[s]-n[s]}}function Vd(s){const t=s.chart,e=t.options.animation;t.notifyPlugins("afterRender"),$t(e&&e.onComplete,[s],t)}function VA(s){const t=s.chart,e=t.options.animation;$t(e&&e.onProgress,[s],t)}function Jp(s){return Op()&&typeof s=="string"?s=document.getElementById(s):s&&s.length&&(s=s[0]),s&&s.canvas&&(s=s.canvas),s}const jo={},Hd=s=>{const t=Jp(s);return Object.values(jo).filter(e=>e.canvas===t).pop()};function HA(s,t,e){const n=Object.keys(s);for(const i of n){const r=+i;if(r>=t){const o=s[i];delete s[i],(e>0||r>t)&&(s[r+e]=o)}}}function WA(s,t,e,n){return!e||s.type==="mouseout"?null:n?t:s}function GA(s){const{xScale:t,yScale:e}=s;if(t&&e)return{left:t.left,right:t.right,top:e.top,bottom:e.bottom}}class Zn{static register(...t){Ln.add(...t),Wd()}static unregister(...t){Ln.remove(...t),Wd()}constructor(t,e){const n=this.config=new zA(e),i=Jp(t),r=Hd(i);if(r)throw new Error("Canvas is already in use. Chart with ID '"+r.id+"' must be destroyed before the canvas with ID '"+r.canvas.id+"' can be reused.");const o=n.createResolver(n.chartOptionScopes(),this.getContext());this.platform=new(n.platform||aA(i)),this.platform.updateConfig(n);const a=this.platform.acquireContext(i,o.aspectRatio),l=a&&a.canvas,c=l&&l.height,h=l&&l.width;if(this.id=jS(),this.ctx=a,this.canvas=l,this.width=h,this.height=c,this._options=o,this._aspectRatio=this.aspectRatio,this._layers=[],this._metasets=[],this._stacks=void 0,this.boxes=[],this.currentDevicePixelRatio=void 0,this.chartArea=void 0,this._active=[],this._lastEvent=void 0,this._listeners={},this._responsiveListeners=void 0,this._sortedMetasets=[],this.scales={},this._plugins=new EA,this.$proxies={},this._hiddenIndices={},this.attached=!1,this._animationsDisabled=void 0,this.$context=void 0,this._doResize=l1(u=>this.update(u),o.resizeDelay||0),this._dataChanges=[],jo[this.id]=this,!a||!l){console.error("Failed to create chart: can't acquire context from the given item");return}Yn.listen(this,"complete",Vd),Yn.listen(this,"progress",VA),this._initialize(),this.attached&&this.update()}get aspectRatio(){const{options:{aspectRatio:t,maintainAspectRatio:e},width:n,height:i,_aspectRatio:r}=this;return Wt(t)?e&&r?r:i?n/i:null:t}get data(){return this.config.data}set data(t){this.config.data=t}get options(){return this._options}set options(t){this.config.options=t}get registry(){return Ln}_initialize(){return this.notifyPlugins("beforeInit"),this.options.responsive?this.resize():hd(this,this.options.devicePixelRatio),this.bindEvents(),this.notifyPlugins("afterInit"),this}clear(){return ad(this.canvas,this.ctx),this}stop(){return Yn.stop(this),this}resize(t,e){Yn.running(this)?this._resizeBeforeDraw={width:t,height:e}:this._resize(t,e)}_resize(t,e){const n=this.options,i=this.canvas,r=n.maintainAspectRatio&&this.aspectRatio,o=this.platform.getMaximumSize(i,t,e,r),a=n.devicePixelRatio||this.platform.getDevicePixelRatio(),l=this.width?"resize":"attach";this.width=o.width,this.height=o.height,this._aspectRatio=this.aspectRatio,hd(this,a,!0)&&(this.notifyPlugins("resize",{size:o}),$t(n.onResize,[this,o],this),this.attached&&this._doResize(l)&&this.render())}ensureScalesHaveIDs(){const e=this.options.scales||{};jt(e,(n,i)=>{n.id=i})}buildOrUpdateScales(){const t=this.options,e=t.scales,n=this.scales,i=Object.keys(n).reduce((o,a)=>(o[a]=!1,o),{});let r=[];e&&(r=r.concat(Object.keys(e).map(o=>{const a=e[o],l=Gl(o,a),c=l==="r",h=l==="x";return{options:a,dposition:c?"chartArea":h?"bottom":"left",dtype:c?"radialLinear":h?"category":"linear"}}))),jt(r,o=>{const a=o.options,l=a.id,c=Gl(l,a),h=Rt(a.type,o.dtype);(a.position===void 0||Bd(a.position,c)!==Bd(o.dposition))&&(a.position=o.dposition),i[l]=!0;let u=null;if(l in n&&n[l].type===h)u=n[l];else{const d=Ln.getScale(h);u=new d({id:l,type:h,ctx:this.ctx,chart:this}),n[u.id]=u}u.init(a,t)}),jt(i,(o,a)=>{o||delete n[a]}),jt(n,o=>{Fe.configure(this,o,o.options),Fe.addBox(this,o)})}_updateMetasets(){const t=this._metasets,e=this.data.datasets.length,n=t.length;if(t.sort((i,r)=>i.index-r.index),n>e){for(let i=e;i<n;++i)this._destroyDatasetMeta(i);t.splice(e,n-e)}this._sortedMetasets=t.slice(0).sort(Ud("order","index"))}_removeUnreferencedMetasets(){const{_metasets:t,data:{datasets:e}}=this;t.length>e.length&&delete this._stacks,t.forEach((n,i)=>{e.filter(r=>r===n._dataset).length===0&&this._destroyDatasetMeta(i)})}buildOrUpdateControllers(){const t=[],e=this.data.datasets;let n,i;for(this._removeUnreferencedMetasets(),n=0,i=e.length;n<i;n++){const r=e[n];let o=this.getDatasetMeta(n);const a=r.type||this.config.type;if(o.type&&o.type!==a&&(this._destroyDatasetMeta(n),o=this.getDatasetMeta(n)),o.type=a,o.indexAxis=r.indexAxis||Wl(a,this.options),o.order=r.order||0,o.index=n,o.label=""+r.label,o.visible=this.isDatasetVisible(n),o.controller)o.controller.updateIndex(n),o.controller.linkScales();else{const l=Ln.getController(a),{datasetElementType:c,dataElementType:h}=ue.datasets[a];Object.assign(l,{dataElementType:Ln.getElement(h),datasetElementType:c&&Ln.getElement(c)}),o.controller=new l(this,n),t.push(o.controller)}}return this._updateMetasets(),t}_resetElements(){jt(this.data.datasets,(t,e)=>{this.getDatasetMeta(e).controller.reset()},this)}reset(){this._resetElements(),this.notifyPlugins("reset")}update(t){const e=this.config;e.update();const n=this._options=e.createResolver(e.chartOptionScopes(),this.getContext()),i=this._animationsDisabled=!n.animation;if(this._updateScales(),this._checkEventBindings(),this._updateHiddenIndices(),this._plugins.invalidate(),this.notifyPlugins("beforeUpdate",{mode:t,cancelable:!0})===!1)return;const r=this.buildOrUpdateControllers();this.notifyPlugins("beforeElementsUpdate");let o=0;for(let c=0,h=this.data.datasets.length;c<h;c++){const{controller:u}=this.getDatasetMeta(c),d=!i&&r.indexOf(u)===-1;u.buildOrUpdateElements(d),o=Math.max(+u.getMaxOverflow(),o)}o=this._minPadding=n.layout.autoPadding?o:0,this._updateLayout(o),i||jt(r,c=>{c.reset()}),this._updateDatasets(t),this.notifyPlugins("afterUpdate",{mode:t}),this._layers.sort(Ud("z","_idx"));const{_active:a,_lastEvent:l}=this;l?this._eventHandler(l,!0):a.length&&this._updateHoverStyles(a,a,!0),this.render()}_updateScales(){jt(this.scales,t=>{Fe.removeBox(this,t)}),this.ensureScalesHaveIDs(),this.buildOrUpdateScales()}_checkEventBindings(){const t=this.options,e=new Set(Object.keys(this._listeners)),n=new Set(t.events);(!Ju(e,n)||!!this._responsiveListeners!==t.responsive)&&(this.unbindEvents(),this.bindEvents())}_updateHiddenIndices(){const{_hiddenIndices:t}=this,e=this._getUniformDataChanges()||[];for(const{method:n,start:i,count:r}of e){const o=n==="_removeElements"?-r:r;HA(t,i,o)}}_getUniformDataChanges(){const t=this._dataChanges;if(!t||!t.length)return;this._dataChanges=[];const e=this.data.datasets.length,n=r=>new Set(t.filter(o=>o[0]===r).map((o,a)=>a+","+o.splice(1).join(","))),i=n(0);for(let r=1;r<e;r++)if(!Ju(i,n(r)))return;return Array.from(i).map(r=>r.split(",")).map(r=>({method:r[1],start:+r[2],count:+r[3]}))}_updateLayout(t){if(this.notifyPlugins("beforeLayout",{cancelable:!0})===!1)return;Fe.update(this,this.width,this.height,t);const e=this.chartArea,n=e.width<=0||e.height<=0;this._layers=[],jt(this.boxes,i=>{n&&i.position==="chartArea"||(i.configure&&i.configure(),this._layers.push(...i._layers()))},this),this._layers.forEach((i,r)=>{i._idx=r}),this.notifyPlugins("afterLayout")}_updateDatasets(t){if(this.notifyPlugins("beforeDatasetsUpdate",{mode:t,cancelable:!0})!==!1){for(let e=0,n=this.data.datasets.length;e<n;++e)this.getDatasetMeta(e).controller.configure();for(let e=0,n=this.data.datasets.length;e<n;++e)this._updateDataset(e,vi(t)?t({datasetIndex:e}):t);this.notifyPlugins("afterDatasetsUpdate",{mode:t})}}_updateDataset(t,e){const n=this.getDatasetMeta(t),i={meta:n,index:t,mode:e,cancelable:!0};this.notifyPlugins("beforeDatasetUpdate",i)!==!1&&(n.controller._update(e),i.cancelable=!1,this.notifyPlugins("afterDatasetUpdate",i))}render(){this.notifyPlugins("beforeRender",{cancelable:!0})!==!1&&(Yn.has(this)?this.attached&&!Yn.running(this)&&Yn.start(this):(this.draw(),Vd({chart:this})))}draw(){let t;if(this._resizeBeforeDraw){const{width:n,height:i}=this._resizeBeforeDraw;this._resize(n,i),this._resizeBeforeDraw=null}if(this.clear(),this.width<=0||this.height<=0||this.notifyPlugins("beforeDraw",{cancelable:!0})===!1)return;const e=this._layers;for(t=0;t<e.length&&e[t].z<=0;++t)e[t].draw(this.chartArea);for(this._drawDatasets();t<e.length;++t)e[t].draw(this.chartArea);this.notifyPlugins("afterDraw")}_getSortedDatasetMetas(t){const e=this._sortedMetasets,n=[];let i,r;for(i=0,r=e.length;i<r;++i){const o=e[i];(!t||o.visible)&&n.push(o)}return n}getSortedVisibleDatasetMetas(){return this._getSortedDatasetMetas(!0)}_drawDatasets(){if(this.notifyPlugins("beforeDatasetsDraw",{cancelable:!0})===!1)return;const t=this.getSortedVisibleDatasetMetas();for(let e=t.length-1;e>=0;--e)this._drawDataset(t[e]);this.notifyPlugins("afterDatasetsDraw")}_drawDataset(t){const e=this.ctx,n=t._clip,i=!n.disabled,r=GA(t)||this.chartArea,o={meta:t,index:t.index,cancelable:!0};this.notifyPlugins("beforeDatasetDraw",o)!==!1&&(i&&ga(e,{left:n.left===!1?0:r.left-n.left,right:n.right===!1?this.width:r.right+n.right,top:n.top===!1?0:r.top-n.top,bottom:n.bottom===!1?this.height:r.bottom+n.bottom}),t.controller.draw(),i&&_a(e),o.cancelable=!1,this.notifyPlugins("afterDatasetDraw",o))}isPointInArea(t){return ni(t,this.chartArea,this._minPadding)}getElementsAtEventForMode(t,e,n,i){const r=UE.modes[e];return typeof r=="function"?r(this,t,n,i):[]}getDatasetMeta(t){const e=this.data.datasets[t],n=this._metasets;let i=n.filter(r=>r&&r._dataset===e).pop();return i||(i={type:null,data:[],dataset:null,controller:null,hidden:null,xAxisID:null,yAxisID:null,order:e&&e.order||0,index:t,_dataset:e,_parsed:[],_sorted:!1},n.push(i)),i}getContext(){return this.$context||(this.$context=bi(null,{chart:this,type:"chart"}))}getVisibleDatasetCount(){return this.getSortedVisibleDatasetMetas().length}isDatasetVisible(t){const e=this.data.datasets[t];if(!e)return!1;const n=this.getDatasetMeta(t);return typeof n.hidden=="boolean"?!n.hidden:!e.hidden}setDatasetVisibility(t,e){const n=this.getDatasetMeta(t);n.hidden=!e}toggleDataVisibility(t){this._hiddenIndices[t]=!this._hiddenIndices[t]}getDataVisibility(t){return!this._hiddenIndices[t]}_updateVisibility(t,e,n){const i=n?"show":"hide",r=this.getDatasetMeta(t),o=r.controller._resolveAnimations(void 0,i);Fr(e)?(r.data[e].hidden=!n,this.update()):(this.setDatasetVisibility(t,n),o.update(r,{visible:n}),this.update(a=>a.datasetIndex===t?i:void 0))}hide(t,e){this._updateVisibility(t,e,!1)}show(t,e){this._updateVisibility(t,e,!0)}_destroyDatasetMeta(t){const e=this._metasets[t];e&&e.controller&&e.controller._destroy(),delete this._metasets[t]}_stop(){let t,e;for(this.stop(),Yn.remove(this),t=0,e=this.data.datasets.length;t<e;++t)this._destroyDatasetMeta(t)}destroy(){this.notifyPlugins("beforeDestroy");const{canvas:t,ctx:e}=this;this._stop(),this.config.clearCache(),t&&(this.unbindEvents(),ad(t,e),this.platform.releaseContext(e),this.canvas=null,this.ctx=null),delete jo[this.id],this.notifyPlugins("afterDestroy")}toBase64Image(...t){return this.canvas.toDataURL(...t)}bindEvents(){this.bindUserEvents(),this.options.responsive?this.bindResponsiveEvents():this.attached=!0}bindUserEvents(){const t=this._listeners,e=this.platform,n=(r,o)=>{e.addEventListener(this,r,o),t[r]=o},i=(r,o,a)=>{r.offsetX=o,r.offsetY=a,this._eventHandler(r)};jt(this.options.events,r=>n(r,i))}bindResponsiveEvents(){this._responsiveListeners||(this._responsiveListeners={});const t=this._responsiveListeners,e=this.platform,n=(l,c)=>{e.addEventListener(this,l,c),t[l]=c},i=(l,c)=>{t[l]&&(e.removeEventListener(this,l,c),delete t[l])},r=(l,c)=>{this.canvas&&this.resize(l,c)};let o;const a=()=>{i("attach",a),this.attached=!0,this.resize(),n("resize",r),n("detach",o)};o=()=>{this.attached=!1,i("resize",r),this._stop(),this._resize(0,0),n("attach",a)},e.isAttached(this.canvas)?a():o()}unbindEvents(){jt(this._listeners,(t,e)=>{this.platform.removeEventListener(this,e,t)}),this._listeners={},jt(this._responsiveListeners,(t,e)=>{this.platform.removeEventListener(this,e,t)}),this._responsiveListeners=void 0}updateHoverStyle(t,e,n){const i=n?"set":"remove";let r,o,a,l;for(e==="dataset"&&(r=this.getDatasetMeta(t[0].datasetIndex),r.controller["_"+i+"DatasetHoverStyle"]()),a=0,l=t.length;a<l;++a){o=t[a];const c=o&&this.getDatasetMeta(o.datasetIndex).controller;c&&c[i+"HoverStyle"](o.element,o.datasetIndex,o.index)}}getActiveElements(){return this._active||[]}setActiveElements(t){const e=this._active||[],n=t.map(({datasetIndex:r,index:o})=>{const a=this.getDatasetMeta(r);if(!a)throw new Error("No dataset found at index "+r);return{datasetIndex:r,element:a.data[o],index:o}});!Qo(n,e)&&(this._active=n,this._lastEvent=null,this._updateHoverStyles(n,e))}notifyPlugins(t,e,n){return this._plugins.notify(this,t,e,n)}isPluginEnabled(t){return this._plugins._cache.filter(e=>e.plugin.id===t).length===1}_updateHoverStyles(t,e,n){const i=this.options.hover,r=(l,c)=>l.filter(h=>!c.some(u=>h.datasetIndex===u.datasetIndex&&h.index===u.index)),o=r(e,t),a=n?t:r(t,e);o.length&&this.updateHoverStyle(o,i.mode,!1),a.length&&i.mode&&this.updateHoverStyle(a,i.mode,!0)}_eventHandler(t,e){const n={event:t,replay:e,cancelable:!0,inChartArea:this.isPointInArea(t)},i=o=>(o.options.events||this.options.events).includes(t.native.type);if(this.notifyPlugins("beforeEvent",n,i)===!1)return;const r=this._handleEvent(t,e,n.inChartArea);return n.cancelable=!1,this.notifyPlugins("afterEvent",n,i),(r||n.changed)&&this.render(),this}_handleEvent(t,e,n){const{_active:i=[],options:r}=this,o=e,a=this._getActiveElements(t,i,n,o),l=JS(t),c=WA(t,this._lastEvent,n,l);n&&(this._lastEvent=null,$t(r.onHover,[t,a,this],this),l&&$t(r.onClick,[t,a,this],this));const h=!Qo(a,i);return(h||e)&&(this._active=a,this._updateHoverStyles(a,i,e)),this._lastEvent=c,h}_getActiveElements(t,e,n,i){if(t.type==="mouseout")return[];if(!n)return e;const r=this.options.hover;return this.getElementsAtEventForMode(t,r.mode,r,i)}}lt(Zn,"defaults",ue),lt(Zn,"instances",jo),lt(Zn,"overrides",ts),lt(Zn,"registry",Ln),lt(Zn,"version",BA),lt(Zn,"getChart",Hd);function Wd(){return jt(Zn.instances,s=>s._plugins.invalidate())}function qA(s,t,e){const{startAngle:n,pixelMargin:i,x:r,y:o,outerRadius:a,innerRadius:l}=t;let c=i/a;s.beginPath(),s.arc(r,o,a,n-c,e+c),l>i?(c=i/l,s.arc(r,o,l,e+c,n-c,!0)):s.arc(r,o,i,e+he,n-he),s.closePath(),s.clip()}function jA(s){return Ec(s,["outerStart","outerEnd","innerStart","innerEnd"])}function XA(s,t,e,n){const i=jA(s.options.borderRadius),r=(e-t)/2,o=Math.min(r,n*t/2),a=l=>{const c=(e-Math.min(r,l))*n/2;return Te(l,0,Math.min(r,c))};return{outerStart:a(i.outerStart),outerEnd:a(i.outerEnd),innerStart:Te(i.innerStart,0,o),innerEnd:Te(i.innerEnd,0,o)}}function As(s,t,e,n){return{x:e+s*Math.cos(t),y:n+s*Math.sin(t)}}function ra(s,t,e,n,i,r){const{x:o,y:a,startAngle:l,pixelMargin:c,innerRadius:h}=t,u=Math.max(t.outerRadius+n+e-c,0),d=h>0?h+n+e+c:0;let f=0;const g=i-l;if(n){const P=h>0?h-n:0,O=u>0?u-n:0,V=(P+O)/2,B=V!==0?g*V/(V+n):g;f=(g-B)/2}const _=Math.max(.001,g*u-e/se)/u,m=(g-_)/2,p=l+m+f,x=i-m-f,{outerStart:w,outerEnd:v,innerStart:y,innerEnd:S}=XA(t,d,u,x-p),T=u-w,A=u-v,b=p+w/T,M=x-v/A,L=d+y,I=d+S,C=p+y/L,D=x-S/I;if(s.beginPath(),r){const P=(b+M)/2;if(s.arc(o,a,u,b,P),s.arc(o,a,u,P,M),v>0){const j=As(A,M,o,a);s.arc(j.x,j.y,v,M,x+he)}const O=As(I,x,o,a);if(s.lineTo(O.x,O.y),S>0){const j=As(I,D,o,a);s.arc(j.x,j.y,S,x+he,D+Math.PI)}const V=(x-S/d+(p+y/d))/2;if(s.arc(o,a,d,x-S/d,V,!0),s.arc(o,a,d,V,p+y/d,!0),y>0){const j=As(L,C,o,a);s.arc(j.x,j.y,y,C+Math.PI,p-he)}const B=As(T,p,o,a);if(s.lineTo(B.x,B.y),w>0){const j=As(T,b,o,a);s.arc(j.x,j.y,w,p-he,b)}}else{s.moveTo(o,a);const P=Math.cos(b)*u+o,O=Math.sin(b)*u+a;s.lineTo(P,O);const V=Math.cos(M)*u+o,B=Math.sin(M)*u+a;s.lineTo(V,B)}s.closePath()}function YA(s,t,e,n,i){const{fullCircles:r,startAngle:o,circumference:a}=t;let l=t.endAngle;if(r){ra(s,t,e,n,l,i);for(let c=0;c<r;++c)s.fill();isNaN(a)||(l=o+(a%ie||ie))}return ra(s,t,e,n,l,i),s.fill(),l}function $A(s,t,e,n,i){const{fullCircles:r,startAngle:o,circumference:a,options:l}=t,{borderWidth:c,borderJoinStyle:h,borderDash:u,borderDashOffset:d}=l,f=l.borderAlign==="inner";if(!c)return;s.setLineDash(u||[]),s.lineDashOffset=d,f?(s.lineWidth=c*2,s.lineJoin=h||"round"):(s.lineWidth=c,s.lineJoin=h||"bevel");let g=t.endAngle;if(r){ra(s,t,e,n,g,i);for(let _=0;_<r;++_)s.stroke();isNaN(a)||(g=o+(a%ie||ie))}f&&qA(s,t,g),r||(ra(s,t,e,n,g,i),s.stroke())}class mr extends wn{constructor(e){super();lt(this,"circumference");lt(this,"endAngle");lt(this,"fullCircles");lt(this,"innerRadius");lt(this,"outerRadius");lt(this,"pixelMargin");lt(this,"startAngle");this.options=void 0,this.circumference=void 0,this.startAngle=void 0,this.endAngle=void 0,this.innerRadius=void 0,this.outerRadius=void 0,this.pixelMargin=0,this.fullCircles=0,e&&Object.assign(this,e)}inRange(e,n,i){const r=this.getProps(["x","y"],i),{angle:o,distance:a}=vp(r,{x:e,y:n}),{startAngle:l,endAngle:c,innerRadius:h,outerRadius:u,circumference:d}=this.getProps(["startAngle","endAngle","innerRadius","outerRadius","circumference"],i),f=(this.options.spacing+this.options.borderWidth)/2,_=Rt(d,c-l)>=ie||Or(o,l,c),m=ti(a,h+f,u+f);return _&&m}getCenterPoint(e){const{x:n,y:i,startAngle:r,endAngle:o,innerRadius:a,outerRadius:l}=this.getProps(["x","y","startAngle","endAngle","innerRadius","outerRadius"],e),{offset:c,spacing:h}=this.options,u=(r+o)/2,d=(a+l+h+c)/2;return{x:n+Math.cos(u)*d,y:i+Math.sin(u)*d}}tooltipPosition(e){return this.getCenterPoint(e)}draw(e){const{options:n,circumference:i}=this,r=(n.offset||0)/4,o=(n.spacing||0)/2,a=n.circular;if(this.pixelMargin=n.borderAlign==="inner"?.33:0,this.fullCircles=i>ie?Math.floor(i/ie):0,i===0||this.innerRadius<0||this.outerRadius<0)return;e.save();const l=(this.startAngle+this.endAngle)/2;e.translate(Math.cos(l)*r,Math.sin(l)*r);const c=1-Math.sin(Math.min(se,i||0)),h=r*c;e.fillStyle=n.backgroundColor,e.strokeStyle=n.borderColor,YA(e,this,h,o,a),$A(e,this,h,o,a),e.restore()}}lt(mr,"id","arc"),lt(mr,"defaults",{borderAlign:"center",borderColor:"#fff",borderDash:[],borderDashOffset:0,borderJoinStyle:void 0,borderRadius:0,borderWidth:2,offset:0,spacing:0,angle:void 0,circular:!0}),lt(mr,"defaultRoutes",{backgroundColor:"backgroundColor"}),lt(mr,"descriptors",{_scriptable:!0,_indexable:e=>e!=="borderDash"});function Qp(s,t,e=t){s.lineCap=Rt(e.borderCapStyle,t.borderCapStyle),s.setLineDash(Rt(e.borderDash,t.borderDash)),s.lineDashOffset=Rt(e.borderDashOffset,t.borderDashOffset),s.lineJoin=Rt(e.borderJoinStyle,t.borderJoinStyle),s.lineWidth=Rt(e.borderWidth,t.borderWidth),s.strokeStyle=Rt(e.borderColor,t.borderColor)}function KA(s,t,e){s.lineTo(e.x,e.y)}function ZA(s){return s.stepped?y1:s.tension||s.cubicInterpolationMode==="monotone"?b1:KA}function tm(s,t,e={}){const n=s.length,{start:i=0,end:r=n-1}=e,{start:o,end:a}=t,l=Math.max(i,o),c=Math.min(r,a),h=i<o&&r<o||i>a&&r>a;return{count:n,start:l,loop:t.loop,ilen:c<l&&!h?n+c-l:c-l}}function JA(s,t,e,n){const{points:i,options:r}=t,{count:o,start:a,loop:l,ilen:c}=tm(i,e,n),h=ZA(r);let{move:u=!0,reverse:d}=n||{},f,g,_;for(f=0;f<=c;++f)g=i[(a+(d?c-f:f))%o],!g.skip&&(u?(s.moveTo(g.x,g.y),u=!1):h(s,_,g,d,r.stepped),_=g);return l&&(g=i[(a+(d?c:0))%o],h(s,_,g,d,r.stepped)),!!l}function QA(s,t,e,n){const i=t.points,{count:r,start:o,ilen:a}=tm(i,e,n),{move:l=!0,reverse:c}=n||{};let h=0,u=0,d,f,g,_,m,p;const x=v=>(o+(c?a-v:v))%r,w=()=>{_!==m&&(s.lineTo(h,m),s.lineTo(h,_),s.lineTo(h,p))};for(l&&(f=i[x(0)],s.moveTo(f.x,f.y)),d=0;d<=a;++d){if(f=i[x(d)],f.skip)continue;const v=f.x,y=f.y,S=v|0;S===g?(y<_?_=y:y>m&&(m=y),h=(u*h+v)/++u):(w(),s.lineTo(v,y),g=S,u=0,_=m=y),p=y}w()}function ql(s){const t=s.options,e=t.borderDash&&t.borderDash.length;return!s._decimated&&!s._loop&&!t.tension&&t.cubicInterpolationMode!=="monotone"&&!t.stepped&&!e?QA:JA}function tT(s){return s.stepped?Q1:s.tension||s.cubicInterpolationMode==="monotone"?tE:ki}function eT(s,t,e,n){let i=t._path;i||(i=t._path=new Path2D,t.path(i,e,n)&&i.closePath()),Qp(s,t.options),s.stroke(i)}function nT(s,t,e,n){const{segments:i,options:r}=t,o=ql(t);for(const a of i)Qp(s,r,a.style),s.beginPath(),o(s,t,a,{start:e,end:e+n-1})&&s.closePath(),s.stroke()}const iT=typeof Path2D=="function";function sT(s,t,e,n){iT&&!t.options.segment?eT(s,t,e,n):nT(s,t,e,n)}class di extends wn{constructor(t){super(),this.animated=!0,this.options=void 0,this._chart=void 0,this._loop=void 0,this._fullLoop=void 0,this._path=void 0,this._points=void 0,this._segments=void 0,this._decimated=!1,this._pointsUpdated=!1,this._datasetIndex=void 0,t&&Object.assign(this,t)}updateControlPoints(t,e){const n=this.options;if((n.tension||n.cubicInterpolationMode==="monotone")&&!n.stepped&&!this._pointsUpdated){const i=n.spanGaps?this._loop:this._fullLoop;q1(this._points,n,t,i,e),this._pointsUpdated=!0}}set points(t){this._points=t,delete this._segments,delete this._path,this._pointsUpdated=!1}get points(){return this._points}get segments(){return this._segments||(this._segments=oE(this,this.options.segment))}first(){const t=this.segments,e=this.points;return t.length&&e[t[0].start]}last(){const t=this.segments,e=this.points,n=t.length;return n&&e[t[n-1].end]}interpolate(t,e){const n=this.options,i=t[e],r=this.points,o=Up(this,{property:e,start:i,end:i});if(!o.length)return;const a=[],l=tT(n);let c,h;for(c=0,h=o.length;c<h;++c){const{start:u,end:d}=o[c],f=r[u],g=r[d];if(f===g){a.push(f);continue}const _=Math.abs((i-f[e])/(g[e]-f[e])),m=l(f,g,_,n.stepped);m[e]=t[e],a.push(m)}return a.length===1?a[0]:a}pathSegment(t,e,n){return ql(this)(t,this,e,n)}path(t,e,n){const i=this.segments,r=ql(this);let o=this._loop;e=e||0,n=n||this.points.length-e;for(const a of i)o&=r(t,this,a,{start:e,end:e+n-1});return!!o}draw(t,e,n,i){const r=this.options||{};(this.points||[]).length&&r.borderWidth&&(t.save(),sT(t,this,n,i),t.restore()),this.animated&&(this._pointsUpdated=!1,this._path=void 0)}}lt(di,"id","line"),lt(di,"defaults",{borderCapStyle:"butt",borderDash:[],borderDashOffset:0,borderJoinStyle:"miter",borderWidth:3,capBezierPoints:!0,cubicInterpolationMode:"default",fill:!1,spanGaps:!1,stepped:!1,tension:0}),lt(di,"defaultRoutes",{backgroundColor:"backgroundColor",borderColor:"borderColor"}),lt(di,"descriptors",{_scriptable:!0,_indexable:t=>t!=="borderDash"&&t!=="fill"});function Gd(s,t,e,n){const i=s.options,{[e]:r}=s.getProps([e],n);return Math.abs(t-r)<i.radius+i.hitRadius}class Xo extends wn{constructor(e){super();lt(this,"parsed");lt(this,"skip");lt(this,"stop");this.options=void 0,this.parsed=void 0,this.skip=void 0,this.stop=void 0,e&&Object.assign(this,e)}inRange(e,n,i){const r=this.options,{x:o,y:a}=this.getProps(["x","y"],i);return Math.pow(e-o,2)+Math.pow(n-a,2)<Math.pow(r.hitRadius+r.radius,2)}inXRange(e,n){return Gd(this,e,"x",n)}inYRange(e,n){return Gd(this,e,"y",n)}getCenterPoint(e){const{x:n,y:i}=this.getProps(["x","y"],e);return{x:n,y:i}}size(e){e=e||this.options||{};let n=e.radius||0;n=Math.max(n,n&&e.hoverRadius||0);const i=n&&e.borderWidth||0;return(n+i)*2}draw(e,n){const i=this.options;this.skip||i.radius<.1||!ni(this,n,this.size(i)/2)||(e.strokeStyle=i.borderColor,e.lineWidth=i.borderWidth,e.fillStyle=i.backgroundColor,Vl(e,i,this.x,this.y))}getRange(){const e=this.options||{};return e.radius+e.hitRadius}}lt(Xo,"id","point"),lt(Xo,"defaults",{borderWidth:1,hitRadius:1,hoverBorderWidth:1,hoverRadius:4,pointStyle:"circle",radius:3,rotation:0}),lt(Xo,"defaultRoutes",{backgroundColor:"backgroundColor",borderColor:"borderColor"});function em(s,t){const{x:e,y:n,base:i,width:r,height:o}=s.getProps(["x","y","base","width","height"],t);let a,l,c,h,u;return s.horizontal?(u=o/2,a=Math.min(e,i),l=Math.max(e,i),c=n-u,h=n+u):(u=r/2,a=e-u,l=e+u,c=Math.min(n,i),h=Math.max(n,i)),{left:a,top:c,right:l,bottom:h}}function fi(s,t,e,n){return s?0:Te(t,e,n)}function rT(s,t,e){const n=s.options.borderWidth,i=s.borderSkipped,r=Cp(n);return{t:fi(i.top,r.top,0,e),r:fi(i.right,r.right,0,t),b:fi(i.bottom,r.bottom,0,e),l:fi(i.left,r.left,0,t)}}function oT(s,t,e){const{enableBorderRadius:n}=s.getProps(["enableBorderRadius"]),i=s.options.borderRadius,r=Xi(i),o=Math.min(t,e),a=s.borderSkipped,l=n||Bt(i);return{topLeft:fi(!l||a.top||a.left,r.topLeft,0,o),topRight:fi(!l||a.top||a.right,r.topRight,0,o),bottomLeft:fi(!l||a.bottom||a.left,r.bottomLeft,0,o),bottomRight:fi(!l||a.bottom||a.right,r.bottomRight,0,o)}}function aT(s){const t=em(s),e=t.right-t.left,n=t.bottom-t.top,i=rT(s,e/2,n/2),r=oT(s,e/2,n/2);return{outer:{x:t.left,y:t.top,w:e,h:n,radius:r},inner:{x:t.left+i.l,y:t.top+i.t,w:e-i.l-i.r,h:n-i.t-i.b,radius:{topLeft:Math.max(0,r.topLeft-Math.max(i.t,i.l)),topRight:Math.max(0,r.topRight-Math.max(i.t,i.r)),bottomLeft:Math.max(0,r.bottomLeft-Math.max(i.b,i.l)),bottomRight:Math.max(0,r.bottomRight-Math.max(i.b,i.r))}}}}function El(s,t,e,n){const i=t===null,r=e===null,a=s&&!(i&&r)&&em(s,n);return a&&(i||ti(t,a.left,a.right))&&(r||ti(e,a.top,a.bottom))}function lT(s){return s.topLeft||s.topRight||s.bottomLeft||s.bottomRight}function cT(s,t){s.rect(t.x,t.y,t.w,t.h)}function Al(s,t,e={}){const n=s.x!==e.x?-t:0,i=s.y!==e.y?-t:0,r=(s.x+s.w!==e.x+e.w?t:0)-n,o=(s.y+s.h!==e.y+e.h?t:0)-i;return{x:s.x+n,y:s.y+i,w:s.w+r,h:s.h+o,radius:s.radius}}class Yo extends wn{constructor(t){super(),this.options=void 0,this.horizontal=void 0,this.base=void 0,this.width=void 0,this.height=void 0,this.inflateAmount=void 0,t&&Object.assign(this,t)}draw(t){const{inflateAmount:e,options:{borderColor:n,backgroundColor:i}}=this,{inner:r,outer:o}=aT(this),a=lT(o.radius)?zr:cT;t.save(),(o.w!==r.w||o.h!==r.h)&&(t.beginPath(),a(t,Al(o,e,r)),t.clip(),a(t,Al(r,-e,o)),t.fillStyle=n,t.fill("evenodd")),t.beginPath(),a(t,Al(r,e)),t.fillStyle=i,t.fill(),t.restore()}inRange(t,e,n){return El(this,t,e,n)}inXRange(t,e){return El(this,t,null,e)}inYRange(t,e){return El(this,null,t,e)}getCenterPoint(t){const{x:e,y:n,base:i,horizontal:r}=this.getProps(["x","y","base","horizontal"],t);return{x:r?(e+i)/2:e,y:r?n:(n+i)/2}}getRange(t){return t==="x"?this.width/2:this.height/2}}lt(Yo,"id","bar"),lt(Yo,"defaults",{borderSkipped:"start",borderWidth:0,borderRadius:0,inflateAmount:"auto",pointStyle:void 0}),lt(Yo,"defaultRoutes",{backgroundColor:"backgroundColor",borderColor:"borderColor"});var hT=Object.freeze({__proto__:null,ArcElement:mr,BarElement:Yo,LineElement:di,PointElement:Xo});const jl=["rgb(54, 162, 235)","rgb(255, 99, 132)","rgb(255, 159, 64)","rgb(255, 205, 86)","rgb(75, 192, 192)","rgb(153, 102, 255)","rgb(201, 203, 207)"],qd=jl.map(s=>s.replace("rgb(","rgba(").replace(")",", 0.5)"));function nm(s){return jl[s%jl.length]}function im(s){return qd[s%qd.length]}function uT(s,t){return s.borderColor=nm(t),s.backgroundColor=im(t),++t}function dT(s,t){return s.backgroundColor=s.data.map(()=>nm(t++)),t}function fT(s,t){return s.backgroundColor=s.data.map(()=>im(t++)),t}function pT(s){let t=0;return(e,n)=>{const i=s.getDatasetMeta(n).controller;i instanceof Wi?t=dT(e,t):i instanceof Ar?t=fT(e,t):i&&(t=uT(e,t))}}function jd(s){let t;for(t in s)if(s[t].borderColor||s[t].backgroundColor)return!0;return!1}function mT(s){return s&&(s.borderColor||s.backgroundColor)}var gT={id:"colors",defaults:{enabled:!0,forceOverride:!1},beforeLayout(s,t,e){if(!e.enabled)return;const{data:{datasets:n},options:i}=s.config,{elements:r}=i;if(!e.forceOverride&&(jd(n)||mT(i)||r&&jd(r)))return;const o=pT(s);n.forEach(o)}};function _T(s,t,e,n,i){const r=i.samples||n;if(r>=e)return s.slice(t,t+e);const o=[],a=(e-2)/(r-2);let l=0;const c=t+e-1;let h=t,u,d,f,g,_;for(o[l++]=s[h],u=0;u<r-2;u++){let m=0,p=0,x;const w=Math.floor((u+1)*a)+1+t,v=Math.min(Math.floor((u+2)*a)+1,e)+t,y=v-w;for(x=w;x<v;x++)m+=s[x].x,p+=s[x].y;m/=y,p/=y;const S=Math.floor(u*a)+1+t,T=Math.min(Math.floor((u+1)*a)+1,e)+t,{x:A,y:b}=s[h];for(f=g=-1,x=S;x<T;x++)g=.5*Math.abs((A-m)*(s[x].y-b)-(A-s[x].x)*(p-b)),g>f&&(f=g,d=s[x],_=x);o[l++]=d,h=_}return o[l++]=s[c],o}function xT(s,t,e,n){let i=0,r=0,o,a,l,c,h,u,d,f,g,_;const m=[],p=t+e-1,x=s[t].x,v=s[p].x-x;for(o=t;o<t+e;++o){a=s[o],l=(a.x-x)/v*n,c=a.y;const y=l|0;if(y===h)c<g?(g=c,u=o):c>_&&(_=c,d=o),i=(r*i+a.x)/++r;else{const S=o-1;if(!Wt(u)&&!Wt(d)){const T=Math.min(u,d),A=Math.max(u,d);T!==f&&T!==S&&m.push({...s[T],x:i}),A!==f&&A!==S&&m.push({...s[A],x:i})}o>0&&S!==f&&m.push(s[S]),m.push(a),h=y,r=0,g=_=c,u=d=f=o}}return m}function sm(s){if(s._decimated){const t=s._data;delete s._decimated,delete s._data,Object.defineProperty(s,"data",{configurable:!0,enumerable:!0,writable:!0,value:t})}}function Xd(s){s.data.datasets.forEach(t=>{sm(t)})}function vT(s,t){const e=t.length;let n=0,i;const{iScale:r}=s,{min:o,max:a,minDefined:l,maxDefined:c}=r.getUserBounds();return l&&(n=Te(ei(t,r.axis,o).lo,0,e-1)),c?i=Te(ei(t,r.axis,a).hi+1,n,e)-n:i=e-n,{start:n,count:i}}var yT={id:"decimation",defaults:{algorithm:"min-max",enabled:!1},beforeElementsUpdate:(s,t,e)=>{if(!e.enabled){Xd(s);return}const n=s.width;s.data.datasets.forEach((i,r)=>{const{_data:o,indexAxis:a}=i,l=s.getDatasetMeta(r),c=o||i.data;if(fr([a,s.options.indexAxis])==="y"||!l.controller.supportsDecimation)return;const h=s.scales[l.xAxisID];if(h.type!=="linear"&&h.type!=="time"||s.options.parsing)return;let{start:u,count:d}=vT(l,c);const f=e.threshold||4*n;if(d<=f){sm(i);return}Wt(o)&&(i._data=c,delete i.data,Object.defineProperty(i,"data",{configurable:!0,enumerable:!0,get:function(){return this._decimated},set:function(_){this._data=_}}));let g;switch(e.algorithm){case"lttb":g=_T(c,u,d,n,e);break;case"min-max":g=xT(c,u,d,n);break;default:throw new Error(`Unsupported decimation algorithm '${e.algorithm}'`)}i._decimated=g})},destroy(s){Xd(s)}};function bT(s,t,e){const n=s.segments,i=s.points,r=t.points,o=[];for(const a of n){let{start:l,end:c}=a;c=Rc(l,c,i);const h=Xl(e,i[l],i[c],a.loop);if(!t.segments){o.push({source:a,target:h,start:i[l],end:i[c]});continue}const u=Up(t,h);for(const d of u){const f=Xl(e,r[d.start],r[d.end],d.loop),g=Bp(a,i,f);for(const _ of g)o.push({source:_,target:d,start:{[e]:Yd(h,f,"start",Math.max)},end:{[e]:Yd(h,f,"end",Math.min)}})}}return o}function Xl(s,t,e,n){if(n)return;let i=t[s],r=e[s];return s==="angle"&&(i=Qe(i),r=Qe(r)),{property:s,start:i,end:r}}function MT(s,t){const{x:e=null,y:n=null}=s||{},i=t.points,r=[];return t.segments.forEach(({start:o,end:a})=>{a=Rc(o,a,i);const l=i[o],c=i[a];n!==null?(r.push({x:l.x,y:n}),r.push({x:c.x,y:n})):e!==null&&(r.push({x:e,y:l.y}),r.push({x:e,y:c.y}))}),r}function Rc(s,t,e){for(;t>s;t--){const n=e[t];if(!isNaN(n.x)&&!isNaN(n.y))break}return t}function Yd(s,t,e,n){return s&&t?n(s[e],t[e]):s?s[e]:t?t[e]:0}function rm(s,t){let e=[],n=!1;return ne(s)?(n=!0,e=s):e=MT(s,t),e.length?new di({points:e,options:{tension:0},_loop:n,_fullLoop:n}):null}function $d(s){return s&&s.fill!==!1}function wT(s,t,e){let i=s[t].fill;const r=[t];let o;if(!e)return i;for(;i!==!1&&r.indexOf(i)===-1;){if(!ce(i))return i;if(o=s[i],!o)return!1;if(o.visible)return i;r.push(i),i=o.fill}return!1}function ST(s,t,e){const n=CT(s);if(Bt(n))return isNaN(n.value)?!1:n;let i=parseFloat(n);return ce(i)&&Math.floor(i)===i?ET(n[0],t,i,e):["origin","start","end","stack","shape"].indexOf(n)>=0&&n}function ET(s,t,e,n){return(s==="-"||s==="+")&&(e=t+e),e===t||e<0||e>=n?!1:e}function AT(s,t){let e=null;return s==="start"?e=t.bottom:s==="end"?e=t.top:Bt(s)?e=t.getPixelForValue(s.value):t.getBasePixel&&(e=t.getBasePixel()),e}function TT(s,t,e){let n;return s==="start"?n=e:s==="end"?n=t.options.reverse?t.min:t.max:Bt(s)?n=s.value:n=t.getBaseValue(),n}function CT(s){const t=s.options,e=t.fill;let n=Rt(e&&e.target,e);return n===void 0&&(n=!!t.backgroundColor),n===!1||n===null?!1:n===!0?"origin":n}function PT(s){const{scale:t,index:e,line:n}=s,i=[],r=n.segments,o=n.points,a=LT(t,e);a.push(rm({x:null,y:t.bottom},n));for(let l=0;l<r.length;l++){const c=r[l];for(let h=c.start;h<=c.end;h++)RT(i,o[h],a)}return new di({points:i,options:{}})}function LT(s,t){const e=[],n=s.getMatchingVisibleMetas("line");for(let i=0;i<n.length;i++){const r=n[i];if(r.index===t)break;r.hidden||e.unshift(r.dataset)}return e}function RT(s,t,e){const n=[];for(let i=0;i<e.length;i++){const r=e[i],{first:o,last:a,point:l}=DT(r,t,"x");if(!(!l||o&&a)){if(o)n.unshift(l);else if(s.push(l),!a)break}}s.push(...n)}function DT(s,t,e){const n=s.interpolate(t,e);if(!n)return{};const i=n[e],r=s.segments,o=s.points;let a=!1,l=!1;for(let c=0;c<r.length;c++){const h=r[c],u=o[h.start][e],d=o[h.end][e];if(ti(i,u,d)){a=i===u,l=i===d;break}}return{first:a,last:l,point:n}}class om{constructor(t){this.x=t.x,this.y=t.y,this.radius=t.radius}pathSegment(t,e,n){const{x:i,y:r,radius:o}=this;return e=e||{start:0,end:ie},t.arc(i,r,o,e.end,e.start,!0),!n.bounds}interpolate(t){const{x:e,y:n,radius:i}=this,r=t.angle;return{x:e+Math.cos(r)*i,y:n+Math.sin(r)*i,angle:r}}}function IT(s){const{chart:t,fill:e,line:n}=s;if(ce(e))return FT(t,e);if(e==="stack")return PT(s);if(e==="shape")return!0;const i=OT(s);return i instanceof om?i:rm(i,n)}function FT(s,t){const e=s.getDatasetMeta(t);return e&&s.isDatasetVisible(t)?e.dataset:null}function OT(s){return(s.scale||{}).getPointPositionForValue?kT(s):zT(s)}function zT(s){const{scale:t={},fill:e}=s,n=AT(e,t);if(ce(n)){const i=t.isHorizontal();return{x:i?n:null,y:i?null:n}}return null}function kT(s){const{scale:t,fill:e}=s,n=t.options,i=t.getLabels().length,r=n.reverse?t.max:t.min,o=TT(e,t,r),a=[];if(n.grid.circular){const l=t.getPointPositionForValue(0,r);return new om({x:l.x,y:l.y,radius:t.getDistanceFromCenterForValue(o)})}for(let l=0;l<i;++l)a.push(t.getPointPositionForValue(l,o));return a}function Tl(s,t,e){const n=IT(t),{line:i,scale:r,axis:o}=t,a=i.options,l=a.fill,c=a.backgroundColor,{above:h=c,below:u=c}=l||{};n&&i.points.length&&(ga(s,e),NT(s,{line:i,target:n,above:h,below:u,area:e,scale:r,axis:o}),_a(s))}function NT(s,t){const{line:e,target:n,above:i,below:r,area:o,scale:a}=t,l=e._loop?"angle":t.axis;s.save(),l==="x"&&r!==i&&(Kd(s,n,o.top),Zd(s,{line:e,target:n,color:i,scale:a,property:l}),s.restore(),s.save(),Kd(s,n,o.bottom)),Zd(s,{line:e,target:n,color:r,scale:a,property:l}),s.restore()}function Kd(s,t,e){const{segments:n,points:i}=t;let r=!0,o=!1;s.beginPath();for(const a of n){const{start:l,end:c}=a,h=i[l],u=i[Rc(l,c,i)];r?(s.moveTo(h.x,h.y),r=!1):(s.lineTo(h.x,e),s.lineTo(h.x,h.y)),o=!!t.pathSegment(s,a,{move:o}),o?s.closePath():s.lineTo(u.x,e)}s.lineTo(t.first().x,e),s.closePath(),s.clip()}function Zd(s,t){const{line:e,target:n,property:i,color:r,scale:o}=t,a=bT(e,n,i);for(const{source:l,target:c,start:h,end:u}of a){const{style:{backgroundColor:d=r}={}}=l,f=n!==!0;s.save(),s.fillStyle=d,BT(s,o,f&&Xl(i,h,u)),s.beginPath();const g=!!e.pathSegment(s,l);let _;if(f){g?s.closePath():Jd(s,n,u,i);const m=!!n.pathSegment(s,c,{move:g,reverse:!0});_=g&&m,_||Jd(s,n,h,i)}s.closePath(),s.fill(_?"evenodd":"nonzero"),s.restore()}}function BT(s,t,e){const{top:n,bottom:i}=t.chart.chartArea,{property:r,start:o,end:a}=e||{};r==="x"&&(s.beginPath(),s.rect(o,n,a-o,i-n),s.clip())}function Jd(s,t,e,n){const i=t.interpolate(e,n);i&&s.lineTo(i.x,i.y)}var UT={id:"filler",afterDatasetsUpdate(s,t,e){const n=(s.data.datasets||[]).length,i=[];let r,o,a,l;for(o=0;o<n;++o)r=s.getDatasetMeta(o),a=r.dataset,l=null,a&&a.options&&a instanceof di&&(l={visible:s.isDatasetVisible(o),index:o,fill:ST(a,o,n),chart:s,axis:r.controller.options.indexAxis,scale:r.vScale,line:a}),r.$filler=l,i.push(l);for(o=0;o<n;++o)l=i[o],!(!l||l.fill===!1)&&(l.fill=wT(i,o,e.propagate))},beforeDraw(s,t,e){const n=e.drawTime==="beforeDraw",i=s.getSortedVisibleDatasetMetas(),r=s.chartArea;for(let o=i.length-1;o>=0;--o){const a=i[o].$filler;a&&(a.line.updateControlPoints(r,a.axis),n&&a.fill&&Tl(s.ctx,a,r))}},beforeDatasetsDraw(s,t,e){if(e.drawTime!=="beforeDatasetsDraw")return;const n=s.getSortedVisibleDatasetMetas();for(let i=n.length-1;i>=0;--i){const r=n[i].$filler;$d(r)&&Tl(s.ctx,r,s.chartArea)}},beforeDatasetDraw(s,t,e){const n=t.meta.$filler;!$d(n)||e.drawTime!=="beforeDatasetDraw"||Tl(s.ctx,n,s.chartArea)},defaults:{propagate:!0,drawTime:"beforeDatasetDraw"}};const Qd=(s,t)=>{let{boxHeight:e=t,boxWidth:n=t}=s;return s.usePointStyle&&(e=Math.min(e,t),n=s.pointStyleWidth||Math.min(n,t)),{boxWidth:n,boxHeight:e,itemHeight:Math.max(t,e)}},VT=(s,t)=>s!==null&&t!==null&&s.datasetIndex===t.datasetIndex&&s.index===t.index;class tf extends wn{constructor(t){super(),this._added=!1,this.legendHitBoxes=[],this._hoveredItem=null,this.doughnutMode=!1,this.chart=t.chart,this.options=t.options,this.ctx=t.ctx,this.legendItems=void 0,this.columnSizes=void 0,this.lineWidths=void 0,this.maxHeight=void 0,this.maxWidth=void 0,this.top=void 0,this.bottom=void 0,this.left=void 0,this.right=void 0,this.height=void 0,this.width=void 0,this._margins=void 0,this.position=void 0,this.weight=void 0,this.fullSize=void 0}update(t,e,n){this.maxWidth=t,this.maxHeight=e,this._margins=n,this.setDimensions(),this.buildLabels(),this.fit()}setDimensions(){this.isHorizontal()?(this.width=this.maxWidth,this.left=this._margins.left,this.right=this.width):(this.height=this.maxHeight,this.top=this._margins.top,this.bottom=this.height)}buildLabels(){const t=this.options.labels||{};let e=$t(t.generateLabels,[this.chart],this)||[];t.filter&&(e=e.filter(n=>t.filter(n,this.chart.data))),t.sort&&(e=e.sort((n,i)=>t.sort(n,i,this.chart.data))),this.options.reverse&&e.reverse(),this.legendItems=e}fit(){const{options:t,ctx:e}=this;if(!t.display){this.width=this.height=0;return}const n=t.labels,i=be(n.font),r=i.size,o=this._computeTitleHeight(),{boxWidth:a,itemHeight:l}=Qd(n,r);let c,h;e.font=i.string,this.isHorizontal()?(c=this.maxWidth,h=this._fitRows(o,r,a,l)+10):(h=this.maxHeight,c=this._fitCols(o,i,a,l)+10),this.width=Math.min(c,t.maxWidth||this.maxWidth),this.height=Math.min(h,t.maxHeight||this.maxHeight)}_fitRows(t,e,n,i){const{ctx:r,maxWidth:o,options:{labels:{padding:a}}}=this,l=this.legendHitBoxes=[],c=this.lineWidths=[0],h=i+a;let u=t;r.textAlign="left",r.textBaseline="middle";let d=-1,f=-h;return this.legendItems.forEach((g,_)=>{const m=n+e/2+r.measureText(g.text).width;(_===0||c[c.length-1]+m+2*a>o)&&(u+=h,c[c.length-(_>0?0:1)]=0,f+=h,d++),l[_]={left:0,top:f,row:d,width:m,height:i},c[c.length-1]+=m+a}),u}_fitCols(t,e,n,i){const{ctx:r,maxHeight:o,options:{labels:{padding:a}}}=this,l=this.legendHitBoxes=[],c=this.columnSizes=[],h=o-t;let u=a,d=0,f=0,g=0,_=0;return this.legendItems.forEach((m,p)=>{const{itemWidth:x,itemHeight:w}=HT(n,e,r,m,i);p>0&&f+w+2*a>h&&(u+=d+a,c.push({width:d,height:f}),g+=d+a,_++,d=f=0),l[p]={left:g,top:f,col:_,width:x,height:w},d=Math.max(d,x),f+=w+a}),u+=d,c.push({width:d,height:f}),u}adjustHitBoxes(){if(!this.options.display)return;const t=this._computeTitleHeight(),{legendHitBoxes:e,options:{align:n,labels:{padding:i},rtl:r}}=this,o=Os(r,this.left,this.width);if(this.isHorizontal()){let a=0,l=Ie(n,this.left+i,this.right-this.lineWidths[a]);for(const c of e)a!==c.row&&(a=c.row,l=Ie(n,this.left+i,this.right-this.lineWidths[a])),c.top+=this.top+t+i,c.left=o.leftForLtr(o.x(l),c.width),l+=c.width+i}else{let a=0,l=Ie(n,this.top+t+i,this.bottom-this.columnSizes[a].height);for(const c of e)c.col!==a&&(a=c.col,l=Ie(n,this.top+t+i,this.bottom-this.columnSizes[a].height)),c.top=l,c.left+=this.left+i,c.left=o.leftForLtr(o.x(c.left),c.width),l+=c.height+i}}isHorizontal(){return this.options.position==="top"||this.options.position==="bottom"}draw(){if(this.options.display){const t=this.ctx;ga(t,this),this._draw(),_a(t)}}_draw(){const{options:t,columnSizes:e,lineWidths:n,ctx:i}=this,{align:r,labels:o}=t,a=ue.color,l=Os(t.rtl,this.left,this.width),c=be(o.font),{padding:h}=o,u=c.size,d=u/2;let f;this.drawTitle(),i.textAlign=l.textAlign("left"),i.textBaseline="middle",i.lineWidth=.5,i.font=c.string;const{boxWidth:g,boxHeight:_,itemHeight:m}=Qd(o,u),p=function(S,T,A){if(isNaN(g)||g<=0||isNaN(_)||_<0)return;i.save();const b=Rt(A.lineWidth,1);if(i.fillStyle=Rt(A.fillStyle,a),i.lineCap=Rt(A.lineCap,"butt"),i.lineDashOffset=Rt(A.lineDashOffset,0),i.lineJoin=Rt(A.lineJoin,"miter"),i.lineWidth=b,i.strokeStyle=Rt(A.strokeStyle,a),i.setLineDash(Rt(A.lineDash,[])),o.usePointStyle){const M={radius:_*Math.SQRT2/2,pointStyle:A.pointStyle,rotation:A.rotation,borderWidth:b},L=l.xPlus(S,g/2),I=T+d;Tp(i,M,L,I,o.pointStyleWidth&&g)}else{const M=T+Math.max((u-_)/2,0),L=l.leftForLtr(S,g),I=Xi(A.borderRadius);i.beginPath(),Object.values(I).some(C=>C!==0)?zr(i,{x:L,y:M,w:g,h:_,radius:I}):i.rect(L,M,g,_),i.fill(),b!==0&&i.stroke()}i.restore()},x=function(S,T,A){es(i,A.text,S,T+m/2,c,{strikethrough:A.hidden,textAlign:l.textAlign(A.textAlign)})},w=this.isHorizontal(),v=this._computeTitleHeight();w?f={x:Ie(r,this.left+h,this.right-n[0]),y:this.top+h+v,line:0}:f={x:this.left+h,y:Ie(r,this.top+v+h,this.bottom-e[0].height),line:0},zp(this.ctx,t.textDirection);const y=m+h;this.legendItems.forEach((S,T)=>{i.strokeStyle=S.fontColor,i.fillStyle=S.fontColor;const A=i.measureText(S.text).width,b=l.textAlign(S.textAlign||(S.textAlign=o.textAlign)),M=g+d+A;let L=f.x,I=f.y;l.setWidth(this.width),w?T>0&&L+M+h>this.right&&(I=f.y+=y,f.line++,L=f.x=Ie(r,this.left+h,this.right-n[f.line])):T>0&&I+y>this.bottom&&(L=f.x=L+e[f.line].width+h,f.line++,I=f.y=Ie(r,this.top+v+h,this.bottom-e[f.line].height));const C=l.x(L);if(p(C,I,S),L=c1(b,L+g+d,w?L+M:this.right,t.rtl),x(l.x(L),I,S),w)f.x+=M+h;else if(typeof S.text!="string"){const D=c.lineHeight;f.y+=am(S,D)}else f.y+=y}),kp(this.ctx,t.textDirection)}drawTitle(){const t=this.options,e=t.title,n=be(e.font),i=Oe(e.padding);if(!e.display)return;const r=Os(t.rtl,this.left,this.width),o=this.ctx,a=e.position,l=n.size/2,c=i.top+l;let h,u=this.left,d=this.width;if(this.isHorizontal())d=Math.max(...this.lineWidths),h=this.top+c,u=Ie(t.align,u,this.right-d);else{const g=this.columnSizes.reduce((_,m)=>Math.max(_,m.height),0);h=c+Ie(t.align,this.top,this.bottom-g-t.labels.padding-this._computeTitleHeight())}const f=Ie(a,u,u+d);o.textAlign=r.textAlign(wc(a)),o.textBaseline="middle",o.strokeStyle=e.color,o.fillStyle=e.color,o.font=n.string,es(o,e.text,f,h,n)}_computeTitleHeight(){const t=this.options.title,e=be(t.font),n=Oe(t.padding);return t.display?e.lineHeight+n.height:0}_getLegendItemAt(t,e){let n,i,r;if(ti(t,this.left,this.right)&&ti(e,this.top,this.bottom)){for(r=this.legendHitBoxes,n=0;n<r.length;++n)if(i=r[n],ti(t,i.left,i.left+i.width)&&ti(e,i.top,i.top+i.height))return this.legendItems[n]}return null}handleEvent(t){const e=this.options;if(!qT(t.type,e))return;const n=this._getLegendItemAt(t.x,t.y);if(t.type==="mousemove"||t.type==="mouseout"){const i=this._hoveredItem,r=VT(i,n);i&&!r&&$t(e.onLeave,[t,i,this],this),this._hoveredItem=n,n&&!r&&$t(e.onHover,[t,n,this],this)}else n&&$t(e.onClick,[t,n,this],this)}}function HT(s,t,e,n,i){const r=WT(n,s,t,e),o=GT(i,n,t.lineHeight);return{itemWidth:r,itemHeight:o}}function WT(s,t,e,n){let i=s.text;return i&&typeof i!="string"&&(i=i.reduce((r,o)=>r.length>o.length?r:o)),t+e.size/2+n.measureText(i).width}function GT(s,t,e){let n=s;return typeof t.text!="string"&&(n=am(t,e)),n}function am(s,t){const e=s.text?s.text.length+.5:0;return t*e}function qT(s,t){return!!((s==="mousemove"||s==="mouseout")&&(t.onHover||t.onLeave)||t.onClick&&(s==="click"||s==="mouseup"))}var jT={id:"legend",_element:tf,start(s,t,e){const n=s.legend=new tf({ctx:s.ctx,options:e,chart:s});Fe.configure(s,n,e),Fe.addBox(s,n)},stop(s){Fe.removeBox(s,s.legend),delete s.legend},beforeUpdate(s,t,e){const n=s.legend;Fe.configure(s,n,e),n.options=e},afterUpdate(s){const t=s.legend;t.buildLabels(),t.adjustHitBoxes()},afterEvent(s,t){t.replay||s.legend.handleEvent(t.event)},defaults:{display:!0,position:"top",align:"center",fullSize:!0,reverse:!1,weight:1e3,onClick(s,t,e){const n=t.datasetIndex,i=e.chart;i.isDatasetVisible(n)?(i.hide(n),t.hidden=!0):(i.show(n),t.hidden=!1)},onHover:null,onLeave:null,labels:{color:s=>s.chart.options.color,boxWidth:40,padding:10,generateLabels(s){const t=s.data.datasets,{labels:{usePointStyle:e,pointStyle:n,textAlign:i,color:r,useBorderRadius:o,borderRadius:a}}=s.legend.options;return s._getSortedDatasetMetas().map(l=>{const c=l.controller.getStyle(e?0:void 0),h=Oe(c.borderWidth);return{text:t[l.index].label,fillStyle:c.backgroundColor,fontColor:r,hidden:!l.visible,lineCap:c.borderCapStyle,lineDash:c.borderDash,lineDashOffset:c.borderDashOffset,lineJoin:c.borderJoinStyle,lineWidth:(h.width+h.height)/4,strokeStyle:c.borderColor,pointStyle:n||c.pointStyle,rotation:c.rotation,textAlign:i||c.textAlign,borderRadius:o&&(a||c.borderRadius),datasetIndex:l.index}},this)}},title:{color:s=>s.chart.options.color,display:!1,position:"center",text:""}},descriptors:{_scriptable:s=>!s.startsWith("on"),labels:{_scriptable:s=>!["generateLabels","filter","sort"].includes(s)}}};class Dc extends wn{constructor(t){super(),this.chart=t.chart,this.options=t.options,this.ctx=t.ctx,this._padding=void 0,this.top=void 0,this.bottom=void 0,this.left=void 0,this.right=void 0,this.width=void 0,this.height=void 0,this.position=void 0,this.weight=void 0,this.fullSize=void 0}update(t,e){const n=this.options;if(this.left=0,this.top=0,!n.display){this.width=this.height=this.right=this.bottom=0;return}this.width=this.right=t,this.height=this.bottom=e;const i=ne(n.text)?n.text.length:1;this._padding=Oe(n.padding);const r=i*be(n.font).lineHeight+this._padding.height;this.isHorizontal()?this.height=r:this.width=r}isHorizontal(){const t=this.options.position;return t==="top"||t==="bottom"}_drawArgs(t){const{top:e,left:n,bottom:i,right:r,options:o}=this,a=o.align;let l=0,c,h,u;return this.isHorizontal()?(h=Ie(a,n,r),u=e+t,c=r-n):(o.position==="left"?(h=n+t,u=Ie(a,i,e),l=se*-.5):(h=r-t,u=Ie(a,e,i),l=se*.5),c=i-e),{titleX:h,titleY:u,maxWidth:c,rotation:l}}draw(){const t=this.ctx,e=this.options;if(!e.display)return;const n=be(e.font),r=n.lineHeight/2+this._padding.top,{titleX:o,titleY:a,maxWidth:l,rotation:c}=this._drawArgs(r);es(t,e.text,0,0,n,{color:e.color,maxWidth:l,rotation:c,textAlign:wc(e.align),textBaseline:"middle",translation:[o,a]})}}function XT(s,t){const e=new Dc({ctx:s.ctx,options:t,chart:s});Fe.configure(s,e,t),Fe.addBox(s,e),s.titleBlock=e}var YT={id:"title",_element:Dc,start(s,t,e){XT(s,e)},stop(s){const t=s.titleBlock;Fe.removeBox(s,t),delete s.titleBlock},beforeUpdate(s,t,e){const n=s.titleBlock;Fe.configure(s,n,e),n.options=e},defaults:{align:"center",display:!1,font:{weight:"bold"},fullSize:!0,padding:10,position:"top",text:"",weight:2e3},defaultRoutes:{color:"color"},descriptors:{_scriptable:!0,_indexable:!1}};const Oo=new WeakMap;var $T={id:"subtitle",start(s,t,e){const n=new Dc({ctx:s.ctx,options:e,chart:s});Fe.configure(s,n,e),Fe.addBox(s,n),Oo.set(s,n)},stop(s){Fe.removeBox(s,Oo.get(s)),Oo.delete(s)},beforeUpdate(s,t,e){const n=Oo.get(s);Fe.configure(s,n,e),n.options=e},defaults:{align:"center",display:!1,font:{weight:"normal"},fullSize:!0,padding:0,position:"top",text:"",weight:1500},defaultRoutes:{color:"color"},descriptors:{_scriptable:!0,_indexable:!1}};const gr={average(s){if(!s.length)return!1;let t,e,n=0,i=0,r=0;for(t=0,e=s.length;t<e;++t){const o=s[t].element;if(o&&o.hasValue()){const a=o.tooltipPosition();n+=a.x,i+=a.y,++r}}return{x:n/r,y:i/r}},nearest(s,t){if(!s.length)return!1;let e=t.x,n=t.y,i=Number.POSITIVE_INFINITY,r,o,a;for(r=0,o=s.length;r<o;++r){const l=s[r].element;if(l&&l.hasValue()){const c=l.getCenterPoint(),h=Bl(t,c);h<i&&(i=h,a=l)}}if(a){const l=a.tooltipPosition();e=l.x,n=l.y}return{x:e,y:n}}};function Pn(s,t){return t&&(ne(t)?Array.prototype.push.apply(s,t):s.push(t)),s}function $n(s){return(typeof s=="string"||s instanceof String)&&s.indexOf(`
`)>-1?s.split(`
`):s}function KT(s,t){const{element:e,datasetIndex:n,index:i}=t,r=s.getDatasetMeta(n).controller,{label:o,value:a}=r.getLabelAndValue(i);return{chart:s,label:o,parsed:r.getParsed(i),raw:s.data.datasets[n].data[i],formattedValue:a,dataset:r.getDataset(),dataIndex:i,datasetIndex:n,element:e}}function ef(s,t){const e=s.chart.ctx,{body:n,footer:i,title:r}=s,{boxWidth:o,boxHeight:a}=t,l=be(t.bodyFont),c=be(t.titleFont),h=be(t.footerFont),u=r.length,d=i.length,f=n.length,g=Oe(t.padding);let _=g.height,m=0,p=n.reduce((v,y)=>v+y.before.length+y.lines.length+y.after.length,0);if(p+=s.beforeBody.length+s.afterBody.length,u&&(_+=u*c.lineHeight+(u-1)*t.titleSpacing+t.titleMarginBottom),p){const v=t.displayColors?Math.max(a,l.lineHeight):l.lineHeight;_+=f*v+(p-f)*l.lineHeight+(p-1)*t.bodySpacing}d&&(_+=t.footerMarginTop+d*h.lineHeight+(d-1)*t.footerSpacing);let x=0;const w=function(v){m=Math.max(m,e.measureText(v).width+x)};return e.save(),e.font=c.string,jt(s.title,w),e.font=l.string,jt(s.beforeBody.concat(s.afterBody),w),x=t.displayColors?o+2+t.boxPadding:0,jt(n,v=>{jt(v.before,w),jt(v.lines,w),jt(v.after,w)}),x=0,e.font=h.string,jt(s.footer,w),e.restore(),m+=g.width,{width:m,height:_}}function ZT(s,t){const{y:e,height:n}=t;return e<n/2?"top":e>s.height-n/2?"bottom":"center"}function JT(s,t,e,n){const{x:i,width:r}=n,o=e.caretSize+e.caretPadding;if(s==="left"&&i+r+o>t.width||s==="right"&&i-r-o<0)return!0}function QT(s,t,e,n){const{x:i,width:r}=e,{width:o,chartArea:{left:a,right:l}}=s;let c="center";return n==="center"?c=i<=(a+l)/2?"left":"right":i<=r/2?c="left":i>=o-r/2&&(c="right"),JT(c,s,t,e)&&(c="center"),c}function nf(s,t,e){const n=e.yAlign||t.yAlign||ZT(s,e);return{xAlign:e.xAlign||t.xAlign||QT(s,t,e,n),yAlign:n}}function tC(s,t){let{x:e,width:n}=s;return t==="right"?e-=n:t==="center"&&(e-=n/2),e}function eC(s,t,e){let{y:n,height:i}=s;return t==="top"?n+=e:t==="bottom"?n-=i+e:n-=i/2,n}function sf(s,t,e,n){const{caretSize:i,caretPadding:r,cornerRadius:o}=s,{xAlign:a,yAlign:l}=e,c=i+r,{topLeft:h,topRight:u,bottomLeft:d,bottomRight:f}=Xi(o);let g=tC(t,a);const _=eC(t,l,c);return l==="center"?a==="left"?g+=c:a==="right"&&(g-=c):a==="left"?g-=Math.max(h,d)+i:a==="right"&&(g+=Math.max(u,f)+i),{x:Te(g,0,n.width-t.width),y:Te(_,0,n.height-t.height)}}function zo(s,t,e){const n=Oe(e.padding);return t==="center"?s.x+s.width/2:t==="right"?s.x+s.width-n.right:s.x+n.left}function rf(s){return Pn([],$n(s))}function nC(s,t,e){return bi(s,{tooltip:t,tooltipItems:e,type:"tooltip"})}function of(s,t){const e=t&&t.dataset&&t.dataset.tooltip&&t.dataset.tooltip.callbacks;return e?s.override(e):s}const lm={beforeTitle:Xn,title(s){if(s.length>0){const t=s[0],e=t.chart.data.labels,n=e?e.length:0;if(this&&this.options&&this.options.mode==="dataset")return t.dataset.label||"";if(t.label)return t.label;if(n>0&&t.dataIndex<n)return e[t.dataIndex]}return""},afterTitle:Xn,beforeBody:Xn,beforeLabel:Xn,label(s){if(this&&this.options&&this.options.mode==="dataset")return s.label+": "+s.formattedValue||s.formattedValue;let t=s.dataset.label||"";t&&(t+=": ");const e=s.formattedValue;return Wt(e)||(t+=e),t},labelColor(s){const e=s.chart.getDatasetMeta(s.datasetIndex).controller.getStyle(s.dataIndex);return{borderColor:e.borderColor,backgroundColor:e.backgroundColor,borderWidth:e.borderWidth,borderDash:e.borderDash,borderDashOffset:e.borderDashOffset,borderRadius:0}},labelTextColor(){return this.options.bodyColor},labelPointStyle(s){const e=s.chart.getDatasetMeta(s.datasetIndex).controller.getStyle(s.dataIndex);return{pointStyle:e.pointStyle,rotation:e.rotation}},afterLabel:Xn,afterBody:Xn,beforeFooter:Xn,footer:Xn,afterFooter:Xn};function He(s,t,e,n){const i=s[t].call(e,n);return typeof i>"u"?lm[t].call(e,n):i}class Yl extends wn{constructor(t){super(),this.opacity=0,this._active=[],this._eventPosition=void 0,this._size=void 0,this._cachedAnimations=void 0,this._tooltipItems=[],this.$animations=void 0,this.$context=void 0,this.chart=t.chart,this.options=t.options,this.dataPoints=void 0,this.title=void 0,this.beforeBody=void 0,this.body=void 0,this.afterBody=void 0,this.footer=void 0,this.xAlign=void 0,this.yAlign=void 0,this.x=void 0,this.y=void 0,this.height=void 0,this.width=void 0,this.caretX=void 0,this.caretY=void 0,this.labelColors=void 0,this.labelPointStyles=void 0,this.labelTextColors=void 0}initialize(t){this.options=t,this._cachedAnimations=void 0,this.$context=void 0}_resolveAnimations(){const t=this._cachedAnimations;if(t)return t;const e=this.chart,n=this.options.setContext(this.getContext()),i=n.enabled&&e.options.animation&&n.animations,r=new Vp(this.chart,i);return i._cacheable&&(this._cachedAnimations=Object.freeze(r)),r}getContext(){return this.$context||(this.$context=nC(this.chart.getContext(),this,this._tooltipItems))}getTitle(t,e){const{callbacks:n}=e,i=He(n,"beforeTitle",this,t),r=He(n,"title",this,t),o=He(n,"afterTitle",this,t);let a=[];return a=Pn(a,$n(i)),a=Pn(a,$n(r)),a=Pn(a,$n(o)),a}getBeforeBody(t,e){return rf(He(e.callbacks,"beforeBody",this,t))}getBody(t,e){const{callbacks:n}=e,i=[];return jt(t,r=>{const o={before:[],lines:[],after:[]},a=of(n,r);Pn(o.before,$n(He(a,"beforeLabel",this,r))),Pn(o.lines,He(a,"label",this,r)),Pn(o.after,$n(He(a,"afterLabel",this,r))),i.push(o)}),i}getAfterBody(t,e){return rf(He(e.callbacks,"afterBody",this,t))}getFooter(t,e){const{callbacks:n}=e,i=He(n,"beforeFooter",this,t),r=He(n,"footer",this,t),o=He(n,"afterFooter",this,t);let a=[];return a=Pn(a,$n(i)),a=Pn(a,$n(r)),a=Pn(a,$n(o)),a}_createItems(t){const e=this._active,n=this.chart.data,i=[],r=[],o=[];let a=[],l,c;for(l=0,c=e.length;l<c;++l)a.push(KT(this.chart,e[l]));return t.filter&&(a=a.filter((h,u,d)=>t.filter(h,u,d,n))),t.itemSort&&(a=a.sort((h,u)=>t.itemSort(h,u,n))),jt(a,h=>{const u=of(t.callbacks,h);i.push(He(u,"labelColor",this,h)),r.push(He(u,"labelPointStyle",this,h)),o.push(He(u,"labelTextColor",this,h))}),this.labelColors=i,this.labelPointStyles=r,this.labelTextColors=o,this.dataPoints=a,a}update(t,e){const n=this.options.setContext(this.getContext()),i=this._active;let r,o=[];if(!i.length)this.opacity!==0&&(r={opacity:0});else{const a=gr[n.position].call(this,i,this._eventPosition);o=this._createItems(n),this.title=this.getTitle(o,n),this.beforeBody=this.getBeforeBody(o,n),this.body=this.getBody(o,n),this.afterBody=this.getAfterBody(o,n),this.footer=this.getFooter(o,n);const l=this._size=ef(this,n),c=Object.assign({},a,l),h=nf(this.chart,n,c),u=sf(n,c,h,this.chart);this.xAlign=h.xAlign,this.yAlign=h.yAlign,r={opacity:1,x:u.x,y:u.y,width:l.width,height:l.height,caretX:a.x,caretY:a.y}}this._tooltipItems=o,this.$context=void 0,r&&this._resolveAnimations().update(this,r),t&&n.external&&n.external.call(this,{chart:this.chart,tooltip:this,replay:e})}drawCaret(t,e,n,i){const r=this.getCaretPosition(t,n,i);e.lineTo(r.x1,r.y1),e.lineTo(r.x2,r.y2),e.lineTo(r.x3,r.y3)}getCaretPosition(t,e,n){const{xAlign:i,yAlign:r}=this,{caretSize:o,cornerRadius:a}=n,{topLeft:l,topRight:c,bottomLeft:h,bottomRight:u}=Xi(a),{x:d,y:f}=t,{width:g,height:_}=e;let m,p,x,w,v,y;return r==="center"?(v=f+_/2,i==="left"?(m=d,p=m-o,w=v+o,y=v-o):(m=d+g,p=m+o,w=v-o,y=v+o),x=m):(i==="left"?p=d+Math.max(l,h)+o:i==="right"?p=d+g-Math.max(c,u)-o:p=this.caretX,r==="top"?(w=f,v=w-o,m=p-o,x=p+o):(w=f+_,v=w+o,m=p+o,x=p-o),y=w),{x1:m,x2:p,x3:x,y1:w,y2:v,y3:y}}drawTitle(t,e,n){const i=this.title,r=i.length;let o,a,l;if(r){const c=Os(n.rtl,this.x,this.width);for(t.x=zo(this,n.titleAlign,n),e.textAlign=c.textAlign(n.titleAlign),e.textBaseline="middle",o=be(n.titleFont),a=n.titleSpacing,e.fillStyle=n.titleColor,e.font=o.string,l=0;l<r;++l)e.fillText(i[l],c.x(t.x),t.y+o.lineHeight/2),t.y+=o.lineHeight+a,l+1===r&&(t.y+=n.titleMarginBottom-a)}}_drawColorBox(t,e,n,i,r){const o=this.labelColors[n],a=this.labelPointStyles[n],{boxHeight:l,boxWidth:c}=r,h=be(r.bodyFont),u=zo(this,"left",r),d=i.x(u),f=l<h.lineHeight?(h.lineHeight-l)/2:0,g=e.y+f;if(r.usePointStyle){const _={radius:Math.min(c,l)/2,pointStyle:a.pointStyle,rotation:a.rotation,borderWidth:1},m=i.leftForLtr(d,c)+c/2,p=g+l/2;t.strokeStyle=r.multiKeyBackground,t.fillStyle=r.multiKeyBackground,Vl(t,_,m,p),t.strokeStyle=o.borderColor,t.fillStyle=o.backgroundColor,Vl(t,_,m,p)}else{t.lineWidth=Bt(o.borderWidth)?Math.max(...Object.values(o.borderWidth)):o.borderWidth||1,t.strokeStyle=o.borderColor,t.setLineDash(o.borderDash||[]),t.lineDashOffset=o.borderDashOffset||0;const _=i.leftForLtr(d,c),m=i.leftForLtr(i.xPlus(d,1),c-2),p=Xi(o.borderRadius);Object.values(p).some(x=>x!==0)?(t.beginPath(),t.fillStyle=r.multiKeyBackground,zr(t,{x:_,y:g,w:c,h:l,radius:p}),t.fill(),t.stroke(),t.fillStyle=o.backgroundColor,t.beginPath(),zr(t,{x:m,y:g+1,w:c-2,h:l-2,radius:p}),t.fill()):(t.fillStyle=r.multiKeyBackground,t.fillRect(_,g,c,l),t.strokeRect(_,g,c,l),t.fillStyle=o.backgroundColor,t.fillRect(m,g+1,c-2,l-2))}t.fillStyle=this.labelTextColors[n]}drawBody(t,e,n){const{body:i}=this,{bodySpacing:r,bodyAlign:o,displayColors:a,boxHeight:l,boxWidth:c,boxPadding:h}=n,u=be(n.bodyFont);let d=u.lineHeight,f=0;const g=Os(n.rtl,this.x,this.width),_=function(A){e.fillText(A,g.x(t.x+f),t.y+d/2),t.y+=d+r},m=g.textAlign(o);let p,x,w,v,y,S,T;for(e.textAlign=o,e.textBaseline="middle",e.font=u.string,t.x=zo(this,m,n),e.fillStyle=n.bodyColor,jt(this.beforeBody,_),f=a&&m!=="right"?o==="center"?c/2+h:c+2+h:0,v=0,S=i.length;v<S;++v){for(p=i[v],x=this.labelTextColors[v],e.fillStyle=x,jt(p.before,_),w=p.lines,a&&w.length&&(this._drawColorBox(e,t,v,g,n),d=Math.max(u.lineHeight,l)),y=0,T=w.length;y<T;++y)_(w[y]),d=u.lineHeight;jt(p.after,_)}f=0,d=u.lineHeight,jt(this.afterBody,_),t.y-=r}drawFooter(t,e,n){const i=this.footer,r=i.length;let o,a;if(r){const l=Os(n.rtl,this.x,this.width);for(t.x=zo(this,n.footerAlign,n),t.y+=n.footerMarginTop,e.textAlign=l.textAlign(n.footerAlign),e.textBaseline="middle",o=be(n.footerFont),e.fillStyle=n.footerColor,e.font=o.string,a=0;a<r;++a)e.fillText(i[a],l.x(t.x),t.y+o.lineHeight/2),t.y+=o.lineHeight+n.footerSpacing}}drawBackground(t,e,n,i){const{xAlign:r,yAlign:o}=this,{x:a,y:l}=t,{width:c,height:h}=n,{topLeft:u,topRight:d,bottomLeft:f,bottomRight:g}=Xi(i.cornerRadius);e.fillStyle=i.backgroundColor,e.strokeStyle=i.borderColor,e.lineWidth=i.borderWidth,e.beginPath(),e.moveTo(a+u,l),o==="top"&&this.drawCaret(t,e,n,i),e.lineTo(a+c-d,l),e.quadraticCurveTo(a+c,l,a+c,l+d),o==="center"&&r==="right"&&this.drawCaret(t,e,n,i),e.lineTo(a+c,l+h-g),e.quadraticCurveTo(a+c,l+h,a+c-g,l+h),o==="bottom"&&this.drawCaret(t,e,n,i),e.lineTo(a+f,l+h),e.quadraticCurveTo(a,l+h,a,l+h-f),o==="center"&&r==="left"&&this.drawCaret(t,e,n,i),e.lineTo(a,l+u),e.quadraticCurveTo(a,l,a+u,l),e.closePath(),e.fill(),i.borderWidth>0&&e.stroke()}_updateAnimationTarget(t){const e=this.chart,n=this.$animations,i=n&&n.x,r=n&&n.y;if(i||r){const o=gr[t.position].call(this,this._active,this._eventPosition);if(!o)return;const a=this._size=ef(this,t),l=Object.assign({},o,this._size),c=nf(e,t,l),h=sf(t,l,c,e);(i._to!==h.x||r._to!==h.y)&&(this.xAlign=c.xAlign,this.yAlign=c.yAlign,this.width=a.width,this.height=a.height,this.caretX=o.x,this.caretY=o.y,this._resolveAnimations().update(this,h))}}_willRender(){return!!this.opacity}draw(t){const e=this.options.setContext(this.getContext());let n=this.opacity;if(!n)return;this._updateAnimationTarget(e);const i={width:this.width,height:this.height},r={x:this.x,y:this.y};n=Math.abs(n)<.001?0:n;const o=Oe(e.padding),a=this.title.length||this.beforeBody.length||this.body.length||this.afterBody.length||this.footer.length;e.enabled&&a&&(t.save(),t.globalAlpha=n,this.drawBackground(r,t,i,e),zp(t,e.textDirection),r.y+=o.top,this.drawTitle(r,t,e),this.drawBody(r,t,e),this.drawFooter(r,t,e),kp(t,e.textDirection),t.restore())}getActiveElements(){return this._active||[]}setActiveElements(t,e){const n=this._active,i=t.map(({datasetIndex:a,index:l})=>{const c=this.chart.getDatasetMeta(a);if(!c)throw new Error("Cannot find a dataset at index "+a);return{datasetIndex:a,element:c.data[l],index:l}}),r=!Qo(n,i),o=this._positionChanged(i,e);(r||o)&&(this._active=i,this._eventPosition=e,this._ignoreReplayEvents=!0,this.update(!0))}handleEvent(t,e,n=!0){if(e&&this._ignoreReplayEvents)return!1;this._ignoreReplayEvents=!1;const i=this.options,r=this._active||[],o=this._getActiveElements(t,r,e,n),a=this._positionChanged(o,t),l=e||!Qo(o,r)||a;return l&&(this._active=o,(i.enabled||i.external)&&(this._eventPosition={x:t.x,y:t.y},this.update(!0,e))),l}_getActiveElements(t,e,n,i){const r=this.options;if(t.type==="mouseout")return[];if(!i)return e;const o=this.chart.getElementsAtEventForMode(t,r.mode,r,n);return r.reverse&&o.reverse(),o}_positionChanged(t,e){const{caretX:n,caretY:i,options:r}=this,o=gr[r.position].call(this,t,e);return o!==!1&&(n!==o.x||i!==o.y)}}lt(Yl,"positioners",gr);var iC={id:"tooltip",_element:Yl,positioners:gr,afterInit(s,t,e){e&&(s.tooltip=new Yl({chart:s,options:e}))},beforeUpdate(s,t,e){s.tooltip&&s.tooltip.initialize(e)},reset(s,t,e){s.tooltip&&s.tooltip.initialize(e)},afterDraw(s){const t=s.tooltip;if(t&&t._willRender()){const e={tooltip:t};if(s.notifyPlugins("beforeTooltipDraw",{...e,cancelable:!0})===!1)return;t.draw(s.ctx),s.notifyPlugins("afterTooltipDraw",e)}},afterEvent(s,t){if(s.tooltip){const e=t.replay;s.tooltip.handleEvent(t.event,e,t.inChartArea)&&(t.changed=!0)}},defaults:{enabled:!0,external:null,position:"average",backgroundColor:"rgba(0,0,0,0.8)",titleColor:"#fff",titleFont:{weight:"bold"},titleSpacing:2,titleMarginBottom:6,titleAlign:"left",bodyColor:"#fff",bodySpacing:2,bodyFont:{},bodyAlign:"left",footerColor:"#fff",footerSpacing:2,footerMarginTop:6,footerFont:{weight:"bold"},footerAlign:"left",padding:6,caretPadding:2,caretSize:5,cornerRadius:6,boxHeight:(s,t)=>t.bodyFont.size,boxWidth:(s,t)=>t.bodyFont.size,multiKeyBackground:"#fff",displayColors:!0,boxPadding:0,borderColor:"rgba(0,0,0,0)",borderWidth:0,animation:{duration:400,easing:"easeOutQuart"},animations:{numbers:{type:"number",properties:["x","y","width","height","caretX","caretY"]},opacity:{easing:"linear",duration:200}},callbacks:lm},defaultRoutes:{bodyFont:"font",footerFont:"font",titleFont:"font"},descriptors:{_scriptable:s=>s!=="filter"&&s!=="itemSort"&&s!=="external",_indexable:!1,callbacks:{_scriptable:!1,_indexable:!1},animation:{_fallback:!1},animations:{_fallback:"animation"}},additionalOptionScopes:["interaction"]},sC=Object.freeze({__proto__:null,Colors:gT,Decimation:yT,Filler:UT,Legend:jT,SubTitle:$T,Title:YT,Tooltip:iC});const rC=(s,t,e,n)=>(typeof t=="string"?(e=s.push(t)-1,n.unshift({index:e,label:t})):isNaN(t)&&(e=null),e);function oC(s,t,e,n){const i=s.indexOf(t);if(i===-1)return rC(s,t,e,n);const r=s.lastIndexOf(t);return i!==r?e:i}const aC=(s,t)=>s===null?null:Te(Math.round(s),0,t);function af(s){const t=this.getLabels();return s>=0&&s<t.length?t[s]:s}class $l extends ss{constructor(t){super(t),this._startValue=void 0,this._valueRange=0,this._addedLabels=[]}init(t){const e=this._addedLabels;if(e.length){const n=this.getLabels();for(const{index:i,label:r}of e)n[i]===r&&n.splice(i,1);this._addedLabels=[]}super.init(t)}parse(t,e){if(Wt(t))return null;const n=this.getLabels();return e=isFinite(e)&&n[e]===t?e:oC(n,t,Rt(e,t),this._addedLabels),aC(e,n.length-1)}determineDataLimits(){const{minDefined:t,maxDefined:e}=this.getUserBounds();let{min:n,max:i}=this.getMinMax(!0);this.options.bounds==="ticks"&&(t||(n=0),e||(i=this.getLabels().length-1)),this.min=n,this.max=i}buildTicks(){const t=this.min,e=this.max,n=this.options.offset,i=[];let r=this.getLabels();r=t===0&&e===r.length-1?r:r.slice(t,e+1),this._valueRange=Math.max(r.length-(n?0:1),1),this._startValue=this.min-(n?.5:0);for(let o=t;o<=e;o++)i.push({value:o});return i}getLabelForValue(t){return af.call(this,t)}configure(){super.configure(),this.isHorizontal()||(this._reversePixels=!this._reversePixels)}getPixelForValue(t){return typeof t!="number"&&(t=this.parse(t)),t===null?NaN:this.getPixelForDecimal((t-this._startValue)/this._valueRange)}getPixelForTick(t){const e=this.ticks;return t<0||t>e.length-1?null:this.getPixelForValue(e[t].value)}getValueForPixel(t){return Math.round(this._startValue+this.getDecimalForPixel(t)*this._valueRange)}getBasePixel(){return this.bottom}}lt($l,"id","category"),lt($l,"defaults",{ticks:{callback:af}});function lC(s,t){const e=[],{bounds:i,step:r,min:o,max:a,precision:l,count:c,maxTicks:h,maxDigits:u,includeBounds:d}=s,f=r||1,g=h-1,{min:_,max:m}=t,p=!Wt(o),x=!Wt(a),w=!Wt(c),v=(m-_)/(u+1);let y=td((m-_)/g/f)*f,S,T,A,b;if(y<1e-14&&!p&&!x)return[{value:_},{value:m}];b=Math.ceil(m/y)-Math.floor(_/y),b>g&&(y=td(b*y/g/f)*f),Wt(l)||(S=Math.pow(10,l),y=Math.ceil(y*S)/S),i==="ticks"?(T=Math.floor(_/y)*y,A=Math.ceil(m/y)*y):(T=_,A=m),p&&x&&r&&n1((a-o)/r,y/1e3)?(b=Math.round(Math.min((a-o)/y,h)),y=(a-o)/b,T=o,A=a):w?(T=p?o:T,A=x?a:A,b=c-1,y=(A-T)/b):(b=(A-T)/y,wr(b,Math.round(b),y/1e3)?b=Math.round(b):b=Math.ceil(b));const M=Math.max(ed(y),ed(T));S=Math.pow(10,Wt(l)?M:l),T=Math.round(T*S)/S,A=Math.round(A*S)/S;let L=0;for(p&&(d&&T!==o?(e.push({value:o}),T<o&&L++,wr(Math.round((T+L*y)*S)/S,o,lf(o,v,s))&&L++):T<o&&L++);L<b;++L){const I=Math.round((T+L*y)*S)/S;if(x&&I>a)break;e.push({value:I})}return x&&d&&A!==a?e.length&&wr(e[e.length-1].value,a,lf(a,v,s))?e[e.length-1].value=a:e.push({value:a}):(!x||A===a)&&e.push({value:A}),e}function lf(s,t,{horizontal:e,minRotation:n}){const i=yn(n),r=(e?Math.sin(i):Math.cos(i))||.001,o=.75*t*(""+s).length;return Math.min(t/r,o)}class oa extends ss{constructor(t){super(t),this.start=void 0,this.end=void 0,this._startValue=void 0,this._endValue=void 0,this._valueRange=0}parse(t,e){return Wt(t)||(typeof t=="number"||t instanceof Number)&&!isFinite(+t)?null:+t}handleTickRangeOptions(){const{beginAtZero:t}=this.options,{minDefined:e,maxDefined:n}=this.getUserBounds();let{min:i,max:r}=this;const o=l=>i=e?i:l,a=l=>r=n?r:l;if(t){const l=On(i),c=On(r);l<0&&c<0?a(0):l>0&&c>0&&o(0)}if(i===r){let l=r===0?1:Math.abs(r*.05);a(r+l),t||o(i-l)}this.min=i,this.max=r}getTickLimit(){const t=this.options.ticks;let{maxTicksLimit:e,stepSize:n}=t,i;return n?(i=Math.ceil(this.max/n)-Math.floor(this.min/n)+1,i>1e3&&(console.warn(`scales.${this.id}.ticks.stepSize: ${n} would result generating up to ${i} ticks. Limiting to 1000.`),i=1e3)):(i=this.computeTickLimit(),e=e||11),e&&(i=Math.min(e,i)),i}computeTickLimit(){return Number.POSITIVE_INFINITY}buildTicks(){const t=this.options,e=t.ticks;let n=this.getTickLimit();n=Math.max(2,n);const i={maxTicks:n,bounds:t.bounds,min:t.min,max:t.max,precision:e.precision,step:e.stepSize,count:e.count,maxDigits:this._maxDigits(),horizontal:this.isHorizontal(),minRotation:e.minRotation||0,includeBounds:e.includeBounds!==!1},r=this._range||this,o=lC(i,r);return t.bounds==="ticks"&&xp(o,this,"value"),t.reverse?(o.reverse(),this.start=this.max,this.end=this.min):(this.start=this.min,this.end=this.max),o}configure(){const t=this.ticks;let e=this.min,n=this.max;if(super.configure(),this.options.offset&&t.length){const i=(n-e)/Math.max(t.length-1,1)/2;e-=i,n+=i}this._startValue=e,this._endValue=n,this._valueRange=n-e}getLabelForValue(t){return Gr(t,this.chart.options.locale,this.options.ticks.format)}}class Kl extends oa{determineDataLimits(){const{min:t,max:e}=this.getMinMax(!0);this.min=ce(t)?t:0,this.max=ce(e)?e:1,this.handleTickRangeOptions()}computeTickLimit(){const t=this.isHorizontal(),e=t?this.width:this.height,n=yn(this.options.ticks.minRotation),i=(t?Math.sin(n):Math.cos(n))||.001,r=this._resolveTickFontOptions(0);return Math.ceil(e/Math.min(40,r.lineHeight/i))}getPixelForValue(t){return t===null?NaN:this.getPixelForDecimal((t-this._startValue)/this._valueRange)}getValueForPixel(t){return this._startValue+this.getDecimalForPixel(t)*this._valueRange}}lt(Kl,"id","linear"),lt(Kl,"defaults",{ticks:{callback:ma.formatters.numeric}});const Nr=s=>Math.floor(ui(s)),Ii=(s,t)=>Math.pow(10,Nr(s)+t);function cf(s){return s/Math.pow(10,Nr(s))===1}function hf(s,t,e){const n=Math.pow(10,e),i=Math.floor(s/n);return Math.ceil(t/n)-i}function cC(s,t){const e=t-s;let n=Nr(e);for(;hf(s,t,n)>10;)n++;for(;hf(s,t,n)<10;)n--;return Math.min(n,Nr(s))}function hC(s,{min:t,max:e}){t=Je(s.min,t);const n=[],i=Nr(t);let r=cC(t,e),o=r<0?Math.pow(10,Math.abs(r)):1;const a=Math.pow(10,r),l=i>r?Math.pow(10,i):0,c=Math.round((t-l)*o)/o,h=Math.floor((t-l)/a/10)*a*10;let u=Math.floor((c-h)/Math.pow(10,r)),d=Je(s.min,Math.round((l+h+u*Math.pow(10,r))*o)/o);for(;d<e;)n.push({value:d,major:cf(d),significand:u}),u>=10?u=u<15?15:20:u++,u>=20&&(r++,u=2,o=r>=0?1:o),d=Math.round((l+h+u*Math.pow(10,r))*o)/o;const f=Je(s.max,d);return n.push({value:f,major:cf(f),significand:u}),n}class Zl extends ss{constructor(t){super(t),this.start=void 0,this.end=void 0,this._startValue=void 0,this._valueRange=0}parse(t,e){const n=oa.prototype.parse.apply(this,[t,e]);if(n===0){this._zero=!0;return}return ce(n)&&n>0?n:null}determineDataLimits(){const{min:t,max:e}=this.getMinMax(!0);this.min=ce(t)?Math.max(0,t):null,this.max=ce(e)?Math.max(0,e):null,this.options.beginAtZero&&(this._zero=!0),this._zero&&this.min!==this._suggestedMin&&!ce(this._userMin)&&(this.min=t===Ii(this.min,0)?Ii(this.min,-1):Ii(this.min,0)),this.handleTickRangeOptions()}handleTickRangeOptions(){const{minDefined:t,maxDefined:e}=this.getUserBounds();let n=this.min,i=this.max;const r=a=>n=t?n:a,o=a=>i=e?i:a;n===i&&(n<=0?(r(1),o(10)):(r(Ii(n,-1)),o(Ii(i,1)))),n<=0&&r(Ii(i,-1)),i<=0&&o(Ii(n,1)),this.min=n,this.max=i}buildTicks(){const t=this.options,e={min:this._userMin,max:this._userMax},n=hC(e,this);return t.bounds==="ticks"&&xp(n,this,"value"),t.reverse?(n.reverse(),this.start=this.max,this.end=this.min):(this.start=this.min,this.end=this.max),n}getLabelForValue(t){return t===void 0?"0":Gr(t,this.chart.options.locale,this.options.ticks.format)}configure(){const t=this.min;super.configure(),this._startValue=ui(t),this._valueRange=ui(this.max)-ui(t)}getPixelForValue(t){return(t===void 0||t===0)&&(t=this.min),t===null||isNaN(t)?NaN:this.getPixelForDecimal(t===this.min?0:(ui(t)-this._startValue)/this._valueRange)}getValueForPixel(t){const e=this.getDecimalForPixel(t);return Math.pow(10,this._startValue+e*this._valueRange)}}lt(Zl,"id","logarithmic"),lt(Zl,"defaults",{ticks:{callback:ma.formatters.logarithmic,major:{enabled:!0}}});function Jl(s){const t=s.ticks;if(t.display&&s.display){const e=Oe(t.backdropPadding);return Rt(t.font&&t.font.size,ue.font.size)+e.height}return 0}function uC(s,t,e){return e=ne(e)?e:[e],{w:v1(s,t.string,e),h:e.length*t.lineHeight}}function uf(s,t,e,n,i){return s===n||s===i?{start:t-e/2,end:t+e/2}:s<n||s>i?{start:t-e,end:t}:{start:t,end:t+e}}function dC(s){const t={l:s.left+s._padding.left,r:s.right-s._padding.right,t:s.top+s._padding.top,b:s.bottom-s._padding.bottom},e=Object.assign({},t),n=[],i=[],r=s._pointLabels.length,o=s.options.pointLabels,a=o.centerPointLabels?se/r:0;for(let l=0;l<r;l++){const c=o.setContext(s.getPointLabelContext(l));i[l]=c.padding;const h=s.getPointPosition(l,s.drawingArea+i[l],a),u=be(c.font),d=uC(s.ctx,u,s._pointLabels[l]);n[l]=d;const f=Qe(s.getIndexAngle(l)+a),g=Math.round(bc(f)),_=uf(g,h.x,d.w,0,180),m=uf(g,h.y,d.h,90,270);fC(e,t,f,_,m)}s.setCenterPoint(t.l-e.l,e.r-t.r,t.t-e.t,e.b-t.b),s._pointLabelItems=gC(s,n,i)}function fC(s,t,e,n,i){const r=Math.abs(Math.sin(e)),o=Math.abs(Math.cos(e));let a=0,l=0;n.start<t.l?(a=(t.l-n.start)/r,s.l=Math.min(s.l,t.l-a)):n.end>t.r&&(a=(n.end-t.r)/r,s.r=Math.max(s.r,t.r+a)),i.start<t.t?(l=(t.t-i.start)/o,s.t=Math.min(s.t,t.t-l)):i.end>t.b&&(l=(i.end-t.b)/o,s.b=Math.max(s.b,t.b+l))}function pC(s,t,e){const n=s.drawingArea,{extra:i,additionalAngle:r,padding:o,size:a}=e,l=s.getPointPosition(t,n+i+o,r),c=Math.round(bc(Qe(l.angle+he))),h=vC(l.y,a.h,c),u=_C(c),d=xC(l.x,a.w,u);return{visible:!0,x:l.x,y:h,textAlign:u,left:d,top:h,right:d+a.w,bottom:h+a.h}}function mC(s,t){if(!t)return!0;const{left:e,top:n,right:i,bottom:r}=s;return!(ni({x:e,y:n},t)||ni({x:e,y:r},t)||ni({x:i,y:n},t)||ni({x:i,y:r},t))}function gC(s,t,e){const n=[],i=s._pointLabels.length,r=s.options,{centerPointLabels:o,display:a}=r.pointLabels,l={extra:Jl(r)/2,additionalAngle:o?se/i:0};let c;for(let h=0;h<i;h++){l.padding=e[h],l.size=t[h];const u=pC(s,h,l);n.push(u),a==="auto"&&(u.visible=mC(u,c),u.visible&&(c=u))}return n}function _C(s){return s===0||s===180?"center":s<180?"left":"right"}function xC(s,t,e){return e==="right"?s-=t:e==="center"&&(s-=t/2),s}function vC(s,t,e){return e===90||e===270?s-=t/2:(e>270||e<90)&&(s-=t),s}function yC(s,t,e){const{left:n,top:i,right:r,bottom:o}=e,{backdropColor:a}=t;if(!Wt(a)){const l=Xi(t.borderRadius),c=Oe(t.backdropPadding);s.fillStyle=a;const h=n-c.left,u=i-c.top,d=r-n+c.width,f=o-i+c.height;Object.values(l).some(g=>g!==0)?(s.beginPath(),zr(s,{x:h,y:u,w:d,h:f,radius:l}),s.fill()):s.fillRect(h,u,d,f)}}function bC(s,t){const{ctx:e,options:{pointLabels:n}}=s;for(let i=t-1;i>=0;i--){const r=s._pointLabelItems[i];if(!r.visible)continue;const o=n.setContext(s.getPointLabelContext(i));yC(e,o,r);const a=be(o.font),{x:l,y:c,textAlign:h}=r;es(e,s._pointLabels[i],l,c+a.lineHeight/2,a,{color:o.color,textAlign:h,textBaseline:"middle"})}}function cm(s,t,e,n){const{ctx:i}=s;if(e)i.arc(s.xCenter,s.yCenter,t,0,ie);else{let r=s.getPointPosition(0,t);i.moveTo(r.x,r.y);for(let o=1;o<n;o++)r=s.getPointPosition(o,t),i.lineTo(r.x,r.y)}}function MC(s,t,e,n,i){const r=s.ctx,o=t.circular,{color:a,lineWidth:l}=t;!o&&!n||!a||!l||e<0||(r.save(),r.strokeStyle=a,r.lineWidth=l,r.setLineDash(i.dash),r.lineDashOffset=i.dashOffset,r.beginPath(),cm(s,e,o,n),r.closePath(),r.stroke(),r.restore())}function wC(s,t,e){return bi(s,{label:e,index:t,type:"pointLabel"})}class _r extends oa{constructor(t){super(t),this.xCenter=void 0,this.yCenter=void 0,this.drawingArea=void 0,this._pointLabels=[],this._pointLabelItems=[]}setDimensions(){const t=this._padding=Oe(Jl(this.options)/2),e=this.width=this.maxWidth-t.width,n=this.height=this.maxHeight-t.height;this.xCenter=Math.floor(this.left+e/2+t.left),this.yCenter=Math.floor(this.top+n/2+t.top),this.drawingArea=Math.floor(Math.min(e,n)/2)}determineDataLimits(){const{min:t,max:e}=this.getMinMax(!1);this.min=ce(t)&&!isNaN(t)?t:0,this.max=ce(e)&&!isNaN(e)?e:0,this.handleTickRangeOptions()}computeTickLimit(){return Math.ceil(this.drawingArea/Jl(this.options))}generateTickLabels(t){oa.prototype.generateTickLabels.call(this,t),this._pointLabels=this.getLabels().map((e,n)=>{const i=$t(this.options.pointLabels.callback,[e,n],this);return i||i===0?i:""}).filter((e,n)=>this.chart.getDataVisibility(n))}fit(){const t=this.options;t.display&&t.pointLabels.display?dC(this):this.setCenterPoint(0,0,0,0)}setCenterPoint(t,e,n,i){this.xCenter+=Math.floor((t-e)/2),this.yCenter+=Math.floor((n-i)/2),this.drawingArea-=Math.min(this.drawingArea/2,Math.max(t,e,n,i))}getIndexAngle(t){const e=ie/(this._pointLabels.length||1),n=this.options.startAngle||0;return Qe(t*e+yn(n))}getDistanceFromCenterForValue(t){if(Wt(t))return NaN;const e=this.drawingArea/(this.max-this.min);return this.options.reverse?(this.max-t)*e:(t-this.min)*e}getValueForDistanceFromCenter(t){if(Wt(t))return NaN;const e=t/(this.drawingArea/(this.max-this.min));return this.options.reverse?this.max-e:this.min+e}getPointLabelContext(t){const e=this._pointLabels||[];if(t>=0&&t<e.length){const n=e[t];return wC(this.getContext(),t,n)}}getPointPosition(t,e,n=0){const i=this.getIndexAngle(t)-he+n;return{x:Math.cos(i)*e+this.xCenter,y:Math.sin(i)*e+this.yCenter,angle:i}}getPointPositionForValue(t,e){return this.getPointPosition(t,this.getDistanceFromCenterForValue(e))}getBasePosition(t){return this.getPointPositionForValue(t||0,this.getBaseValue())}getPointLabelPosition(t){const{left:e,top:n,right:i,bottom:r}=this._pointLabelItems[t];return{left:e,top:n,right:i,bottom:r}}drawBackground(){const{backgroundColor:t,grid:{circular:e}}=this.options;if(t){const n=this.ctx;n.save(),n.beginPath(),cm(this,this.getDistanceFromCenterForValue(this._endValue),e,this._pointLabels.length),n.closePath(),n.fillStyle=t,n.fill(),n.restore()}}drawGrid(){const t=this.ctx,e=this.options,{angleLines:n,grid:i,border:r}=e,o=this._pointLabels.length;let a,l,c;if(e.pointLabels.display&&bC(this,o),i.display&&this.ticks.forEach((h,u)=>{if(u!==0){l=this.getDistanceFromCenterForValue(h.value);const d=this.getContext(u),f=i.setContext(d),g=r.setContext(d);MC(this,f,l,o,g)}}),n.display){for(t.save(),a=o-1;a>=0;a--){const h=n.setContext(this.getPointLabelContext(a)),{color:u,lineWidth:d}=h;!d||!u||(t.lineWidth=d,t.strokeStyle=u,t.setLineDash(h.borderDash),t.lineDashOffset=h.borderDashOffset,l=this.getDistanceFromCenterForValue(e.ticks.reverse?this.min:this.max),c=this.getPointPosition(a,l),t.beginPath(),t.moveTo(this.xCenter,this.yCenter),t.lineTo(c.x,c.y),t.stroke())}t.restore()}}drawBorder(){}drawLabels(){const t=this.ctx,e=this.options,n=e.ticks;if(!n.display)return;const i=this.getIndexAngle(0);let r,o;t.save(),t.translate(this.xCenter,this.yCenter),t.rotate(i),t.textAlign="center",t.textBaseline="middle",this.ticks.forEach((a,l)=>{if(l===0&&!e.reverse)return;const c=n.setContext(this.getContext(l)),h=be(c.font);if(r=this.getDistanceFromCenterForValue(this.ticks[l].value),c.showLabelBackdrop){t.font=h.string,o=t.measureText(a.label).width,t.fillStyle=c.backdropColor;const u=Oe(c.backdropPadding);t.fillRect(-o/2-u.left,-r-h.size/2-u.top,o+u.width,h.size+u.height)}es(t,a.label,0,-r,h,{color:c.color})}),t.restore()}drawTitle(){}}lt(_r,"id","radialLinear"),lt(_r,"defaults",{display:!0,animate:!0,position:"chartArea",angleLines:{display:!0,lineWidth:1,borderDash:[],borderDashOffset:0},grid:{circular:!1},startAngle:0,ticks:{showLabelBackdrop:!0,callback:ma.formatters.numeric},pointLabels:{backdropColor:void 0,backdropPadding:2,display:!0,font:{size:10},callback(t){return t},padding:5,centerPointLabels:!1}}),lt(_r,"defaultRoutes",{"angleLines.color":"borderColor","pointLabels.color":"color","ticks.color":"color"}),lt(_r,"descriptors",{angleLines:{_fallback:"grid"}});const va={millisecond:{common:!0,size:1,steps:1e3},second:{common:!0,size:1e3,steps:60},minute:{common:!0,size:6e4,steps:60},hour:{common:!0,size:36e5,steps:24},day:{common:!0,size:864e5,steps:30},week:{common:!1,size:6048e5,steps:4},month:{common:!0,size:2628e6,steps:12},quarter:{common:!1,size:7884e6,steps:4},year:{common:!0,size:3154e7}},We=Object.keys(va);function SC(s,t){return s-t}function df(s,t){if(Wt(t))return null;const e=s._adapter,{parser:n,round:i,isoWeekday:r}=s._parseOpts;let o=t;return typeof n=="function"&&(o=n(o)),ce(o)||(o=typeof n=="string"?e.parse(o,n):e.parse(o)),o===null?null:(i&&(o=i==="week"&&(Hs(r)||r===!0)?e.startOf(o,"isoWeek",r):e.startOf(o,i)),+o)}function ff(s,t,e,n){const i=We.length;for(let r=We.indexOf(s);r<i-1;++r){const o=va[We[r]],a=o.steps?o.steps:Number.MAX_SAFE_INTEGER;if(o.common&&Math.ceil((e-t)/(a*o.size))<=n)return We[r]}return We[i-1]}function EC(s,t,e,n,i){for(let r=We.length-1;r>=We.indexOf(e);r--){const o=We[r];if(va[o].common&&s._adapter.diff(i,n,o)>=t-1)return o}return We[e?We.indexOf(e):0]}function AC(s){for(let t=We.indexOf(s)+1,e=We.length;t<e;++t)if(va[We[t]].common)return We[t]}function pf(s,t,e){if(!e)s[t]=!0;else if(e.length){const{lo:n,hi:i}=Mc(e,t),r=e[n]>=t?e[n]:e[i];s[r]=!0}}function TC(s,t,e,n){const i=s._adapter,r=+i.startOf(t[0].value,n),o=t[t.length-1].value;let a,l;for(a=r;a<=o;a=+i.add(a,1,n))l=e[a],l>=0&&(t[l].major=!0);return t}function mf(s,t,e){const n=[],i={},r=t.length;let o,a;for(o=0;o<r;++o)a=t[o],i[a]=o,n.push({value:a,major:!1});return r===0||!e?n:TC(s,n,i,e)}class Br extends ss{constructor(t){super(t),this._cache={data:[],labels:[],all:[]},this._unit="day",this._majorUnit=void 0,this._offsets={},this._normalized=!1,this._parseOpts=void 0}init(t,e={}){const n=t.time||(t.time={}),i=this._adapter=new OE._date(t.adapters.date);i.init(e),Mr(n.displayFormats,i.formats()),this._parseOpts={parser:n.parser,round:n.round,isoWeekday:n.isoWeekday},super.init(t),this._normalized=e.normalized}parse(t,e){return t===void 0?null:df(this,t)}beforeLayout(){super.beforeLayout(),this._cache={data:[],labels:[],all:[]}}determineDataLimits(){const t=this.options,e=this._adapter,n=t.time.unit||"day";let{min:i,max:r,minDefined:o,maxDefined:a}=this.getUserBounds();function l(c){!o&&!isNaN(c.min)&&(i=Math.min(i,c.min)),!a&&!isNaN(c.max)&&(r=Math.max(r,c.max))}(!o||!a)&&(l(this._getLabelBounds()),(t.bounds!=="ticks"||t.ticks.source!=="labels")&&l(this.getMinMax(!1))),i=ce(i)&&!isNaN(i)?i:+e.startOf(Date.now(),n),r=ce(r)&&!isNaN(r)?r:+e.endOf(Date.now(),n)+1,this.min=Math.min(i,r-1),this.max=Math.max(i+1,r)}_getLabelBounds(){const t=this.getLabelTimestamps();let e=Number.POSITIVE_INFINITY,n=Number.NEGATIVE_INFINITY;return t.length&&(e=t[0],n=t[t.length-1]),{min:e,max:n}}buildTicks(){const t=this.options,e=t.time,n=t.ticks,i=n.source==="labels"?this.getLabelTimestamps():this._generate();t.bounds==="ticks"&&i.length&&(this.min=this._userMin||i[0],this.max=this._userMax||i[i.length-1]);const r=this.min,o=this.max,a=o1(i,r,o);return this._unit=e.unit||(n.autoSkip?ff(e.minUnit,this.min,this.max,this._getLabelCapacity(r)):EC(this,a.length,e.minUnit,this.min,this.max)),this._majorUnit=!n.major.enabled||this._unit==="year"?void 0:AC(this._unit),this.initOffsets(i),t.reverse&&a.reverse(),mf(this,a,this._majorUnit)}afterAutoSkip(){this.options.offsetAfterAutoskip&&this.initOffsets(this.ticks.map(t=>+t.value))}initOffsets(t=[]){let e=0,n=0,i,r;this.options.offset&&t.length&&(i=this.getDecimalForValue(t[0]),t.length===1?e=1-i:e=(this.getDecimalForValue(t[1])-i)/2,r=this.getDecimalForValue(t[t.length-1]),t.length===1?n=r:n=(r-this.getDecimalForValue(t[t.length-2]))/2);const o=t.length<3?.5:.25;e=Te(e,0,o),n=Te(n,0,o),this._offsets={start:e,end:n,factor:1/(e+1+n)}}_generate(){const t=this._adapter,e=this.min,n=this.max,i=this.options,r=i.time,o=r.unit||ff(r.minUnit,e,n,this._getLabelCapacity(e)),a=Rt(i.ticks.stepSize,1),l=o==="week"?r.isoWeekday:!1,c=Hs(l)||l===!0,h={};let u=e,d,f;if(c&&(u=+t.startOf(u,"isoWeek",l)),u=+t.startOf(u,c?"day":o),t.diff(n,e,o)>1e5*a)throw new Error(e+" and "+n+" are too far apart with stepSize of "+a+" "+o);const g=i.ticks.source==="data"&&this.getDataTimestamps();for(d=u,f=0;d<n;d=+t.add(d,a,o),f++)pf(h,d,g);return(d===n||i.bounds==="ticks"||f===1)&&pf(h,d,g),Object.keys(h).sort((_,m)=>_-m).map(_=>+_)}getLabelForValue(t){const e=this._adapter,n=this.options.time;return n.tooltipFormat?e.format(t,n.tooltipFormat):e.format(t,n.displayFormats.datetime)}format(t,e){const i=this.options.time.displayFormats,r=this._unit,o=e||i[r];return this._adapter.format(t,o)}_tickFormatFunction(t,e,n,i){const r=this.options,o=r.ticks.callback;if(o)return $t(o,[t,e,n],this);const a=r.time.displayFormats,l=this._unit,c=this._majorUnit,h=l&&a[l],u=c&&a[c],d=n[e],f=c&&u&&d&&d.major;return this._adapter.format(t,i||(f?u:h))}generateTickLabels(t){let e,n,i;for(e=0,n=t.length;e<n;++e)i=t[e],i.label=this._tickFormatFunction(i.value,e,t)}getDecimalForValue(t){return t===null?NaN:(t-this.min)/(this.max-this.min)}getPixelForValue(t){const e=this._offsets,n=this.getDecimalForValue(t);return this.getPixelForDecimal((e.start+n)*e.factor)}getValueForPixel(t){const e=this._offsets,n=this.getDecimalForPixel(t)/e.factor-e.end;return this.min+n*(this.max-this.min)}_getLabelSize(t){const e=this.options.ticks,n=this.ctx.measureText(t).width,i=yn(this.isHorizontal()?e.maxRotation:e.minRotation),r=Math.cos(i),o=Math.sin(i),a=this._resolveTickFontOptions(0).size;return{w:n*r+a*o,h:n*o+a*r}}_getLabelCapacity(t){const e=this.options.time,n=e.displayFormats,i=n[e.unit]||n.millisecond,r=this._tickFormatFunction(t,0,mf(this,[t],this._majorUnit),i),o=this._getLabelSize(r),a=Math.floor(this.isHorizontal()?this.width/o.w:this.height/o.h)-1;return a>0?a:1}getDataTimestamps(){let t=this._cache.data||[],e,n;if(t.length)return t;const i=this.getMatchingVisibleMetas();if(this._normalized&&i.length)return this._cache.data=i[0].controller.getAllParsedValues(this);for(e=0,n=i.length;e<n;++e)t=t.concat(i[e].controller.getAllParsedValues(this));return this._cache.data=this.normalize(t)}getLabelTimestamps(){const t=this._cache.labels||[];let e,n;if(t.length)return t;const i=this.getLabels();for(e=0,n=i.length;e<n;++e)t.push(df(this,i[e]));return this._cache.labels=this._normalized?t:this.normalize(t)}normalize(t){return bp(t.sort(SC))}}lt(Br,"id","time"),lt(Br,"defaults",{bounds:"data",adapters:{},time:{parser:!1,unit:!1,round:!1,isoWeekday:!1,minUnit:"millisecond",displayFormats:{}},ticks:{source:"auto",callback:!1,major:{enabled:!1}}});function ko(s,t,e){let n=0,i=s.length-1,r,o,a,l;e?(t>=s[n].pos&&t<=s[i].pos&&({lo:n,hi:i}=ei(s,"pos",t)),{pos:r,time:a}=s[n],{pos:o,time:l}=s[i]):(t>=s[n].time&&t<=s[i].time&&({lo:n,hi:i}=ei(s,"time",t)),{time:r,pos:a}=s[n],{time:o,pos:l}=s[i]);const c=o-r;return c?a+(l-a)*(t-r)/c:a}class Ql extends Br{constructor(t){super(t),this._table=[],this._minPos=void 0,this._tableRange=void 0}initOffsets(){const t=this._getTimestampsForTable(),e=this._table=this.buildLookupTable(t);this._minPos=ko(e,this.min),this._tableRange=ko(e,this.max)-this._minPos,super.initOffsets(t)}buildLookupTable(t){const{min:e,max:n}=this,i=[],r=[];let o,a,l,c,h;for(o=0,a=t.length;o<a;++o)c=t[o],c>=e&&c<=n&&i.push(c);if(i.length<2)return[{time:e,pos:0},{time:n,pos:1}];for(o=0,a=i.length;o<a;++o)h=i[o+1],l=i[o-1],c=i[o],Math.round((h+l)/2)!==c&&r.push({time:c,pos:o/(a-1)});return r}_getTimestampsForTable(){let t=this._cache.all||[];if(t.length)return t;const e=this.getDataTimestamps(),n=this.getLabelTimestamps();return e.length&&n.length?t=this.normalize(e.concat(n)):t=e.length?e:n,t=this._cache.all=t,t}getDecimalForValue(t){return(ko(this._table,t)-this._minPos)/this._tableRange}getValueForPixel(t){const e=this._offsets,n=this.getDecimalForPixel(t)/e.factor-e.end;return ko(this._table,n*this._tableRange+this._minPos,!0)}}lt(Ql,"id","timeseries"),lt(Ql,"defaults",Br.defaults);var CC=Object.freeze({__proto__:null,CategoryScale:$l,LinearScale:Kl,LogarithmicScale:Zl,RadialLinearScale:_r,TimeScale:Br,TimeSeriesScale:Ql});const PC=[FE,hT,sC,CC];Zn.register(...PC);class LC{constructor(){this.newChart()}pushData(t,e){let n=t.sort((a,l)=>l.fitness-a.fitness),i={fitness:0,distanceTraveled:0,hasFinished:!1,timeInSteps:0},r=0;this.chart.data.labels.push(e),e===1&&this.chart.data.datasets.push({borderColor:"darkblue"}),n.forEach((a,l)=>{this.chart.data.datasets[l+1]?this.chart.data.datasets[l+1].data.push({x:e,fitnessData:{distanceTraveled:a.distanceTraveled,hasFinished:a.hasFinished,timeInSteps:a.timeInSteps,fitness:a.fitness,vehGen:tn(a.oldVehicleGen)}}):this.chart.data.datasets.push({data:[{x:e,fitnessData:{distanceTraveled:a.distanceTraveled,hasFinished:a.hasFinished,timeInSteps:a.timeInSteps,fitness:a.fitness,vehGen:tn(a.oldVehicleGen)}}],borderColor:"lightblue",borderWidth:2,parsing:{yAxisKey:"fitnessData.fitness"}}),i.fitness=i.fitness+a.fitness,i.distanceTraveled=i.distanceTraveled+a.distanceTraveled,i.timeInSteps=i.timeInSteps+a.timeInSteps,a.hasFinished&&r++}),this.chart.update();let o=t.length;this.chart.data.datasets[0].data.push({x:e,fitnessData:{distanceTraveled:i.distanceTraveled/o,hasFinished:r/o>.5,timeInSteps:i.timeInSteps/o,fitness:i.fitness/o,vehGen:[[]]}}),this.chart.update()}resetData(){this.chart.destroy(),this.newChart()}newChart(){this.chart=new Zn(document.getElementById("fitnessChart"),{type:"line",options:{parsing:{xAxisKey:"x",yAxisKey:"fitnessData.fitness"},animation:!1,plugins:{legend:{display:!1},tooltip:{enabled:!0,titleFont:{size:17},bodyFont:{size:16},callbacks:{title:function(t){return t[0].datasetIndex===0?"Median":t.length>1?`Place Nr. ${t[0].datasetIndex} to Nr. ${t[0].datasetIndex+t.length-1}`:`Place Nr. ${t[0].datasetIndex}`},afterLabel:function(t){let e=t.dataset.data[t.dataIndex].fitnessData,n=`Distance traveled: ${Pi(e.distanceTraveled)} meters.`;return e.hasFinished?n+=`
Finished in ${Pi(e.timeInSteps/60)} seconds :).`:n+=`
Died after ${Pi(e.timeInSteps/60)} seconds :(.`,n+=`
Average speed: ${Pi(e.distanceTraveled/(e.timeInSteps/60))} meters per second.`,n}}}},scales:{y:{beginAtZero:!0,title:{text:"Fitness score",display:!0}},x:{title:{text:"Generations",display:!0}}}}})}logData(){let t="",e="",n="";this.chart.data.datasets[0].data.forEach((r,o)=>{t+="("+o+", "+String(Pi(r.fitnessData.fitness))+"), "}),this.chart.data.datasets[1].data.forEach((r,o)=>{e+="("+o+", "+String(Pi(r.fitnessData.fitness))+"), "}),this.chart.data.datasets[this.chart.data.datasets.length-1].data.forEach((r,o)=>{n+="("+o+", "+String(Pi(r.fitnessData.fitness))+"), "});let i=this.chart.data.datasets[1].data[this.chart.data.datasets[1].data.length-1].fitnessData.vehGen;console.log(i[0]+"|"+i[1]),console.log("Median: "+t),console.log("First: "+e),console.log("Last: "+n)}}class RC{constructor(t,e,n){this.populationStore=new Map,this.currentGen=1,this.worldIdCounter=0,this.worldAmount=0,this.batchSize=0,this.batchAmount=0,this.lastBatchSize=0,this.lastBatchAmount=0,this.currentBatch=-1,this.worldCounter=1,this.dataStore=new LC,this.worldAmount=t,this.batchSize=e,this.batchAmount=n-1,this.currentPopulationManager=new ml(this.batchSize*(1+this.batchAmount),this.batchSize)}next(t,e,n,i,r,o,a,l,c,h,u,d){var g;this.currentBatch<this.batchAmount?this.currentBatch++:(this.dataStore.pushData(this.currentPopulationManager.fitnessData,this.currentGen),this.populationStore.set(this.worldCounter,this.currentPopulationManager.createNextGeneration(l,c,h)),this.lastBatchSize=this.batchSize,this.lastBatchAmount=this.batchAmount,this.batchSize=o,this.batchAmount=a-1,this.currentPopulationManager=new ml(this.batchSize*(1+this.batchAmount),this.batchSize),this.currentBatch=0,this.worldCounter<this.worldAmount?this.worldCounter++:(this.worldCounter=1,this.currentGen++));let f=(g=this.populationStore.get(this.worldCounter))==null?void 0:g.slice(this.lastBatchSize*this.currentBatch,this.lastBatchSize*this.currentBatch+this.lastBatchSize);return f=f||[],d.length>0&&d.length<=this.batchSize&&(f=f.slice(this.batchSize-d.length),f=f.concat(d)),this.currentWorld=new _S(r?void 0:t,e,n,i,u,this.worldIdCounter++,f,this.currentPopulationManager,!r),this.currentWorld}reset(t,e){this.dataStore.resetData(),this.populationStore.clear(),this.currentBatch=-1,this.worldCounter=1,this.currentGen=1,t&&(this.batchSize=t),e&&(this.batchAmount=e-1),this.currentPopulationManager=new ml(this.batchSize*(1+this.batchAmount),this.batchSize)}}let Cs,lr,Qn,Ni,Fn,tc,In,DC={friction:.6,restitution:.2,contactEquationRelaxation:10,frictionEquationStiffness:1e5},IC={allowSleep:!0,quatNormalizeFast:!1,quatNormalizeSkip:0},Ic=[0,-9.82,0];const FC=1/60;let OC=[0,0,0,0,15,10,0,10,0,10,0,20,20,10,-20,0,-30,0,10,20,30,20,30,40,30,20,-20,0,20,30,-40,0,0,10,30,40,50,40,30,0,-20,-30,-30,-30,-20,-10,0,10,20,30,40,0,0,0,-12,-35,0,0,0],Fc=OC,Oc=5,zC=200;const kC=new $y;let Ps,hm,NC=1,jr=25,Xr=8,zc=.01,kc=300,yi=!0,Ur=0,qs=!1,ec=[],BC="0,0,0,5,0,0,5,0,2,0,0,2,2,4,1, 2, -4,1|1,2,10,1,-3,-5,1,0,2,1,20,1,4,-5,-2,0,1,2,15,1,-3,-5,-1,0",Gi=new RC(NC,jr,Xr),um=document.getElementById("nextGenerationBtn"),dm=document.getElementById("stopBtn"),fm=document.getElementById("continueBtn"),pm=document.getElementById("startSimulationBtn"),UC=document.getElementById("updateVariables"),mm=document.getElementById("fastForward"),gm=document.getElementById("fastForwardBtn"),aa=document.getElementById("autoRunCheckbox"),_m=document.getElementById("realisticWheelsCheckbox"),xm=document.getElementById("gravity"),nc=document.getElementById("gravityInputError"),vm=document.getElementById("batchSize"),ym=document.getElementById("batchSizeInputError"),bm=document.getElementById("amountOfBatches"),Mm=document.getElementById("amountOfBatchesInputError"),wm=document.getElementById("timeout"),Sm=document.getElementById("timeoutInputError"),Em=document.getElementById("mutationRate"),Am=document.getElementById("mutationRateInputError"),Tm=document.getElementById("trackGradients"),Cm=document.getElementById("trackGradientsInputError"),Pm=document.getElementById("trackPieceLengthX"),Lm=document.getElementById("trackPieceLengthXInputError"),Rm=document.getElementById("variablesInputConfirmation"),Dm=document.getElementById("vehicleInput"),VC=document.getElementById("addVehicleBtn"),xr=document.getElementById("vehicleInputConfirmation"),cr=document.getElementById("vehicleInputError"),HC=document.getElementById("selectionTypeSelect"),WC=document.getElementById("crossoverTypeSelect"),GC=document.getElementById("printDataBtn"),qC=document.getElementById("currentBatchInfo");function Xs(s,t,e,n,i,r){dm.disabled=s,fm.disabled=t,pm.disabled=e,um.disabled=n,gm.disabled=i,_m.disabled=r}function Nc(){In==null||In.finishCurrentGen(),qs||Om(),In=Gi.next(Fn,IC,Ic,DC,qs,jr,Xr,zc,parseInt(HC.value),parseInt(WC.value),!_m.checked,ec),ec=[],In.initTrackWithGradients(Fc,Oc,zC,hm,Fn),In.cameraFocus.add(Qn)}function Im(){qC.innerHTML="Generation "+Gi.currentGen+". Currently simulating batch "+(1+Gi.currentBatch)+`.
 Populationsize: `+Gi.batchSize*(Gi.batchAmount+1),mm.value=String(Ur)}function Bc(){Im(),Fm(),xm.value=Ic.toString(),vm.value=String(jr),bm.value=String(Xr),wm.value=String(kc),Em.value=String(zc),Tm.value=Fc.toString(),Pm.value=String(Oc),Rm.hidden=!0,xr.hidden=!0,aa.disabled=!1}function Fm(){ym.hidden=!0,Mm.hidden=!0,nc.hidden=!0,Sm.hidden=!0,Am.hidden=!0,Cm.hidden=!0,Lm.hidden=!0}function jC(){yi=!0,Xs(!1,!0,!1,!0,!1,!1),Nc(),Bc()}function XC(){yi=!0,Xs(!1,!0,!1,!0,!1,!1),Gi.reset(jr,Xr),Nc(),Bc()}function YC(){yi=!1,Xs(!0,!1,!1,!1,!1,!1)}function $C(){yi=!0,Xs(!1,!0,!1,!0,!1,!1)}function ic(){Ur>0?(qs=!0,Im()):(qs=!1,yi=!0,Xs(!1,!0,!1,!0,!1,!1),Bc()),Nc()}function KC(s){return+(Math.round(s*1e5)/1e5)}function ZC(){let s=parseInt(mm.value);s>0&&(Xs(!0,!0,!0,!0,!0,!0),Ur=s,aa.checked=!0,aa.disabled=!0,yi=!0)}function JC(){let s={bodyVectors:[],wheels:[]},t=[],e=Dm.value.split(";");console.log(e);for(let n=0;e.length>n;n++){console.log("here01");let i=e[n].split("|");if(i.length===2){let r=i[0].split(","),o=i[1].split(",");if(r.length%3===0&&r.length>=12)for(let a=0;a<r.length;a+=3){let l=parseFloat(r[a]),c=parseFloat(r[a+1]),h=parseFloat(r[a+2]);if(-20<l&&20>l&&-20<c&&20>c&&-20<h&&20>h)s.bodyVectors.push(new E(l,c,h));else{cr.hidden=!1,xr.hidden=!0;return}}else{cr.hidden=!1,xr.hidden=!0;return}if(o.length%8===0&&o.length>=8)for(let a=0;a<o.length;a+=8){let l={radius:parseFloat(o[a]),width:parseFloat(o[a+1]),density:parseFloat(o[a+2]),stiffness:parseFloat(o[a+3]),posX:parseFloat(o[a+4]),posY:parseFloat(o[a+5]),posZ:parseFloat(o[a+6]),canSteer:parseInt(o[a+7])===1};s.wheels.push(l)}else if(o[0]!=""){cr.hidden=!1,xr.hidden=!0;return}t.push(s)}else{cr.hidden=!1;return}}cr.hidden=!0,xr.hidden=!1,ec=t,console.log("here")}function QC(){let s=!0,t=xm.value.split(","),e=[];t.length!==3?(s=!1,nc.hidden=!1):t.forEach((h,u)=>{let d=parseFloat(h);d>=-100&&d<=100?e[u]=KC(d):(s=!1,nc.hidden=!1)});let n=Tm.value.split(","),i=[];n.forEach((h,u)=>{let d=parseInt(h);d>=-180&&d<=180?i[u]=d:(s=!1,Cm.hidden=!1)});let r=parseFloat(Pm.value);r>0||(s=!1,Lm.hidden=!1);let o=parseInt(vm.value);o>0||(s=!1,ym.hidden=!1);let a=parseInt(bm.value);a>0||(s=!1,Mm.hidden=!1);let l=parseInt(wm.value);l>0||(s=!1,Sm.hidden=!1);let c=parseFloat(Em.value);(c>1||c<0)&&(s=!1,Am.hidden=!1),s&&(Ic=e,jr=o,Xr=a,kc=l,zc=c,Fc=i,Oc=r,Rm.hidden=!1,Fm())}function tP(){Gi.dataStore.logData()}gm.addEventListener("click",ZC);um.addEventListener("click",ic);dm.addEventListener("click",YC);fm.addEventListener("click",$C);pm.addEventListener("click",XC);UC.addEventListener("click",QC);VC.addEventListener("click",JC);GC.addEventListener("click",tP);function eP(){Fn.traverse(function(s){s.geometry&&s.geometry.dispose(),s.material&&(Array.isArray(s.material)?s.material.forEach(function(t){t.dispose()}):s.material.dispose())}),Ps.dispose()}function Om(){eP(),Fn.clear(),Qn=new an(70,window.innerWidth/window.innerHeight,1,500),Qn.position.x=-30,Qn.position.y=40,Qn.position.z=0,Qn.lookAt(new U(0,3,0));let s=new Jy(16777215,.7);Fn.add(s);let t=new nl(16777215,1);t.position.set(20,20,5),Fn.add(t);let e=new nl(16777215,.4);e.position.set(20,20,60),Fn.add(e);let n=new nl(16777215,.4);n.position.set(20,20,-60),Fn.add(n)}function nP(){Fn=new Wy,Ni=new Vf({antialias:!0}),Ni.setClearColor(12571109),Ni.setPixelRatio(window.devicePixelRatio),Ni.setSize(window.innerWidth*.7,window.innerHeight*.7),Om(),lr=document.getElementById("simulationWindow"),lr&&(lr.innerHTML="",tc=Qn.clone(),new Dw(tc,Ni.domElement),Cs=yr(),Cs.domElement.style.position="absolute",Cs.domElement.style.top="10px",Cs.domElement.style.left="10px",lr.appendChild(Cs.domElement),lr.appendChild(Ni.domElement)),new au({color:16557056}),new au({color:10066329})}function iP(){Ps=kC.load("./static/cardboard-texture.jpg"),Ps.wrapS=Tr,Ps.wrapT=Tr,Ps.repeat=new Lt(5,5),hm=new qy({map:Ps})}function gf(){if(In.extendedStep(FC,kc),!In.isActive()&&!qs){let s=document.getElementById("stopBtn");s.disabled=!0,s=document.getElementById("continueBtn"),s.disabled=!0,s=document.getElementById("nextGenerationBtn"),s.disabled=!1}}function sc(){if(qs&&Ur>0){for(;In.isActive();)gf();Ur--,setTimeout(function(){ic(),sc()},5)}else In.isActive()&&yi?gf():aa.checked&&yi&&ic(),Qn.copy(tc),Ni.render(Fn,Qn),requestAnimationFrame(sc),Cs.update()}for(var Cl=0;Cl<=50;Cl++){let s=document.createElement("span");s.innerHTML="&#9608;",s.style.color=kl(Zt.minDensity/10+Cl/50,Zt.maxDensity/10),document.getElementById("color").append(s)}let zm=document.createElement("span"),km=document.createElement("span");km.innerHTML=" Highest Density: 20 m^3/kg ";zm.innerHTML=" Lowest Density: 5 m^3/kg ";document.getElementById("color").prepend(zm);document.getElementById("color").append(km);Dm.value=BC;iP();nP();jC();sc();
